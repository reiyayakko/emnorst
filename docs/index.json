[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/alt/index.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { last, forOf, forIndex, substitute, callOrElse } from \"../utility/index\";\r\nimport { has } from \"../object/index\";\r\n\r\n// TODO: Undefinedな値を削除する {x: undefined, y: null} => {y: null}\r\n\r\nconst testStrings = {\r\n    ReiyayakkoScript: `\r\ncondi = true;\r\n\r\n@if(condi):\r\nthen console.log(\"then\");\r\nelse: {\r\n    console.log(\"else\");\r\n    condi = true;\r\n}\r\n\r\n{}[\"key\"]\r\n`,\r\n    markdown: `\r\n# MarkdownParser\r\n## MarkdownParser\r\n### MarkdownParser\r\n#### MarkdownParser\r\n##### MarkdownParser\r\n###### MarkdownParser\r\n\r\n\\`\\`\\`lang:file.code\r\ncode:\r\n## Title\r\ntaxt\r\ntext\r\nbreak;\r\n\\`\\`\\`\r\n`,\r\n};\r\n\r\n/**\r\n * @typedef charItem\r\n * @property {String | null} type\r\n * @property {String[]} [enable]\r\n * @property {String[]} [disable]\r\n * @property {String[]} [assign]\r\n * @property {any} [meta]\r\n */\r\n\r\nconst typeGen = {\r\n    /**\r\n     * type generator\r\n     * @template T\r\n     * @param {String} type type name\r\n     * @param {T} meta metadata\r\n     * @param {Boolean} assign\r\n     */\r\n    gtype: (type, meta, assign=true)=>Object.assign(\r\n        { type, meta },\r\n        assign && { assign: Object.keys(meta) }\r\n    ),\r\n    length(type){\r\n        return this.gtype(type, { length: 1 });\r\n    },\r\n};\r\n\r\nclass FlatSyntaxMap {\r\n    /**\r\n     * @param {function(typeGen): {[x: string]: *}} pairsGen\r\n     */\r\n    constructor(pairsGen){\r\n        /** @type {any[]} */\r\n        this.map = [];\r\n        this.pairs = pairsGen(typeGen);\r\n    }\r\n    analysis(text){\r\n        forOf(text, (char)=>{\r\n            const charProp = has(this.pairs, char)\r\n                ? this.pairs[char]\r\n                : this.pairs.default;\r\n            const lastItem = substitute([last(this.map), {}]);\r\n            /** @type {charItem} */\r\n            const temp = callOrElse(charProp, charProp, char);\r\n            const charItem = Object.assign({}, temp, { meta: Object.assign({}, temp.meta), char });\r\n            // enable: [\"*\"]\r\n            // disable: []\r\n            if(charItem.assign && lastItem.type === charItem.type)\r\n                forOf(charItem.assign, (propName)=>{\r\n                    lastItem.meta[propName] += charItem.meta[propName];\r\n                });\r\n            else this.map.push(charItem);\r\n        });\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     * @param {charItem} charItem\r\n     * @param {String[]} enableTypes\r\n     */\r\n    _(charItem, enableTypes){\r\n        forOf(enableTypes, (type)=>{\r\n            if(type === \"*\")return null;\r\n            if(type === charItem.type)return null;\r\n            return \"null\";\r\n        });\r\n    }\r\n    toString(){\r\n        const reversePairs = [];\r\n        forOf(Object.entries(this.pairs), ([char, prop])=>{\r\n            reversePairs[prop.type] || (reversePairs[prop.type] = {});\r\n            const key = prop.meta && has(prop.meta, \"unique\")\r\n                ? prop.meta.unique : \"default\";\r\n            reversePairs[prop.type][key] = char;\r\n        });\r\n        return this.map.map((charItem)=>{\r\n            if(charItem.meta.letter)return charItem.meta.letter;\r\n            const key = charItem.meta && has(charItem.meta, \"unique\")\r\n                ? charItem.meta.unique : \"default\";\r\n            const letter = reversePairs[charItem.type][key];\r\n            return letter.repeat(charItem.meta.length) || letter;\r\n        }).join(\"\");\r\n    }\r\n}\r\n\r\nconst fsm = new FlatSyntaxMap((method)=>({\r\n    default(char){\r\n        if(/\\d/.test(char))\r\n            return method.gtype(\"Number\", { letter: char });\r\n        if(/[\\w]/.test(char))\r\n            return method.gtype(\"Alphabet\", { letter: char });\r\n        return method.gtype(\"Letter\", { letter: char });\r\n    },\r\n    \"\\r\"(){ return this[\"\\n\"]; },\r\n    \"\\n\": method.length(\"Line Break\"),\r\n    \" \": method.length(\"Space\"),\r\n    \"'\": method.gtype(\"Single quote\", {\r\n        type: \"String\",\r\n        endTags: [\"Single quote\"],\r\n        pair: true,\r\n    }),\r\n    \"\\\"\": method.gtype(\"Double quote\", {\r\n        type: \"String\",\r\n        endTags: [\"Single quote\"],\r\n        pair: true,\r\n    }),\r\n    \"`\": method.length(\"Accent\"),\r\n    \"#\": method.length(\"Sharp\"),\r\n    \"@\": method.length(\"At\"),\r\n    _: method.length(\"Underscore\"),// hide variable | prop\r\n    $: method.length(\"Dollar\"),// 特殊 variable | prop\r\n    \".\": method.length(\"Dot\"),\r\n    \",\": method.length(\"Comma\"),\r\n    \"=\": method.length(\"Equal\"),\r\n    \"|\": method.length(\"Vertical Line\"),\r\n    \"&\": method.length(\"And\"),\r\n    \"!\": method.length(\"Exclamation\"),\r\n    \"?\": method.length(\"Question\"),\r\n    \":\": method.length(\"Colon\"),\r\n    \";\": method.length(\"SemiColon\"), // 式の終わり\r\n    \"^\": method.length(\"Hat\"),\r\n    \"%\": method.length(\"Percent\"),\r\n    \"+\": method.length(\"Puls\"),\r\n    \"-\": method.length(\"Minus\"),\r\n    \"~\": method.length(\"Tilda\"),\r\n    \"*\": method.length(\"Asterisk\"),\r\n    \"/\": method.length(\"Slash\"),\r\n    \"\\\\\": method.length(\"Back Slash\"),\r\n    \"<\": method.length(\"Less Than\"),\r\n    \">\": method.length(\"Greater Than\"),\r\n    \"(\": method.gtype(\"Parentheses\", { unique: 1 }, false),\r\n    \")\": method.gtype(\"Parentheses\", { unique: 2 }, false),\r\n    \"[\": method.gtype(\"Square brackets\", { unique: 1 }, false),\r\n    \"]\": method.gtype(\"Square brackets\", { unique: 2 }, false),\r\n    \"{\": method.gtype(\"Curly brackets\", { unique: 1 }, false),\r\n    \"}\": method.gtype(\"Curly brackets\", { unique: 2 }, false),\r\n    // endTag: \"}\",\r\n    // pair: true,\r\n}));\r\n\r\n/**\r\n * @typedef {Object} tag\r\n * @property {String[]} endTags\r\n * @property {String} type\r\n * @property {Boolean} [global]\r\n */\r\n\r\nclass AbstractSyntaxTree {\r\n    constructor(flatSyntaxMap){\r\n        this.flatSyntaxMap = flatSyntaxMap.map;\r\n        this.type = \"AST\";\r\n        this.body = {};\r\n    }\r\n    block(now){\r\n        switch(now.type){\r\n        case \"Space\":\r\n        case \"Line Break\":\r\n            return null;\r\n        case \"Double quote\":\r\n        case \"Single quote\":\r\n            this.context.tagStack.push({\r\n                endTags: [now.type],\r\n                type: \"String\"\r\n            });\r\n            return null;\r\n        case \"Parentheses\":\r\n            this.context.tagStack.push({\r\n                endTags: [now.type],\r\n                type: \"Cluster\"\r\n            });\r\n            return null;\r\n        case \"Square brackets\":\r\n            this.context.tagStack.push({\r\n                endTags: [now.type],\r\n                type: \"String\"\r\n            });\r\n            return null;\r\n        case \"Curly brackets\":\r\n            if(now.meta.unique === 1){\r\n                this.context.tagStack.push({\r\n                    endTags: [now.type],// mata.unique === 2\r\n                    type: \"Block\"\r\n                });\r\n                return null;\r\n            }\r\n            return new Error(\"FlatSyntaxMap is incorrect\");\r\n        case \"Slash\":\r\n            if(now.meta.length >= 2){\r\n                this.context.tagStack.push({\r\n                    endTags: [\"Line Break\"],\r\n                    type: \"Comment\"\r\n                });\r\n                return null;\r\n            }\r\n        default:\r\n            return new Error(`Unexpected token (${now.type})`);\r\n        }\r\n    }\r\n    string(){}\r\n    parse(){\r\n        /** @type {Object} */\r\n        const context = this.context = {\r\n            /** @type {tag[]} */\r\n            tagStack: [{\r\n                endTags: [],\r\n                type: \"Block\",\r\n                global: true,\r\n            }],\r\n            escape: false,\r\n        };\r\n        const exception = forIndex(this.flatSyntaxMap.length, (index)=>{\r\n            const now = this.flatSyntaxMap[index];\r\n            const lst = last(context.tagStack);\r\n            console.log(lst, now);\r\n            if(context.escape){\r\n                context.escape = false;\r\n                return void 0;\r\n            }\r\n            // 現在のタグがEndTagsに入っていたら現在のタグ終了\r\n            if(lst.endTags.includes(now.type)){\r\n                context.tagStack.pop();\r\n                return void 0;\r\n            }\r\n            if(now.type === \"Back Slash\"){\r\n                context.escape = true;\r\n            }\r\n            switch(lst.type){\r\n            case \"String\":\r\n                return this.string();\r\n            case \"Block\":\r\n                return this.block(now);\r\n            }\r\n        });\r\n        if(exception)throw exception;\r\n    }\r\n    pair(type){\r\n        this.flatSyntaxMap.slice().findIndex((charItem)=>(\r\n            charItem.type === type && charItem.meta === 2\r\n        ));\r\n    }\r\n}\r\n\r\nconst context = {\r\n    scope: \"function\",\r\n    variables: {\r\n        this: null,\r\n        arguments: [],\r\n    },\r\n};\r\nfsm.analysis(testStrings.ReiyayakkoScript);\r\nfsm.analysis(testStrings.markdown);\r\n// console.log(fsm, fsm.toString());\r\n\r\nconst ast = new AbstractSyntaxTree(fsm);\r\nconsole.log(ast.parse());\r\n\r\nvoid {\r\n    \"<\": \">\",\r\n    \"(\": \")\",\r\n    \"[\": \"]\",\r\n    \"{\": {\r\n        enable: \"*\",\r\n        lineBreak: true,\r\n        endTag: \"}\",\r\n    },\r\n    startTag: {\r\n        enable: [String] || null, // 内部で有効なタグ(終了タグは自動的に追加される)\r\n        lineBreak: Boolean, // 改行を許可\r\n        endTag: String, // 終了タグ\r\n    },\r\n    \"\\\"\": {\r\n        enable: null, // [\"\\\"\"]\r\n        endTag: \"\",\r\n    },\r\n};\r\n\r\n// 予約文字: @, default\r\n\r\n// if then else\r\n\r\n// TODO: イベントハンドラ(エラーもここ？)\r\n// for each...in\r\n// var: (mutable)\r\n// const: (immutable) $global\r\n// String<\"\"|''>, Number<1|+1|-1>, Boolean<true|false>, Object | Map{}, Array[], Event, Function<@function>\r\n// @import @export\r\n// @sleep\r\n// @while()do{continue;break;}\r\n// ブロック内でcontinueにしてループは無くす？\r\n// function = @function()do{\r\n//     @return: context.this, context.arguments;\r\n// }\r\n// 関数内でbreak;してreturn null;\r\n// 他のブロックにbreak;でそのブロックを抜ける。\r\n// break <Number>;で抜けるブロックの深さを指定。\r\n// break 1;はbreak;と同じ\r\n// break 0;はなにもないのと同じ\r\n// class = @class className{\r\n//     propertyName: defaultValue;\r\n//     @init|new|constractor()do{}\r\n//     method()do{\r\n//         //\r\n//     }\r\n//     _method()do{}\r\n//     @static function()do{}\r\n//     @get function()do{}\r\n// }\r\n// _はprivate。実質クラス内変数？\r\n// incetance = class.new()\r\n// global.typeof()\r\n// >, <, <= ,>=, ==, !=\r\n// ? : ;\r\n\r\nconst random = ()=>Math.random().toString(32).substring(2);\r\n// const {R, R: Rei, R:{equals}} = window.reiyayakko;\r\nclass LetterSyntax {\r\n    toString(){\r\n        return this.letter;\r\n    }\r\n    constructor(letter){\r\n        Object.assign(this, {\r\n            type: null,\r\n            letter\r\n        });\r\n        switch(letter){\r\n        case \"\\\\\":\r\n            this.type = \"escape\";\r\n            break;\r\n        case \"\\r\":\r\n        case \"\\n\":\r\n            this.type = \"linebreak\";\r\n            break;\r\n        case R.case.test(/\\s/, letter):\r\n            this.type = \"space\";\r\n            break;\r\n        case \"#\":\r\n            this.type = \"heading\";\r\n            break;\r\n        case \"`\":\r\n            this.type = \"code\";\r\n            break;\r\n        /*\r\n        case \"*\":\r\n            return genType(\"accent\");\r\n        case \"-\":\r\n            return genType(\"list\");\r\n        case \":\":\r\n            return genType(\"colon\");\r\n        case \">\":\r\n            return genType(\"quote\");\r\n        case \"[\":\r\n        case \"]\":\r\n        case \"(\":\r\n        case \")\":\r\n            return genType(\"brackets\");\r\n        case \"~\":\r\n            return genType(\"chilled\");\r\n            if(/\\d/.test(letter))\r\n                return genType(\"number\", letter);\r\n                letterType(letter)\r\n        // */\r\n        default:\r\n            if(typeof letter === \"string\"){\r\n                this.type = \"letter\";\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get tag(){\r\n        return {\r\n            type: \"letter\",\r\n            inner: this.letter\r\n        };\r\n    }\r\n}\r\n\r\nclass Element {\r\n    constructor(){\r\n        Object.assign(this, {\r\n            type: \"frame\",\r\n            data: [],\r\n            attr: {\r\n                key: random()\r\n            }\r\n        });\r\n    }\r\n    overlaid(){}\r\n    prev(index=1, number=this.data.length){\r\n        return this.data[number-index] || {};\r\n    }\r\n    next(index=1, number=0){\r\n        return this.data[number+index] || {};\r\n    }\r\n    append(letter){\r\n        const letterSyntax = new LetterSyntax(letter);\r\n        const last = this.prev();\r\n        if(last.type === letterSyntax.type){\r\n            last.letter += letterSyntax.letter;\r\n        }else{\r\n            if(last.type === \"unknown\")\r\n                this.data.shift();\r\n            this.data.push(letterSyntax);\r\n        }\r\n    }\r\n    nextSercth(type, index=0){\r\n        for(;this.data.length > ++index;){\r\n            const next = this.next(index);\r\n            if(next.type === type)\r\n                return index;\r\n        }\r\n        return null;\r\n    }\r\n    genHtml(index, endIndex, type){\r\n        if(!endIndex)return null;\r\n        const htmlObject = new Element();\r\n        Object.assign(htmlObject, {\r\n            type: \"tag\",\r\n            html: type,\r\n            data: null,\r\n            inner: \"\"\r\n        });\r\n        htmlObject.data = this.data.splice(index, endIndex-index+1, htmlObject);\r\n        console.log(`${this.genHtml.name}: ${index} ~ ${endIndex} > ${type}`);\r\n        return htmlObject;\r\n    }\r\n    tagParse(){\r\n        for(let i = 0;this.data.length > i;i++){\r\n            const letterSyntax = this.data[i];\r\n            switch(letterSyntax.type){\r\n            case \"heading\": {\r\n                const matchIndex = this.nextSercth(\"linebreak\", i);\r\n                const element = this.genHtml(i, matchIndex, `h${letterSyntax.letter.length}`);\r\n                if(element.next().type === \"space\")\r\n                    element.data.splice(1,1);\r\n                for(const data of element.data.slice(1, -1)){\r\n                    element.inner = element.inner.concat(data);\r\n                }\r\n                break;\r\n            }\r\n            case \"code\": {\r\n                const matchIndex = this.nextSercth(\"code\", i);\r\n                const element = this.genHtml(i, matchIndex, \"code\");\r\n                const langEndIdx = element.nextSercth(\"linebreak\");\r\n                if(langEndIdx){\r\n                    const [lang_file] = element.data.splice(1, langEndIdx-1);\r\n                    [element.attr[\"data-lang\"], element.attr[\"data-file\"]] = (\r\n                        lang_file.toString().split(\":\")\r\n                    );\r\n                }\r\n                for(const data of element.data.slice(1, -1)){\r\n                    element.inner = element.inner.concat(data);\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n            }\r\n        }\r\n    }\r\n    get tag(){\r\n        return {\r\n            type: this.html,\r\n            inner: this.inner,\r\n            data: this.attr\r\n        };\r\n    }\r\n    conTag(){\r\n        return this.data.map(value=>value.tag);\r\n    }\r\n}\r\nconst markdownParser = text=>{\r\n    const element = new Element();\r\n    for(const letter of text){\r\n        element.append(letter);\r\n    }\r\n    element.tagParse();\r\n    console.log(element.conTag());\r\n    return element.conTag();\r\n};\r\nwindow.markdownParser = markdownParser;\r\nexport default markdownParser;\r\nconst test = ()=>{\r\n    const hoge = markdownParser(`\r\n# MarkdownParser\r\n## MarkdownParser\r\n### MarkdownParser\r\n#### MarkdownParser\r\n##### MarkdownParser\r\n###### MarkdownParser\r\n\\`\\`\\`lang:file.code\r\ncode:\r\n## Title\r\ntaxt\r\ntext\r\nbreak;\r\n\\`\\`\\`\r\n`);\r\n    console.log(hoge);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/alt/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "testStrings",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~testStrings",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"ReiyayakkoScript\": *, \"markdown\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "typedef",
    "name": "charItem",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~charItem",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String ",
          " null"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "enable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "disable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "assign",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "name": "meta",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "charItem"
    }
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "FlatSyntaxMap",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~FlatSyntaxMap",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(typeGen): {[x: string]: *}"
        ],
        "spread": false,
        "optional": false,
        "name": "pairsGen",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "map",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#map",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "any[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "pairs",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#pairs",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "analysis",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#analysis",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "_",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#_",
    "access": "private",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "charItem"
        ],
        "spread": false,
        "optional": false,
        "name": "charItem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "enableTypes",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "toString",
    "memberof": "src/alt/index.js~FlatSyntaxMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~FlatSyntaxMap#toString",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "fsm",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~fsm",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "src/alt/index.js~FlatSyntaxMap"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "typedef",
    "name": "tag",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~tag",
    "access": "public",
    "description": "",
    "lineNumber": 186,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "endTags",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "global",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "tag"
    }
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "context",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~context",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "type": {
      "types": [
        "{\"scope\": string, \"variables\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "ast",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~ast",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 292,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "random",
    "memberof": "src/alt/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/alt/index.js~random",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 352,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "LetterSyntax",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~LetterSyntax",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 354,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "toString",
    "memberof": "src/alt/index.js~LetterSyntax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~LetterSyntax#toString",
    "access": "public",
    "description": null,
    "lineNumber": 355,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alt/index.js~LetterSyntax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~LetterSyntax#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 358,
    "undocument": true
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "type",
    "memberof": "src/alt/index.js~LetterSyntax",
    "static": false,
    "longname": "src/alt/index.js~LetterSyntax#type",
    "access": "public",
    "description": null,
    "lineNumber": 365,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "tag",
    "memberof": "src/alt/index.js~LetterSyntax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~LetterSyntax#tag",
    "access": "public",
    "description": null,
    "lineNumber": 407,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"inner\": *}"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "Element",
    "memberof": "src/alt/index.js",
    "static": true,
    "longname": "src/alt/index.js~Element",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 415,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 416,
    "undocument": true
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "overlaid",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#overlaid",
    "access": "public",
    "description": null,
    "lineNumber": 425,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "prev",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#prev",
    "access": "public",
    "description": null,
    "lineNumber": 426,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      },
      {
        "name": "number",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "next",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#next",
    "access": "public",
    "description": null,
    "lineNumber": 429,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      },
      {
        "name": "number",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "append",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#append",
    "access": "public",
    "description": null,
    "lineNumber": 432,
    "undocument": true,
    "params": [
      {
        "name": "letter",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "nextSercth",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#nextSercth",
    "access": "public",
    "description": null,
    "lineNumber": 443,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "genHtml",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#genHtml",
    "access": "public",
    "description": null,
    "lineNumber": 451,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      },
      {
        "name": "endIndex",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "tagParse",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#tagParse",
    "access": "public",
    "description": null,
    "lineNumber": 464,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "tag",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#tag",
    "access": "public",
    "description": null,
    "lineNumber": 497,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": *, \"inner\": *, \"data\": *}"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "conTag",
    "memberof": "src/alt/index.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/index.js~Element#conTag",
    "access": "public",
    "description": null,
    "lineNumber": 504,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "test",
    "memberof": "src/alt/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/alt/index.js~test",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 519,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "markdownParser",
    "memberof": "src/alt/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/alt/index.js~markdownParser",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/alt/index.js",
    "importStyle": "markdownParser",
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/alt/polyfill/index.js",
    "content": "\r\n// const toString = name=>`${name}() { [native code] }`;\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/alt/polyfill/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/alt/sandbox/index.js",
    "content": "\r\n// @ts-check\r\n\r\nclass InterPlinter {\r\n    constructor(print) {\r\n        this.print = print;\r\n    }\r\n    execute(text) {}\r\n    eval(text) {\r\n        this.execute(text);\r\n        return new Function(\"\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/alt/sandbox/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "class",
    "name": "InterPlinter",
    "memberof": "src/alt/sandbox/index.js",
    "static": true,
    "longname": "src/alt/sandbox/index.js~InterPlinter",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/alt/sandbox/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alt/sandbox/index.js~InterPlinter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/sandbox/index.js~InterPlinter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "print",
    "memberof": "src/alt/sandbox/index.js~InterPlinter",
    "static": false,
    "longname": "src/alt/sandbox/index.js~InterPlinter#print",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "execute",
    "memberof": "src/alt/sandbox/index.js~InterPlinter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/sandbox/index.js~InterPlinter#execute",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "eval",
    "memberof": "src/alt/sandbox/index.js~InterPlinter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alt/sandbox/index.js~InterPlinter#eval",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/env.js",
    "content": "\r\n/**\r\n * @namespace env\r\n * @memberof rei\r\n * @exports\r\n */\r\nexport default {\r\n    reiyayakko_core: \"1.1.1\",\r\n    Symbol: typeof Symbol === \"function\",\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/env.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/index.js",
    "content": "\r\n// eslint-disable-next-line spaced-comment\r\n/*!\r\n * reiyayakko-core\r\n * Copyright 2020 reiyayakko\r\n * License MIT\r\n */\r\n\r\nimport env from \"./env.js\";\r\nimport * as util from \"./util/index.js\";\r\nimport * as utility from \"./utility/index.js\";\r\nimport * as object from \"./object/index.js\";\r\nimport * as math from \"./math/index.js\";\r\n\r\n/**\r\n * @namespace {Object} rei\r\n * @exports\r\n */\r\nexport { utility, object, math, util, env };\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/lib/Num2DecStr.js",
    "content": "/**\r\n * 数値を整数・少数表記に変換する。\r\n * 内部的には、指数表記の文字列をパースし、小数表記に変換している。\r\n *\r\n * @param {number|string} number 変換したい数値、または数値形式の文字列。\r\n *     数値型であればNaNやInfinityも指定できるが、そのまま文字列化して返される。\r\n * @return {string} 小数表記の数値文字列\r\n * @throws 適切な形式の数値、または文字列が与えられなかった場合に発生する。\r\n *\r\n * Note: この関数は、JavaScriptで正確な数値演算を行うために使う**べきではない**。\r\n *       この関数でなければ変換できない数値は、JavaScriptの内部データの時点で誤差が発生しており、正確な演算は期待できない。\r\n *       また、この関数によって変換された数値が厳密に正しい事も保証しない。\r\n *       この関数は、JavaScriptで生成した数値を「見やすく表示する」ためにのみ使用するべきである。\r\n * Note: この関数の設計が正しければ（つまり、バグが無ければ）、エラーが発生するのは誤った形式の文字列を与えられた場合のみとなる。\r\n *       逆に言えば、数値のプリミティブ型が与えられた場合は、いかなる場合でもエラーは発生しないはずである。\r\n *       もし、数値が与えられた場合にもエラーが発生してしまった場合は、この関数のバグを修正する必要がある。\r\n */\r\nexport const Num2FracStr = number => {\r\n  /*\r\n   * 引数の値を文字列化\r\n   */\r\n  const numStr = String(number);\r\n\r\n  /*\r\n   * 正規表現でマッチング\r\n   */\r\n  const match = numStr.match(/^([+-]?)0*([1-9][0-9]*|)(?:\\.([0-9]*[1-9]|)0*)?(?:[eE]([+-]?[0-9]+))?$/);\r\n\r\n  /*\r\n   * 引数の型が適切な形式ではない場合…\r\n   */\r\n  if (!match) {\r\n    if (typeof number == \"number\") {\r\n      /*\r\n       * 引数の型が数値であれば、文字列化した値をそのまま返す\r\n       */\r\n      return numStr;\r\n    } else {\r\n      /*\r\n       * 引数の型が数値でなければ、エラーにする\r\n       */\r\n      throw new Error(`Invalid Number: \"${numStr}\"`);\r\n    }\r\n  }\r\n\r\n  /** @type {string} 数の符号 */\r\n  const sign = (match[1] === \"-\" ? \"-\" : \"\");\r\n  /** @type {string} 仮数部の整数部 */\r\n  const mantissa_int = match[2];\r\n  /** @type {string} 仮数部の少数部 */\r\n  const mantissa_frac = (match[3] ? match[3] : \"\");\r\n  /** @type {number} 指数部 */\r\n  const exponent = Number(match[4]);\r\n\r\n  let returnValue = \"\";\r\n\r\n  if (exponent) {\r\n    /*\r\n     * exponentがundefinedではなく（正規表現で指数部がマッチしていて）、\r\n     * かつ、0ではない場合、指数表記として処理を開始する\r\n     *\r\n     * Note: 指数部が0の場合、ここで処理する意味は無いので少数表記として処理する。\r\n     *       よって、指数部が0以外の場合にここで処理する。\r\n     * Note: undefinedは数値化されるとNaNになり、false相当となる。\r\n     *       一方、0の場合もfalse相当となる。\r\n     *       ので、↑の条件文はコレで合っている。\r\n     */\r\n\r\n    /** @type {string} */\r\n    const mantissa_str = mantissa_int + mantissa_frac;\r\n    /** @type {number} */\r\n    const mantissa_len = mantissa_str.length;\r\n\r\n    if (0 < mantissa_len) {\r\n      /** @type {number} */\r\n      const mantissa_int_len = mantissa_int.length + exponent;\r\n  \r\n      /*\r\n      12.145e+7  121450000             ;  mantissa_str: \"12145\"  mantissa_int_len: 9   ;  小数部が存在しない数値\r\n      12.145e+6   12145000             ;  mantissa_str: \"12145\"  mantissa_int_len: 8   ;  小数部が存在しない数値\r\n      12.145e+5    1214500             ;  mantissa_str: \"12145\"  mantissa_int_len: 7   ;  小数部が存在しない数値\r\n      12.145e+4     121450             ;  mantissa_str: \"12145\"  mantissa_int_len: 6   ;  小数部が存在しない数値\r\n      12.145e+3      12145             ;  mantissa_str: \"12145\"  mantissa_int_len: 5   ;  小数部が存在しない数値\r\n      12.145e+2       1214.5           ;  mantissa_str: \"12145\"  mantissa_int_len: 4   ;  小数部が存在し、かつ、1より大きい数値\r\n      12.145e+1        121.45          ;  mantissa_str: \"12145\"  mantissa_int_len: 3   ;  小数部が存在し、かつ、1より大きい数値\r\n      12.145e0          12.145         ;  mantissa_str: \"12145\"  mantissa_int_len: 2   ;  小数部が存在し、かつ、1より大きい数値\r\n      12.145e-1          1.2145        ;  mantissa_str: \"12145\"  mantissa_int_len: 1   ;  小数部が存在し、かつ、1より大きい数値\r\n      12.145e-2          0.12145       ;  mantissa_str: \"12145\"  mantissa_int_len: 0   ;  小数部が存在し、かつ、1未満の数値\r\n      12.145e-3          0.012145      ;  mantissa_str: \"12145\"  mantissa_int_len: -1  ;  小数部が存在し、かつ、1未満の数値\r\n      12.145e-4          0.0012145     ;  mantissa_str: \"12145\"  mantissa_int_len: -2  ;  小数部が存在し、かつ、1未満の数値\r\n      12.145e-5          0.00012145    ;  mantissa_str: \"12145\"  mantissa_int_len: -3  ;  小数部が存在し、かつ、1未満の数値\r\n      12.145e-6          0.000012145   ;  mantissa_str: \"12145\"  mantissa_int_len: -4  ;  小数部が存在し、かつ、1未満の数値\r\n      12.145e-7          0.0000012145  ;  mantissa_str: \"12145\"  mantissa_int_len: -5  ;  小数部が存在し、かつ、1未満の数値\r\n      */\r\n\r\n      if (mantissa_len <= mantissa_int_len) {\r\n        /*\r\n         * 小数部が存在しない数値（ex: 0, 12, 176, 1214500）の場合の処理\r\n         */\r\n        returnValue = mantissa_str.padEnd(mantissa_int_len, \"0\");\r\n\r\n      } else if (0 < mantissa_int_len) {\r\n        /*\r\n         * 小数部が存在し、かつ、1より大きい数値（ex: 1.26, 1.0009, 121.45）の場合の処理\r\n         */\r\n        returnValue = mantissa_str.slice(0, mantissa_int_len) + \".\" + mantissa_str.slice(mantissa_int_len);\r\n\r\n      } else {\r\n        /*\r\n         * 小数部が存在し、かつ、1未満の数値（ex: 0.26, 0.20098, 0.0012145）の場合の処理\r\n         */\r\n        returnValue = \"0.\" + \"0\".repeat(-mantissa_int_len) + mantissa_str;\r\n      }\r\n    }\r\n\r\n  } else if (mantissa_frac) {\r\n    /*\r\n     * 少数表記の場合\r\n     */\r\n    returnValue = (mantissa_int || \"0\") + \".\" + mantissa_frac;\r\n\r\n  } else if (mantissa_int) {\r\n    /*\r\n     * 整数表記の場合\r\n     */\r\n    returnValue = mantissa_int;\r\n  }\r\n\r\n  return (returnValue) ? sign + (\r\n    returnValue\r\n      /* 先頭の余計なゼロを削除 */\r\n      .replace(/^(?:0(?!\\.|$))+/, \"\")\r\n      /* 末尾の余計なゼロを削除 */\r\n      .replace(/(?:\\.0+|(\\.[0-9]*[1-9])0+)$/, \"$1\")\r\n  ) : \"0\";\r\n};\r\n\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/lib/Num2DecStr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "Num2FracStr",
    "memberof": "src/lib/Num2DecStr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Num2DecStr.js~Num2FracStr",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/lib/Num2DecStr.js",
    "importStyle": "{Num2FracStr}",
    "description": "数値を整数・少数表記に変換する。\n内部的には、指数表記の文字列をパースし、小数表記に変換している。",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "変換したい数値、または数値形式の文字列。\n    数値型であればNaNやInfinityも指定できるが、そのまま文字列化して返される。"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "小数表記の数値文字列"
    },
    "throws": [
      {
        "types": [
          "*"
        ],
        "description": "適切な形式の数値、または文字列が与えられなかった場合に発生する。\n\nNote: この関数は、JavaScriptで正確な数値演算を行うために使う**べきではない**。\n      この関数でなければ変換できない数値は、JavaScriptの内部データの時点で誤差が発生しており、正確な演算は期待できない。\n      また、この関数によって変換された数値が厳密に正しい事も保証しない。\n      この関数は、JavaScriptで生成した数値を「見やすく表示する」ためにのみ使用するべきである。\nNote: この関数の設計が正しければ（つまり、バグが無ければ）、エラーが発生するのは誤った形式の文字列を与えられた場合のみとなる。\n      逆に言えば、数値のプリミティブ型が与えられた場合は、いかなる場合でもエラーは発生しないはずである。\n      もし、数値が与えられた場合にもエラーが発生してしまった場合は、この関数のバグを修正する必要がある。"
      }
    ]
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/math/ack.js",
    "content": "\r\n// @ts-check\r\n\r\n/**\r\n * @param {number} num1\r\n * @param {number} num2\r\n * @return {number}\r\n */\r\nexport const ack = (num1, num2)=>{\r\n    if(Math.min(num1, num2) < 0)\r\n        throw new Error(\"Negative argument cannot be specified for Ackermann function\");\r\n    const stack = [num1, num2];\r\n    while(stack.length > 1){\r\n        const n = stack.pop();\r\n        const m = stack.pop();\r\n        if(m === 0){\r\n            stack.push(n + 1);\r\n        }else if(n === 0){\r\n            stack.push(m - 1);\r\n            stack.push(1);\r\n        }else if(m === 1){\r\n            stack.push(n + 2);\r\n        }else if(m === 2){\r\n            stack.push(n * 2 + 3);\r\n        }else{\r\n            stack.push(m - 1);\r\n            stack.push(m);\r\n            stack.push(n - 1);\r\n        }\r\n    }\r\n    return stack.pop();\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/ack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "ack",
    "memberof": "src/math/ack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/ack.js~ack",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/ack.js",
    "importStyle": "{ack}",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/math/arithmetic.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/arithmetic.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/math/calculation.js",
    "content": "\r\n// @ts-check\r\n\r\n// export const add = (number1, number2)=>(\r\n//     number1 + number2\r\n// );\r\n// export const sub = (...numbers)=>{};\r\n// export const mul = (...numbers)=>{};\r\n// export const div = (...numbers)=>{};\r\n\r\n/**\r\n * 引数の絶対値を返す。\r\n * @param {Number} number\r\n */\r\nexport const abs = (number)=>(\r\n    number < 0 ||\r\n    Object.is(-0, number) ||\r\n    Object.is(BigInt(-0), number)\r\n        ? -number : Number(number)\r\n);\r\n\r\n/**\r\n * 引数の中で一番小さい値を返す。\r\n * @param  {...Number} args\r\n */\r\nexport const min = (...args)=>(\r\n    args.reduce((minValue, value)=>(\r\n        minValue < value ? minValue : value\r\n    ), Infinity)\r\n);\r\n\r\n/**\r\n * 引数の中で一番大きい値を返す。\r\n * @param  {...Number} args\r\n */\r\nexport const max = (...args)=>(\r\n    args.reduce((maxValue, value)=>(\r\n        maxValue > value ? maxValue : value\r\n    ), -Infinity)\r\n);\r\n\r\n/**\r\n * 階上。\r\n * @param {Number} num\r\n */\r\nexport const factorial = (num)=>{\r\n    if(Number.isNaN(num) || (!Number.isFinite(num) && typeof num !== \"bigint\") || typeof num !== \"number\" && typeof num !== \"bigint\")\r\n        return num;\r\n    for(let i = num;i > 2;num *= --i);\r\n    return num ? num : ++num;\r\n};\r\n\r\n/**\r\n * 平均値\r\n * @param  {...Number} numbers\r\n */\r\nexport const average = (...numbers)=>{\r\n    const total = numbers.reduce((subTotal, number)=>(subTotal + number), 0);\r\n    return total / numbers.length;\r\n};\r\n\r\n/**\r\n * 中央値\r\n * @param  {...Number} numbers\r\n */\r\nexport const median = (...numbers)=>{\r\n    numbers.sort();\r\n    const center = (numbers.length + 1) / 2;\r\n    if(Number.isInteger(center))\r\n        return numbers[center];\r\n    return average(\r\n        numbers[Math.floor(center)],\r\n        numbers[Math.ceil(center)]\r\n    );\r\n};\r\n\r\n// TODO: sin\r\n\r\n// TODO: cos\r\n\r\n// TODO: tan\r\n\r\n// export const diff = (n1, n2)=>abs(n1-n2);\r\n\r\n// TODO: 複素数\r\n// export class Complex {}\r\n\r\n/**\r\n * Greatest common divisor / 最大公約数\r\n * @param {number} num1\r\n * @param {number} num2\r\n */\r\nexport const gcd = (num1, num2)=>{\r\n    for(;num1 % num2 !== 0;num1 %= num2)\r\n        if(num1 < num2)\r\n            [num2, num1] = [num1, num2];\r\n    return num2;\r\n};\r\n\r\n/**\r\n * Least common multiple / 最小公倍数\r\n * @param {number} num1\r\n * @param {number} num2\r\n */\r\nexport const lcm = (num1, num2)=>(\r\n    num1 / gcd(num1, num2) * num2\r\n);\r\n/*\r\npackage_rei.addModule(\"math.ack\", ({modules: {math}})=>).addModule(\"math.Chain\", ()=>class Chain {\r\n    constructor() {\r\n        this.chain = [];\r\n    }\r\n    chain(num){\r\n        this.chain.push(num);\r\n    }\r\n    sum(){}\r\n});\r\n*/\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/calculation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "abs",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~abs",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{abs}",
    "description": "引数の絶対値を返す。",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "min",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~min",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{min}",
    "description": "引数の中で一番小さい値を返す。",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Number"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "max",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~max",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{max}",
    "description": "引数の中で一番大きい値を返す。",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Number"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "factorial",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~factorial",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{factorial}",
    "description": "階上。",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "average",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~average",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{average}",
    "description": "平均値",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Number"
        ],
        "spread": true,
        "optional": false,
        "name": "numbers",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "median",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~median",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{median}",
    "description": "中央値",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Number"
        ],
        "spread": true,
        "optional": false,
        "name": "numbers",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "gcd",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~gcd",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{gcd}",
    "description": "Greatest common divisor / 最大公約数",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num2",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "lcm",
    "memberof": "src/math/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/calculation.js~lcm",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/calculation.js",
    "importStyle": "{lcm}",
    "description": "Least common multiple / 最小公倍数",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num2",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/math/fft/fft.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { swap } from \"../../object/property/swap\";\r\n\r\n/**\r\n * @param {number} theta\r\n * @return {[number, number]}\r\n */\r\nconst expi = (theta) => [Math.cos(theta), Math.sin(theta)];\r\nconst iadd = ([ax, ay], [bx, by]) => [ax + bx, ay + by];\r\nconst isub = ([ax, ay], [bx, by]) => [ax - bx, ay - by];\r\n/**\r\n * @return {[number, number]}\r\n */\r\nconst imul = ([ax, ay], [bx, by]) => [ax * bx - ay * by, ax * by + ay * bx];\r\nconst isum = (cs) => cs.reduce((s, c) => iadd(s, c), [0, 0]);\r\n\r\nconst fftin1 = (c, T, N) => {\r\n    const k = Math.log2(N);\r\n    const rec = c.map((_, i) => c[revBit(k, i)]);\r\n    for (let Nh = 1;Nh < N;Nh *= 2) {\r\n        T /= 2;\r\n        for (let s = 0;s < N;s += Nh * 2) {\r\n            for (let i = 0;i < Nh;i++) {\r\n                const l = rec[s + i], re = imul(rec[s + i + Nh], expi(T * i));\r\n                [rec[s + i], rec[s + i + Nh]] = [iadd(l, re), isub(l, re)];\r\n            }\r\n        }\r\n    }\r\n    return rec;\r\n};\r\n\r\nexport const fft1 = (f) => {\r\n    const N = f.length, T = -2 * Math.PI;\r\n    return fftin1(f, T, N);\r\n};\r\nexport const ifft1 = (F) => {\r\n    const N = F.length, T = 2 * Math.PI;\r\n    return fftin1(F, T, N).map(([r, i]) => [r / N, i / N]);\r\n};\r\n\r\nconst DFT = {\r\n    swap(v, a, b){\r\n        swap(v, a++, b++);\r\n        swap(v, a, b);\r\n    },\r\n    swapElements(n, v){\r\n        const n2 = n + 2;\r\n        const nh = n >>> 1;\r\n        for (let i = 0, j = 0;i < n;i += 4) {\r\n            DFT.swap(v, i + n, j + 2);\r\n            if (i < j) {\r\n                DFT.swap(v, i + n2, j + n2);\r\n                DFT.swap(v, i, j);\r\n            }\r\n            // ビットオーダを反転した変数としてインクリメント\r\n            for (let k = nh;(j ^= k) < k;k >>= 1);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * 高速フーリエ変換\r\n * @param {number} n 変換するデータの要素数、実装の特性上2のべき乗を指定する必要がある\r\n * @param {number[]} v 変換するデータ、実数、虚数の順で配置された複素数の配列\r\n * @param {boolean} inverse 逆変換を行う場合は true を設定する\r\n */\r\nexport const fft = (n, v, inverse=false) => {\r\n    let rad = (inverse ? 2 : -2) * Math.PI / n;\r\n    const nd = n << 1;\r\n    for(let m = nd, mh;(mh = m >>> 1) >= 2;m = mh) {\r\n        for(let i = 0;i < mh;i += 2) {\r\n            const rd = rad * (i >> 1);\r\n            const cs = Math.cos(rd), sn = Math.sin(rd); // 回転因子\r\n            for (let j = i;j < nd;j += m) {\r\n                const k = j + mh;\r\n                const ar = v[j], ai = v[j+1];\r\n                const br = v[k], bi = v[k+1];\r\n                // 前半 (a + b)\r\n                v[j] = ar + br;\r\n                v[j+1] = ai + bi;\r\n                // 後半 (a - b) * w\r\n                const xr = ar - br;\r\n                const xi = ai - bi;\r\n                v[k] = xr * cs - xi * sn;\r\n                v[k+1] = xr * sn + xi * cs;\r\n            }\r\n        }\r\n        rad *= 2;\r\n    }\r\n    // 要素の入れ替え\r\n    DFT.swapElements(n, v);\r\n    // 逆変換用のスケール\r\n    if(inverse) for(let i = 0;i < nd;)\r\n        v[i++] /= n;\r\n    return v;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/fft/fft.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "expi",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~expi",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "theta",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[number, number]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "iadd",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~iadd",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "isub",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~isub",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "imul",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~imul",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "[number, number]"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "isum",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~isum",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "cs",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "fftin1",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~fftin1",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "T",
        "types": [
          "*"
        ]
      },
      {
        "name": "N",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "fft1",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~fft1",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": "{fft1}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "ifft1",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~ifft1",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": "{ifft1}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "F",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "DFT",
    "memberof": "src/math/fft/fft.js",
    "static": true,
    "longname": "src/math/fft/fft.js~DFT",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "{\"swap\": function, \"swapElements\": function}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "fft",
    "memberof": "src/math/fft/fft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/fft/fft.js~fft",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/fft/fft.js",
    "importStyle": "{fft}",
    "description": "高速フーリエ変換",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "変換するデータの要素数、実装の特性上2のべき乗を指定する必要がある"
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "変換するデータ、実数、虚数の順で配置された複素数の配列"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "inverse",
        "description": "逆変換を行う場合は true を設定する"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/math/fft/ifft.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/fft/ifft.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/math/hyper.js",
    "content": "\r\n// TODO: ハイパー演算\r\nimport { previous } from \"../utility/loop/index\";\r\n\r\nconst hyperCall = (a, lebel, b)=>{\r\n    console.log(a, lebel, b);\r\n    if(lebel === 3)\r\n        return a ** b;\r\n    if(b === BigInt(0))\r\n        return BigInt(1);\r\n    console.log(a, lebel, b);\r\n    lebel--;\r\n    return previous(--b, (prev)=>(\r\n        console.log(prev)\r\n        || hyperCall(a, lebel, prev)\r\n    ), a);\r\n};\r\n\r\nexport const hyper = (a, lebel, b=a)=>{\r\n    switch(lebel){\r\n    case 0:\r\n        return ++b;\r\n    case 1:\r\n        return a + b;\r\n    case 2:\r\n        return a * b;\r\n    default:\r\n        return hyperCall(a, lebel, b);\r\n    }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/hyper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "hyperCall",
    "memberof": "src/math/hyper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/hyper.js~hyperCall",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/hyper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "lebel",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "hyper",
    "memberof": "src/math/hyper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/hyper.js~hyper",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/hyper.js",
    "importStyle": "{hyper}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "lebel",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "a",
        "defaultValue": "a"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/math/index.js",
    "content": "\r\nexport * from \"./number/index\";\r\nexport * from \"./fft/fft.js\";\r\nexport * from \"./hyper\";\r\nexport * from \"./ack\";\r\nexport * from \"./calculation\";\r\nexport * from \"./sequence\";\r\nexport * from \"./tolerance\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/math/mathEval.js",
    "content": "\r\nimport {last} from \"../object/temp\";\r\n\r\nconst calculate = expression=>{\r\n    const operator = expression.shift();\r\n    for(const number of expression){\r\n        if(Array.isArray(number)){\r\n            calculate(number);\r\n            continue;\r\n        }\r\n        [operator]();\r\n    }\r\n};\r\n\r\nexport const add = (number1, number2)=>(\r\n    number1 + number2\r\n);\r\nexport const sub = (...numbers)=>{};\r\nexport const mul = (...numbers)=>{};\r\nexport const div = (...numbers)=>{};\r\n\r\nexport const mathEval = (expression)=>{\r\n    return;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/mathEval.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "calculate",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~calculate",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "expression",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "add",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~add",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": "{add}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "number1",
        "types": [
          "*"
        ]
      },
      {
        "name": "number2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "sub",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~sub",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": "{sub}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "numbers",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "mul",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~mul",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": "{mul}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "numbers",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "div",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~div",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": "{div}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "numbers",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "mathEval",
    "memberof": "src/math/mathEval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/mathEval.js~mathEval",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/mathEval.js",
    "importStyle": "{mathEval}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "expression",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/addition.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/addition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/cos.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/cos.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/log.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/log.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/pow.js",
    "content": "\r\n// @ts-check\r\n\r\nexport const pow = (x, y) => {};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/pow.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "pow",
    "memberof": "src/math/number/bigfloat/calculation/pow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation/pow.js~pow",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation/pow.js",
    "importStyle": "{pow}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/sin.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { T } from \"../constant\";\r\nimport { pow } from \"../pow\";\r\n\r\nexport const sin = (x) => {\r\n    const T = 6.28;\r\n    let sum, k;\r\n    let i;\r\n    sum = k = x -= (x / T) * T;\r\n    for(i = 2;;i += 2) {\r\n        k *= -(x * x) / (i * (i + 1));\r\n        if(sum === sum + k)return sum;\r\n        sum += k;\r\n    }\r\n};\r\n\r\n// xの階乗を計算する関数\r\nconst fact = (n) => {\r\n    let i, result = 1;\r\n    if(n === 0)return 1;\r\n    for(i = 1;i <= n;i++)\r\n        result *= i;\r\n    return result;\r\n};\r\n\r\nconst _sin = (x) => {\r\n    let result1 = 0, result2 = 0;\r\n    // ループを回す回数(ここでは5)を大きくすると精度が上がります\r\n    for(let n = 1;n++ < 5;)\r\n        result1 += Math.pow(x, 4 * n - 3) / ((n) => {\r\n            let i, result = 1;\r\n            if(n === 0)return 1;\r\n            for(i = 1;i <= n;i++)\r\n                result *= i;\r\n            return result;\r\n        })(4 * n - 3);\r\n    for(let n = 1;n++ < 5;)\r\n        result2 += Math.pow(x, 4 * n - 1) / ((n) => {\r\n            let i, result = 1;\r\n            if(n === 0)return 1;\r\n            for(i = 1;i <= n;i++)\r\n                result *= i;\r\n            return result;\r\n        })(4 * n - 1);\r\n    return result1 - result2;\r\n};\r\n\r\n// //xのn乗を計算する関数\r\n// double my_pow(double x, int n)\r\n// {\r\n//   int i;\r\n//   double pow_result = 1;\r\n\r\n//   if(n == 0)\r\n//     return 1;\r\n//   else\r\n//     {\r\n//       for(i = 0;i < n;i++)\r\n// \t{\r\n// \t  pow_result *= x;\r\n// \t}\r\n//       return pow_result;\r\n//     }\r\n// }\r\n\r\nexport const asin = () => {};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/sin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "sin",
    "memberof": "src/math/number/bigfloat/calculation/sin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation/sin.js~sin",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation/sin.js",
    "importStyle": "{sin}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "fact",
    "memberof": "src/math/number/bigfloat/calculation/sin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation/sin.js~fact",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation/sin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "_sin",
    "memberof": "src/math/number/bigfloat/calculation/sin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation/sin.js~_sin",
    "access": "private",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation/sin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "asin",
    "memberof": "src/math/number/bigfloat/calculation/sin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation/sin.js~asin",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation/sin.js",
    "importStyle": "{asin}",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/sqrt.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/sqrt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/subtraction.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/subtraction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation/tan.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation/tan.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "src/math/number/bigfloat/calculation.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { zip } from \"../../../object/index\";\r\nimport { isNegative, equals } from \"../../../util/is/index\";\r\nimport { typeOf } from \"../../../util/typeof.js\";\r\nimport { first, last, splice } from \"../../../utility/getIndex\";\r\nimport { BigFloat } from \"./class\";\r\nimport { chunk, forOf } from \"../../../utility/index\";\r\n\r\n/**\r\n * @typedef {Number | String | BigFloat} NumberTypes\r\n */\r\n\r\n/*\r\nNOTE:\r\n(+9 - +1) = (+9 + -1) = +8 : -\r\n(+1 - +9) = (+1 + -9) = -8 : -\r\n\r\n(-9 - -1) = (-9 + +1) = -8 : -\r\n(-1 - -9) = (-1 + +9) = +8 : -\r\n\r\n(+9 - -1) = (+9 + +1) = +10 : +\r\n(+1 - -9) = (+1 + +9) = -10 : +\r\n\r\n(-9 - +1) = (-9 + -1) = -10 : +\r\n(-1 - +9) = (-1 + -9) = +10 : +\r\n*/\r\n\r\n/**\r\n * OPTIMIZE: chunkとかzipとか0埋めとか\r\n * @param {number} size\r\n * @param {BigFloat} number1\r\n * @param {BigFloat} number2\r\n * @return {number[]}\r\n */\r\nconst getNumber = (size, number1, number2) => {\r\n    const digits = {\r\n        integer: Math.max(number1.integer.length, number2.integer.length),\r\n        decimal: Math.max(number1.decimal.length, number2.decimal.length)\r\n    };\r\n    const num1str\r\n        = number1.integer.padStart(digits.integer, \"0\")\r\n        + number1.decimal.padEnd(digits.decimal, \"0\");\r\n    const num2str\r\n        = number2.integer.padStart(digits.integer, \"0\")\r\n        + number2.decimal.padEnd(digits.decimal, \"0\");\r\n    return zip([chunk(num1str, size), chunk(num2str, size)]).map(Number);\r\n};\r\n\r\n/** */\r\nexport class bigDecimal extends BigFloat {\r\n    static isBigFloat(value) {\r\n        return value instanceof BigFloat && typeOf(value).valueOf() === \"BigFloat\";\r\n    }\r\n    /**\r\n     * Beta: 加算\r\n     * Convert argument to BigFloat perform addition\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} addNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static addition(target, addNum) {\r\n        target = new BigFloat(target);\r\n        addNum = new BigFloat(addNum);\r\n        // 符号が異なる場合、符号を反転して減算\r\n        if(target.isPositive !== addNum.isPositive) {\r\n            addNum.setSign(!addNum.isPositive);\r\n            return bigDecimal.subtraction(target, addNum);\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, addNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, addNum.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            target.getNumber(15, digits.integer, digits.decimal),\r\n            addNum.getNumber(15, digits.integer, digits.decimal),\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            const carry = Number(first(total));\r\n            const subtotal = String(carry + targetNumber + addNumber);\r\n            return splice(total, 0, 1, subtotal.padStart(16, \"0\"));\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        result.setSign(target);\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 減算\r\n     * Convert argument to BigFloat and perform subtraction\r\n     *\r\n     * HACK: let多すぎ問題。もっとスコープを絞りたい。\r\n     *\r\n     * WARNING: 途中の桁消えてる可能性あり。splice流用してfirst消して大丈夫か？\r\n     *\r\n     * FIXME: 符号が正しくない。\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} subNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static subtraction(target, subNum){\r\n        target = new BigFloat(target);\r\n        subNum = new BigFloat(subNum);\r\n        // 符号が異なる場合、符号を反転して加算\r\n        if(target.isPositive !== subNum.isPositive){\r\n            subNum.setSign(!subNum.isPositive);\r\n            return bigDecimal.addition(target, subNum);\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, subNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, subNum.decimal.length),\r\n        };\r\n        let borrow = false;\r\n        let sumValue = zip([\r\n            target.getNumber(15, digits.integer, digits.decimal),\r\n            subNum.getNumber(15, digits.integer, digits.decimal)\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            // IDEA: const borrow = Number(last(total));\r\n            let subtotal = targetNumber - addNumber - Number(borrow);\r\n            console.log(total, subtotal, targetNumber, addNumber);\r\n            borrow = isNegative(subtotal);\r\n            if(borrow)subtotal += 1e16;\r\n            console.log(subtotal);\r\n            return splice(total, 0, 0, String(Math.abs(subtotal)).padStart(16, \"0\"));\r\n        }, \"0\");\r\n        if(borrow){\r\n            const big = `1${\"0\".repeat(sumValue.length - 1)}`;\r\n            sumValue = bigDecimal.subtraction(big, sumValue);\r\n            // IDEA:\r\n            // sumValue = [...sumValue].map(char=>(\r\n            //     10 - Number(char)\r\n            // )).join(\"\");\r\n        }\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        // FIXME: 正しくない。大小によって判断すべき\r\n        const max2 = bigDecimal.max2(target, subNum);\r\n        result.isPositive = max2 === subNum\r\n            ? !subNum.isPositive\r\n            : target.isPositive;\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 乗算\r\n     *\r\n     * FIXME: 桁がずれるため使い物にならない\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} mulNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static multiplication(target, mulNum) {\r\n        target = new BigFloat(target);\r\n        mulNum = new BigFloat(mulNum);\r\n        // 項のどちらかが0なら0を返す。\r\n        if(bigDecimal.equals(target, 0) || bigDecimal.equals(mulNum, 0))\r\n            return new BigFloat();\r\n        // 計算\r\n        const targetNumbers = target.getNumber();\r\n        const mulNumbers = mulNum.getNumber();\r\n        const sumValue = mulNumbers.reduceRight((total, mulNumber)=>{\r\n            const subtotal = targetNumbers.reduceRight((total2, targetNumber)=>{\r\n                const fst = Number(first(total2));\r\n                const subtotal2 = String(fst + mulNumber * targetNumber);\r\n                return splice(total2, 0, 1, subtotal2.padStart(2, \"0\"));\r\n            }, \"0\");\r\n            return bigDecimal.addition(total, subtotal).toString();\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(target.decimal.length + mulNum.decimal.length);\r\n        result.setSign(target.isPositive === mulNum.isPositive);\r\n        return result.format();\r\n    }\r\n    /**\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {BigFloat} n1\r\n     * @param {BigFloat} n2\r\n     * @returns\r\n     */\r\n    static max2(n1, n2){\r\n        if(n1.integer.length !== n2.integer.length)\r\n            return n1.integer.length > n2.integer.length\r\n                ? n1 : n2;\r\n        const digits = {\r\n            integer: Math.max(n1.integer.length, n2.integer.length),\r\n            decimal: Math.max(n1.decimal.length, n2.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            n1.getNumber(digits.integer, digits.decimal),\r\n            n2.getNumber(digits.integer, digits.decimal)\r\n        ]);\r\n        return forOf(sumValue, ([num1, num2])=>(\r\n            num1 !== num2 ? (num1 > num2 ? num1 : num2) : void 0\r\n        ));\r\n    }\r\n    /**\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes[]} numbers\r\n     * @returns\r\n     */\r\n    static equals(...numbers){\r\n        numbers = numbers.map((number)=>(\r\n            new BigFloat(number).toString()\r\n        ));\r\n        return equals(...numbers);\r\n    }\r\n    sin() {}\r\n    cos() {}\r\n    tan() {}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/calculation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "typedef",
    "name": "NumberTypes",
    "memberof": "src/math/number/bigfloat/calculation.js",
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~NumberTypes",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Number ",
        " String ",
        " BigFloat"
      ],
      "optional": false,
      "name": "NumberTypes"
    }
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "getNumber",
    "memberof": "src/math/number/bigfloat/calculation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~getNumber",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation.js",
    "importStyle": null,
    "description": "OPTIMIZE: chunkとかzipとか0埋めとか",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "number1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "number2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "bigDecimal",
    "memberof": "src/math/number/bigfloat/calculation.js",
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/calculation.js",
    "importStyle": "{bigDecimal}",
    "description": "",
    "lineNumber": 52,
    "interface": false,
    "extends": [
      "src/math/number/bigfloat/class.js~BigFloat"
    ]
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "isBigFloat",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.isBigFloat",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "addition",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.addition",
    "access": "public",
    "description": "Beta: 加算\nConvert argument to BigFloat perform addition",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "addNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "subtraction",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.subtraction",
    "access": "public",
    "description": "Beta: 減算\nConvert argument to BigFloat and perform subtraction\n\nHACK: let多すぎ問題。もっとスコープを絞りたい。\n\nWARNING: 途中の桁消えてる可能性あり。splice流用してfirst消して大丈夫か？\n\nFIXME: 符号が正しくない。",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "subNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "multiplication",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.multiplication",
    "access": "public",
    "description": "Beta: 乗算\n\nFIXME: 桁がずれるため使い物にならない",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "mulNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "max2",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.max2",
    "access": "public",
    "description": "",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "n1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "n2",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "equals",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal.equals",
    "access": "public",
    "description": "",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes[]"
        ],
        "spread": false,
        "optional": false,
        "name": "numbers",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "sin",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal#sin",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "cos",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal#cos",
    "access": "public",
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "tan",
    "memberof": "src/math/number/bigfloat/calculation.js~bigDecimal",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/calculation.js~bigDecimal#tan",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/math/number/bigfloat/class.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isBoolean, isNull, isNumber, isString } from \"../../../util/is/type\";\r\nimport { isInfinity, isPositive } from \"../../../util/is/number\";\r\nimport { first } from \"../../../utility/getIndex\";\r\nimport { chunk } from \"../../../utility/index\";\r\n\r\n/**\r\n * @typedef {Number | String | BigFloat} NumberTypes\r\n */\r\n\r\n/**\r\n * IDEA: 62進数で保存?\r\n */\r\nexport class BigFloat {\r\n    /**\r\n     * Creates an instance of BigFloat.\r\n     * @param {NumberTypes} number\r\n     * @param {number} base 進法\r\n     */\r\n    constructor(number=0, base=10) {\r\n        this.setNumber(number);\r\n    }\r\n    getSign(){\r\n        return this.isPositive ? \"+\" : \"-\";\r\n    }\r\n    setSign(sign){\r\n        this.isPositive\r\n            = isString(sign) ? first(sign) !== \"-\"\r\n            : isNumber(sign) ? isPositive(sign)\r\n            : isBoolean(sign) ? sign\r\n            : sign instanceof BigFloat ? sign.isPositive\r\n            : null;\r\n    }\r\n    /**\r\n     * 引数の数字をthisのBigfloatに代入\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {NumberTypes} number\r\n     */\r\n    setNumber(number){\r\n        // @ts-ignore\r\n        if(Number.isNaN(number) || isInfinity(number)){\r\n            this.exception = number;\r\n            // @ts-ignore\r\n            number = (Math.sign(number) || \"\").toString().slice(0, 1);\r\n        }else // IDEA: 無限、循環小数等\r\n            this.exception = null;\r\n        number = String(number);\r\n        const [fst] = number;\r\n        // 正負符号\r\n        this.setSign(fst);\r\n        number = fst === \"-\" || fst === \"+\"\r\n            ? number.slice(1) : number;\r\n        const point = number.indexOf(\".\");\r\n        const decimalPoint = point !== -1 ? point : Infinity;\r\n        this.integer = number.slice(0, decimalPoint);\r\n        this.decimal = number.slice(decimalPoint + 1);\r\n    }\r\n    /**\r\n     * integer, decimalのpaddingを指定して数字を取得\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {number} int integerのpadding\r\n     * @param {number} dec decimalのpadding\r\n     * @return {number[]} full number\r\n     */\r\n    getNumber(size=7, int=1, dec=0){\r\n        const _ = this.integer.padStart(int, \"0\") + this.decimal.padEnd(dec, \"0\");\r\n        return chunk(_, size).map(Number);\r\n    }\r\n    setDecimalPoint(decimalPoint=0){\r\n        const number = this.getNumber().join(\"\");\r\n        const decimal = number.length - decimalPoint;\r\n        this.integer = number.slice(0, decimal);\r\n        this.decimal = number.slice(decimal);\r\n    }\r\n    format(){\r\n        this.integer = this.integer.replace(/^0+/, \"\");\r\n        this.decimal = this.decimal.replace(/0+$/, \"\");\r\n        return this;\r\n    }\r\n    toString(){\r\n        return (!isNull(this.exception)\r\n            ? String(this.exception)\r\n            : this.getSign().concat(\r\n                this.integer || \"0\",\r\n                this.decimal\r\n                    ? `.${this.decimal}`\r\n                    : \"\"\r\n            ));\r\n    }\r\n}\r\n\r\nBigFloat.prototype[Symbol.toStringTag] = \"BigFloat\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/class.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "typedef",
    "name": "NumberTypes",
    "memberof": "src/math/number/bigfloat/class.js",
    "static": true,
    "longname": "src/math/number/bigfloat/class.js~NumberTypes",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Number ",
        " String ",
        " BigFloat"
      ],
      "optional": false,
      "name": "NumberTypes"
    }
  },
  {
    "__docId__": 160,
    "kind": "class",
    "name": "BigFloat",
    "memberof": "src/math/number/bigfloat/class.js",
    "static": true,
    "longname": "src/math/number/bigfloat/class.js~BigFloat",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/class.js",
    "importStyle": "{BigFloat}",
    "description": "IDEA: 62進数で保存?",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 161,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#constructor",
    "access": "public",
    "description": "Creates an instance of BigFloat.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": "進法"
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getSign",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#getSign",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "setSign",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#setSign",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "sign",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "isPositive",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#isPositive",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "setNumber",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#setNumber",
    "access": "public",
    "description": "引数の数字をthisのBigfloatに代入",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "exception",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#exception",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "integer",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#integer",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "decimal",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#decimal",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "getNumber",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#getNumber",
    "access": "public",
    "description": "integer, decimalのpaddingを指定して数字を取得",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "int",
        "description": "integerのpadding"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "dec",
        "description": "decimalのpadding"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": "full number"
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "setDecimalPoint",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#setDecimalPoint",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "decimalPoint",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "format",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#format",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "toString",
    "memberof": "src/math/number/bigfloat/class.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat/class.js~BigFloat#toString",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "src/math/number/bigfloat/constant.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { BigFloat } from \"./class\";\r\n\r\nexport const PI = new BigFloat(\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989\");\r\nexport const T = new BigFloat(\"6.283185307179586\");\r\nexport const E = new BigFloat(\"2.7182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274274663919320030599218174135966290435729003342952605956307381323286279434907632338298807531952510190115738341879307021540891499348841675092447614606680822648001684774118537423454424371075390777449920695517027618386062613313845830007520449338265602976067371132007093287091274437470472306969772093101416928368190255151086574637721112523897844250569536967707854499699679468644549059879316368892300987931277361782154249992295763514822082698951936680331825288693984964651058209392398294887933203625094431173012381970684161403970198376793206832823764648042953118023287825098194558153017567173613320698112509961818815930416903515988885193458072738667385894228792284998920868058257492796104841984443634632449684875602336248270419786232090021609902353043699418491463140934317381436405462531520961836908887070167683964243781405927145635490613031072085103837505101157477041718986106873969655212671546889570350354\");\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/constant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "PI",
    "memberof": "src/math/number/bigfloat/constant.js",
    "static": true,
    "longname": "src/math/number/bigfloat/constant.js~PI",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/constant.js",
    "importStyle": "{PI}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "T",
    "memberof": "src/math/number/bigfloat/constant.js",
    "static": true,
    "longname": "src/math/number/bigfloat/constant.js~T",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/constant.js",
    "importStyle": "{T}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "E",
    "memberof": "src/math/number/bigfloat/constant.js",
    "static": true,
    "longname": "src/math/number/bigfloat/constant.js~E",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat/constant.js",
    "importStyle": "{E}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "src/math/number/bigfloat/index.js",
    "content": "\r\nexport * from \"./calculation\";\r\nexport * from \"./class\";\r\nexport * from \"./constant\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/math/number/bigfloat.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { first, splice } from \"../../utility/getIndex\";\r\nimport { doWhile, forIndex, forOf, previous, substitute } from \"../../utility/index\";\r\nimport { zip } from \"../../object/index\";\r\nimport { equals, isInfinity, isNegative, isNull, isNumber, isPositive, isString, isBoolean } from \"../../util/is/index\";\r\n\r\n/**\r\n * @typedef {Number | String | BigFloat} NumberTypes\r\n */\r\n\r\nconst isSafe = (target)=>(\r\n    target.integer.length < 16 && !target.decimal\r\n);\r\n\r\n/**\r\n * WIP: In development.\r\n *\r\n * Alpha: 符号一部バグあり、除算対応できてない、おそらく他にもバグあり。\r\n *\r\n * OPTIMIZE: 桁が増えたときのパフォーマンスがひどい。\r\n *\r\n * IDEA: Stringによって1桁ずつ保存ではなく、\r\n * 乗算でNumber.MAX_SAFE_INTEGERを超えない7桁ずつArrayに保存\r\n *\r\n * IDEA: getNumberで数値リテラルのカット桁数を指定\r\n * \"12345671234567\", 7 => [1234567, 1234567]\r\n * 加算/減産は15桁、乗算は7桁でカット\r\n *\r\n * IDEA: 数値ごとに有効桁数を保存して除算時に計算・使用する\r\n * @export\r\n * @class BigFloat\r\n */\r\nexport class BigFloat {\r\n    /**\r\n     * Creates an instance of BigFloat.\r\n     * @memberof BigFloat\r\n     * @param {NumberTypes} number\r\n     */\r\n    constructor(number=0){\r\n        this.setNumber(number);\r\n        this.format();\r\n        /**\r\n         * 少数点以下有効桁数\r\n         * @type {Object}\r\n         */\r\n        this.digits = {\r\n            integer: 1000,\r\n            decimal: 100,\r\n            valid: 16\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof BigFloat\r\n     */\r\n    // eslint-disable-next-line class-methods-use-this\r\n    // get [Symbol.toStringTag](){\r\n    //     return \"BigFloat\";\r\n    // }\r\n    /**\r\n     * @memberof BigFloat\r\n     */\r\n    sign(){\r\n        return this.isPositive ? \"+\" : \"-\";\r\n    }\r\n    setSign(sign){\r\n        this.isPositive\r\n            = isString(sign) ? first(sign) !== \"-\"\r\n            : isNumber(sign) ? isPositive(sign)\r\n            : isBoolean(sign) ? sign\r\n            : sign instanceof BigFloat ? sign.isPositive\r\n            : null;\r\n    }\r\n    /**\r\n     * 引数の数字をthisのBigfloatに代入\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {NumberTypes} number\r\n     */\r\n    setNumber(number){\r\n        // @ts-ignore\r\n        if(Number.isNaN(number) || isInfinity(number)){\r\n            this.exception = number;\r\n            // @ts-ignore\r\n            number = (Math.sign(number) || \"\").toString().slice(0, 1);\r\n        }else // IDEA: 無限、循環小数等\r\n            this.exception = null;\r\n        number = String(number);\r\n        const [fst] = number;\r\n        // 正負符号\r\n        this.setSign(fst);\r\n        number = fst === \"-\" || fst === \"+\"\r\n            ? number.slice(1) : number;\r\n        const point = number.indexOf(\".\");\r\n        const decimalPoint = point !== -1 ? point : Infinity;\r\n        this.integer = number.slice(0, decimalPoint);\r\n        this.decimal = number.slice(decimalPoint + 1);\r\n    }\r\n    /**\r\n     * integer, decimalのpaddingを指定して数字を取得\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {Number} int integerのpadding\r\n     * @param {Number} dec decimalのpadding\r\n     * @return {Number[]} full number\r\n     */\r\n    getNumber(int=1, dec=0){\r\n        const _ = this.integer.padStart(int, \"0\") + this.decimal.padEnd(dec, \"0\");\r\n        const result = [];\r\n        forIndex(_.length, (index)=>{\r\n            result.push(Number(_[index]));\r\n        });\r\n        return result;\r\n    }\r\n    setDecimalPoint(decimalPoint=0){\r\n        const number = this.getNumber().join(\"\");\r\n        const decimal = number.length - decimalPoint;\r\n        this.integer = number.slice(0, decimal);\r\n        this.decimal = number.slice(decimal);\r\n    }\r\n    format(){\r\n        this.integer = this.integer.replace(/^0+/, \"\");\r\n        this.decimal = this.decimal.replace(/0+$/, \"\");\r\n        return this;\r\n    }\r\n    toString(){\r\n        return (!isNull(this.exception)\r\n            ? String(this.exception)\r\n            : this.sign().concat(\r\n                this.integer || \"0\",\r\n                this.decimal\r\n                    ? `.${this.decimal}`\r\n                    : \"\"\r\n            ));\r\n    }\r\n    valueOf(){\r\n        return substitute([this.exception, this.toString()]);\r\n    }\r\n    /**\r\n     * メソッド版add\r\n     * @memberof BigFloat\r\n     * @param {number} number\r\n     * @return\r\n     */\r\n    increment(number=1){\r\n        this.setNumber(BigFloat.addition(this, number));\r\n        return this;\r\n    }\r\n    /**\r\n     * メソッド版sub\r\n     * @memberof BigFloat\r\n     * @param {number} number\r\n     * @return\r\n     */\r\n    decrement(number=1){\r\n        this.setNumber(BigFloat.subtraction(this, number));\r\n        return this;\r\n    }\r\n    trunc(cutCount=0){\r\n        this.decimal = this.decimal.slice(0, cutCount);\r\n        return this;\r\n    }\r\n    floor(cutCount=0){\r\n        return this.trunc(cutCount);\r\n    }\r\n    ceil(cutCount=0){\r\n        const fst = first(this.decimal, cutCount);\r\n        if(fst)this.increment();\r\n        return this.trunc(cutCount);\r\n    }\r\n    /**\r\n     * 四捨五入\r\n     * 正の無限大の方向ではなく0から遠ざかる次の整数に丸められます。\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {number} [cutCount=0]\r\n     * @returns\r\n     */\r\n    round(cutCount=0){\r\n        const fst = Number(first(this.decimal, cutCount));\r\n        if(fst >= 5)this.increment();\r\n        return this.trunc(cutCount);\r\n    }\r\n    /**\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {BigFloat} n1\r\n     * @param {BigFloat} n2\r\n     * @returns\r\n     */\r\n    static max2(n1, n2){\r\n        if(n1.integer.length !== n2.integer.length)\r\n            return n1.integer.length > n2.integer.length\r\n                ? n1 : n2;\r\n        const digits = {\r\n            integer: Math.max(n1.integer.length, n2.integer.length),\r\n            decimal: Math.max(n1.decimal.length, n2.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            n1.getNumber(digits.integer, digits.decimal),\r\n            n2.getNumber(digits.integer, digits.decimal)\r\n        ]);\r\n        return forOf(sumValue, ([num1, num2])=>(\r\n            num1 !== num2 ? (num1 > num2 ? num1 : num2) : void 0\r\n        ));\r\n    }\r\n    /**\r\n     * Beta: 加算\r\n     * Convert argument to BigFloat perform addition\r\n     *\r\n     * FIXME: 符号が正しくない。\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} addNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static addition(target, addNum){\r\n        target = new BigFloat(target);\r\n        addNum = new BigFloat(addNum);\r\n        // Numberで計算可能ならNumberで計算\r\n        if(isSafe(target) && isSafe(addNum))\r\n            return new BigFloat(Number(target) + Number(addNum));\r\n        // 符号が異なる場合、符号を反転して減算\r\n        if(target.isPositive !== addNum.isPositive){\r\n            addNum.setSign(!addNum.isPositive);\r\n            return BigFloat.subtraction(target, addNum);\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, addNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, addNum.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            target.getNumber(digits.integer, digits.decimal),\r\n            addNum.getNumber(digits.integer, digits.decimal)\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            const carry = Number(first(total));\r\n            const subtotal = String(carry + targetNumber + addNumber);\r\n            return splice(total, 0, 1, subtotal.padStart(2, \"0\"));\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        result.setSign(target);\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 減算\r\n     * Convert argument to BigFloat and perform subtraction\r\n     *\r\n     * HACK: let多すぎ問題。もっとスコープを絞りたい。\r\n     *\r\n     * WARNING: 途中の桁消えてる可能性あり。splice流用してfirst消して大丈夫か？\r\n     *\r\n     * FIXME: 符号が正しくない。\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} subNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static subtraction(target, subNum){\r\n        target = new BigFloat(target);\r\n        subNum = new BigFloat(subNum);\r\n        // Numberで計算可能ならNumberで計算\r\n        if(isSafe(target) && isSafe(subNum))\r\n            return new BigFloat(Number(target) - Number(subNum));\r\n        // 符号が異なる場合、符号を反転して加算\r\n        if(target.isPositive !== subNum.isPositive){\r\n            subNum.setSign(!subNum.isPositive);\r\n            return BigFloat.addition(target, subNum);\r\n            /*\r\n            NOTE:\r\n            (+9 - +1) = (+9 + -1) = +8 : -\r\n            (+1 - +9) = (+1 + -9) = -8 : -\r\n\r\n            (-9 - -1) = (-9 + +1) = -8 : -\r\n            (-1 - -9) = (-1 + +9) = +8 : -\r\n\r\n            (+9 - -1) = (+9 + +1) = +10 : +\r\n            (+1 - -9) = (+1 + +9) = -10 : +\r\n\r\n            (-9 - +1) = (-9 + -1) = -10 : +\r\n            (-1 - +9) = (-1 + -9) = +10 : +\r\n            */\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, subNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, subNum.decimal.length),\r\n        };\r\n        let borrow = false;\r\n        let sumValue = zip([\r\n            target.getNumber(digits.integer, digits.decimal),\r\n            subNum.getNumber(digits.integer, digits.decimal)\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            // IDEA: const borrow = Number(last(total));\r\n            let subtotal = targetNumber - addNumber - Number(borrow);\r\n            borrow = isNegative(subtotal);\r\n            if(borrow)subtotal += 10;\r\n            return splice(total, 0, 1, String(Math.abs(subtotal)).padStart(2, \"0\"));\r\n        }, \"0\");\r\n        if(borrow){\r\n            const big = `1${\"0\".repeat(sumValue.length - 1)}`;\r\n            sumValue = BigFloat.subtraction(big, sumValue);\r\n            // IDEA:\r\n            // sumValue = [...sumValue].map(char=>(\r\n            //     10 - Number(char)\r\n            // )).join(\"\");\r\n        }\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        // FIXME: 正しくない。大小によって判断すべき\r\n        const max2 = BigFloat.max2(target, subNum);\r\n        result.isPositive = max2 === subNum\r\n            ? !subNum.isPositive\r\n            : target.isPositive;\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 乗算\r\n     *\r\n     * FIXME: 桁がずれるため使い物にならない\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} mulNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static multiplication(target, mulNum){\r\n        target = new BigFloat(target);\r\n        mulNum = new BigFloat(mulNum);\r\n        // 項のどちらかが0なら0を返す。\r\n        if(BigFloat.equals(target, 0) || BigFloat.equals(mulNum, 0))\r\n            return new BigFloat();\r\n        // Numberで計算可能ならNumberで計算\r\n        const sumLength = target.integer.length + mulNum.integer.length;\r\n        if(sumLength < 16 && !target.decimal && !mulNum.decimal)\r\n            return new BigFloat(Number(target) * Number(mulNum));\r\n        // 計算\r\n        const targetNumbers = target.getNumber();\r\n        const mulNumbers = mulNum.getNumber();\r\n        const sumValue = mulNumbers.reduceRight((total, mulNumber)=>{\r\n            const subtotal = targetNumbers.reduceRight((total2, targetNumber)=>{\r\n                const fst = Number(first(total2));\r\n                const subtotal2 = String(fst + mulNumber * targetNumber);\r\n                return splice(total2, 0, 1, subtotal2.padStart(2, \"0\"));\r\n            }, \"0\");\r\n            return BigFloat.addition(total, subtotal).toString();\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(target.decimal.length + mulNum.decimal.length);\r\n        result.setSign(target.isPositive === mulNum.isPositive);\r\n        return result.format();\r\n    }\r\n    power(){}\r\n    /**\r\n     * Alpha: 除算\r\n     *\r\n     * FIXME: 符号によっては無限ループ\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} divNum\r\n     * @param {Number} validDigit\r\n     * @return\r\n     */\r\n    static division(target, divNum, validDigit=32){\r\n        target = new BigFloat(target);\r\n        divNum = new BigFloat(divNum);\r\n        if(BigFloat.equals(divNum, Infinity))\r\n            return new BigFloat();\r\n        if(BigFloat.equals(divNum, -Infinity))\r\n            return new BigFloat(-0);\r\n        if(BigFloat.equals(divNum, 0))\r\n            return new BigFloat(NaN);\r\n        if(BigFloat.equals(target, 0))\r\n            return new BigFloat();\r\n        const sumValue = forIndex(Infinity, /** @param {Number} i*/ (i)=>{\r\n            target = BigFloat.subtraction(target, divNum);\r\n            return target.isPositive ? void 0 : i;\r\n        });\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint();\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Alpha: 余剰\r\n     *\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} dividend 被除数(割られる数)\r\n     * @param {NumberTypes} divisor 除数(割る数)\r\n     * @returns\r\n     */\r\n    static surplus(dividend, divisor){\r\n        let terget = new BigFloat(dividend);\r\n        const divisor_ = new BigFloat(divisor);\r\n        divisor_.setSign(terget);\r\n        const result = new BigFloat(doWhile((Continue)=>{\r\n            const subQuotient = BigFloat.subtraction(terget, divisor_);\r\n            if(BigFloat.equals(subQuotient, 0))\r\n                return 0;\r\n            if(terget.isPositive === subQuotient.isPositive){\r\n                terget = subQuotient;\r\n                return Continue;\r\n            }\r\n            return terget;\r\n        }));\r\n        result.setSign(terget);\r\n        return result;\r\n    }\r\n    /**\r\n     * WIP: In development\r\n     *\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} dividend\r\n     * @param {NumberTypes} divisor\r\n     * @param {Number} [maxDigit=100]\r\n     * @returns\r\n     */\r\n    static div_WIP(dividend, divisor, maxDigit=100){\r\n        const quotientList_商 = [];\r\n        let isComplete = false;\r\n        const remainders = [];\r\n        // 小数部の桁数が maxFractionPartLength に到達するまでループで処理する。\r\n        // 割り切れたり、循環節を検出できた等の理由で、除算が完了した場合はtrue。\r\n        // 桁数の不足等で除算が完了していない場合はfalse。\r\n        const recurringStartIndex = forIndex(maxDigit, ()=>{\r\n            const remainder = Number(BigFloat.surplus(dividend, divisor));\r\n            // 除算の商を求める。被除数から剰余を減算しておくことで、割り切れる除算を実行する。\r\n            quotientList_商.push((dividend - remainder) / divisor);\r\n            if(remainder === 0){\r\n                // 割り切れた\r\n                isComplete = true;\r\n                return -1;\r\n            }\r\n            const recurringStartIndex = remainders.indexOf(remainder);\r\n            if(recurringStartIndex !== -1){\r\n                // 循環節を検出\r\n                isComplete = true;\r\n                return recurringStartIndex;\r\n            }\r\n            dividend = remainder * 10;\r\n            remainders.push(remainder);\r\n            return void 0;\r\n        });\r\n        const loopPoint = recurringStartIndex === -1 ? Infinity : recurringStartIndex;\r\n        const integer = quotientList_商.shift();\r\n        const decimal = quotientList_商.slice(0, loopPoint);\r\n        const 循環小数 = quotientList_商.slice(loopPoint);\r\n        return { integer, decimal, 循環小数, isComplete };\r\n    }\r\n    /**\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes[]} numbers\r\n     * @returns\r\n     */\r\n    static equals(...numbers){\r\n        numbers = numbers.map((number)=>(\r\n            new BigFloat(number).toString()\r\n        ));\r\n        return equals(...numbers);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/bigfloat.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "typedef",
    "name": "NumberTypes",
    "memberof": "src/math/number/bigfloat.js",
    "static": true,
    "longname": "src/math/number/bigfloat.js~NumberTypes",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "type": {
      "types": [
        "Number ",
        " String ",
        " BigFloat"
      ],
      "optional": false,
      "name": "NumberTypes"
    }
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "BigFloat",
    "memberof": "src/math/number/bigfloat.js",
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/number/bigfloat.js",
    "importStyle": "{BigFloat}",
    "description": "WIP: In development.\n\nAlpha: 符号一部バグあり、除算対応できてない、おそらく他にもバグあり。\n\nOPTIMIZE: 桁が増えたときのパフォーマンスがひどい。\n\nIDEA: Stringによって1桁ずつ保存ではなく、\n乗算でNumber.MAX_SAFE_INTEGERを超えない7桁ずつArrayに保存\n\nIDEA: getNumberで数値リテラルのカット桁数を指定\n\"12345671234567\", 7 => [1234567, 1234567]\n加算/減産は15桁、乗算は7桁でカット\n\nIDEA: 数値ごとに有効桁数を保存して除算時に計算・使用する",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BigFloat"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 186,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#constructor",
    "access": "public",
    "description": "Creates an instance of BigFloat.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "digits",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#digits",
    "access": "public",
    "description": "少数点以下有効桁数",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "sign",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#sign",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "setSign",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#setSign",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "sign",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "isPositive",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#isPositive",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "setNumber",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#setNumber",
    "access": "public",
    "description": "引数の数字をthisのBigfloatに代入",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "exception",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#exception",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "integer",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#integer",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "decimal",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#decimal",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "getNumber",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#getNumber",
    "access": "public",
    "description": "integer, decimalのpaddingを指定して数字を取得",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "int",
        "description": "integerのpadding"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dec",
        "description": "decimalのpadding"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "full number"
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "setDecimalPoint",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#setDecimalPoint",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [
      {
        "name": "decimalPoint",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "format",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#format",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "toString",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#toString",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#valueOf",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "increment",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#increment",
    "access": "public",
    "description": "メソッド版add",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "decrement",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#decrement",
    "access": "public",
    "description": "メソッド版sub",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "trunc",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#trunc",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "cutCount",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "floor",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#floor",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [
      {
        "name": "cutCount",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "ceil",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#ceil",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "cutCount",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "round",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#round",
    "access": "public",
    "description": "四捨五入\n正の無限大の方向ではなく0から遠ざかる次の整数に丸められます。",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "cutCount",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "max2",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.max2",
    "access": "public",
    "description": "",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "n1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BigFloat"
        ],
        "spread": false,
        "optional": false,
        "name": "n2",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "addition",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.addition",
    "access": "public",
    "description": "Beta: 加算\nConvert argument to BigFloat perform addition\n\nFIXME: 符号が正しくない。",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "addNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "subtraction",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.subtraction",
    "access": "public",
    "description": "Beta: 減算\nConvert argument to BigFloat and perform subtraction\n\nHACK: let多すぎ問題。もっとスコープを絞りたい。\n\nWARNING: 途中の桁消えてる可能性あり。splice流用してfirst消して大丈夫か？\n\nFIXME: 符号が正しくない。",
    "lineNumber": 264,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "subNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "multiplication",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.multiplication",
    "access": "public",
    "description": "Beta: 乗算\n\nFIXME: 桁がずれるため使い物にならない",
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "mulNum",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BigFloat"
      ],
      "spread": false,
      "description": "result"
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "power",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/number/bigfloat.js~BigFloat#power",
    "access": "public",
    "description": null,
    "lineNumber": 359,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "division",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.division",
    "access": "public",
    "description": "Alpha: 除算\n\nFIXME: 符号によっては無限ループ",
    "lineNumber": 371,
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "divNum",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "validDigit",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "surplus",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.surplus",
    "access": "public",
    "description": "Alpha: 余剰",
    "lineNumber": 400,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "dividend",
        "description": "被除数(割られる数)"
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "divisor",
        "description": "除数(割る数)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "div_WIP",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.div_WIP",
    "access": "public",
    "description": "WIP: In development",
    "lineNumber": 427,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "dividend",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NumberTypes"
        ],
        "spread": false,
        "optional": false,
        "name": "divisor",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "maxDigit",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"integer\": *, \"decimal\": *, \"循環小数\": *, \"isComplete\": *}"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "equals",
    "memberof": "src/math/number/bigfloat.js~BigFloat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/bigfloat.js~BigFloat.equals",
    "access": "public",
    "description": "",
    "lineNumber": 465,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NumberTypes[]"
        ],
        "spread": false,
        "optional": false,
        "name": "numbers",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/math/number/index.js",
    "content": "\r\nexport * from \"./bigfloat/index.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/math/number/tobaseof.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { forIndex } from \"../../utility/loop/index\";\r\nimport { isPositive } from \"../../util/is/index\";\r\nimport { zip } from \"../../object/index\";\r\n\r\nconst baseTable = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/\";\r\n\r\n// N進数を10進数number型に\r\n// parseInt\r\nconst parseNumber = (value, base=10, baseMap=baseTable) => {\r\n    baseMap = baseMap.slice(0, base);\r\n    const chars = new Array(value.length);\r\n    forIndex(chars.length, (i) => {\r\n        chars[i] = baseMap.indexOf(value[i]);\r\n    });\r\n    return chars.filter(isPositive).reduce((acc, char) => {});\r\n};\r\n\r\n// 10進数をM進数string型に\r\nconst compileNumber = (value, base=10, baseMap=baseTable) => {\r\n    baseMap = baseMap.slice(0, base);\r\n    return;\r\n};\r\n\r\n// N進数をM進数に変換\r\nconst toBaseOf = (base, origin, tobase) => {\r\n    const number = parseNumber(origin, base);\r\n    return compileNumber(number, tobase);\r\n};\r\n\r\n// {\"}{\": \"}{\"}\r\n// {\"}{\"}\r\n// if()=>{}\r\nconst parseString = (text, template) => {\r\n    text = text.split(/\\W/);\r\n    template = template.split(/\\W/);\r\n    return zip([template, text]).reduce((all, [key, value]) => {\r\n        all[key] = value;\r\n        return all;\r\n    }, {});\r\n};\r\nconsole.log(parseString(\"126\", \"temp\"));\r\n\r\n// format(\"{test}\", { test: \"value\" });\r\n// => \"value\"\r\n// extract(\"{value}\", );\r\n// => [\"value\"]\r\nconst extract = (text) => {};\r\n\r\nconst data = [{\r\n    品詞: \"\",\r\n    単語: \"単語\",\r\n    読み: \"たんご\",\r\n    tag: [\"ja\"],\r\n    discription: [\r\n        { text: \"\", link: \"@単語\" }\r\n    ],\r\n}];\r\nconst find = (query) => {\r\n    data.filter((data) => {});\r\n};\r\nfind({\r\n    tag: \"@tag\"\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/number/tobaseof.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "variable",
    "name": "baseTable",
    "memberof": "src/math/number/tobaseof.js",
    "static": true,
    "longname": "src/math/number/tobaseof.js~baseTable",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "parseNumber",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~parseNumber",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "base",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 10,
        "defaultValue": "10"
      },
      {
        "name": "baseMap",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "baseTable",
        "defaultValue": "baseTable"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "compileNumber",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~compileNumber",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "base",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 10,
        "defaultValue": "10"
      },
      {
        "name": "baseMap",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "baseTable",
        "defaultValue": "baseTable"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "toBaseOf",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~toBaseOf",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "base",
        "types": [
          "*"
        ]
      },
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "tobase",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "parseString",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~parseString",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "template",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "extract",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~extract",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "data",
    "memberof": "src/math/number/tobaseof.js",
    "static": true,
    "longname": "src/math/number/tobaseof.js~data",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "find",
    "memberof": "src/math/number/tobaseof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/number/tobaseof.js~find",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/number/tobaseof.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "query",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/math/sequence.js",
    "content": "\r\nimport { isPrime, isInfinity } from \"../util/is/number\";\r\nimport { generator } from \"../utility/generator\";\r\n\r\n// TODO: xorshift\r\n// const seedRandom = seed=>{\r\n//     let x = seed * seed;\r\n//     x ^= (x << 13);\r\n//     x -= seed;\r\n//     x ^= (x >> 17);\r\n//     x += seed;\r\n//     x ^= (x << 5);\r\n//     return (x * x - seed) / seed;\r\n// };\r\n\r\nconst sqrt5 = Math.sqrt(5);\r\n/**\r\n * N番目のフィボナッチ数を取得する。\r\n * @param {Number} frequency N番目の指定\r\n */\r\nexport const fibonacci$ = (frequency)=>{\r\n    const x = Math.pow((1 + sqrt5) / 2, frequency);\r\n    const y = Math.pow((1 - sqrt5) / 2, frequency);\r\n    return Math.round((x - y) / sqrt5);\r\n};\r\n\r\n/**\r\n * フィボナッチ数列のジェネレーター。\r\n *\r\n * @param {Number} frequency Maximum number of times fibonacci number is generated\r\n * @param {Number} prev\r\n * @param {Number} fib\r\n */\r\nexport const fibonacci = (frequency=Infinity, prev=1, fib=0)=>{\r\n    // eslint-disable-next-line no-undef\r\n    prev = BigInt(prev);fib = BigInt(0);\r\n    return generator((_)=>{\r\n        if(frequency--)\r\n            _.yield(fib = prev + (prev = fib));\r\n        else _.return();\r\n    });\r\n};\r\n// function* (frequency=Infinity, seed=1){\r\n//     // eslint-disable-next-line no-undef\r\n//     for(let prev = BigInt(seed), fib = BigInt(0);frequency--;)\r\n//         yield fib = prev + (prev = fib);\r\n// };\r\n\r\n/**\r\n * 素数のジェネレーター。\r\n *\r\n * @param {Number} frequency Maximum number of times prime number is generated\r\n */\r\nexport const prime = (frequency=Infinity)=>{\r\n    let i = 3;\r\n    return generator((_)=>{\r\n        if(!frequency--){\r\n            _.return();\r\n            return;\r\n        }\r\n        if(_.phase === 0){\r\n            _.yield(2);\r\n            return;\r\n        }\r\n        if(isPrime(i)){\r\n            _.yield(i);\r\n        }\r\n        i += 2;\r\n    });\r\n};\r\n// function* (frequency=Infinity){\r\n//     yield 2;\r\n//     for(let i = 3;frequency--;i += 2)\r\n//         if(isPrime(i))yield i;\r\n//         else frequency++;\r\n// };\r\n\r\n/**\r\n * 素因数分解。\r\n *\r\n * @param {Number} number Numbers to factor\r\n * @return Array of prime factor of `number`\r\n * @example\r\n * primeFactorization(200560490130);\r\n * // > [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]\r\n */\r\nexport const primeFactorization = (number)=>{\r\n    if(Number.isNaN(number) || isInfinity(number) || typeof number !== \"number\")\r\n        return [];\r\n    const result = [];\r\n    while(number % 2 === 0){\r\n        result.push(2);\r\n        number /= 2;\r\n    }\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        while(number % i === 0){\r\n            result.push(i);\r\n            number /= i;\r\n        }\r\n    if(number > 1)result.push(number);\r\n    return result;\r\n};\r\n\r\n/**\r\n * メルセンヌ数\r\n * @param {number} frequency\r\n */\r\nexport const hanoi = (frequency=Infinity)=>{\r\n    let number = 1;\r\n    for(;--frequency;) {\r\n        number *= 2;\r\n        number++;\r\n    }\r\n    return number;\r\n};\r\n\r\nexport const triangular = (frequency=Infinity)=>{\r\n    let i = 1, j = 0;\r\n    return generator((_)=>{\r\n        if(!frequency--){\r\n            _.return();\r\n            return;\r\n        }\r\n        _.yield(j += i++);\r\n    });\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/sequence.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "sqrt5",
    "memberof": "src/math/sequence.js",
    "static": true,
    "longname": "src/math/sequence.js~sqrt5",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "fibonacci$",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~fibonacci$",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{fibonacci$}",
    "description": "N番目のフィボナッチ数を取得する。",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "frequency",
        "description": "N番目の指定"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "fibonacci",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~fibonacci",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{fibonacci}",
    "description": "フィボナッチ数列のジェネレーター。",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "frequency",
        "description": "Maximum number of times fibonacci number is generated"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "prev",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "fib",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "prime",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~prime",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{prime}",
    "description": "素数のジェネレーター。",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "frequency",
        "description": "Maximum number of times prime number is generated"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "primeFactorization",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~primeFactorization",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{primeFactorization}",
    "description": "素因数分解。",
    "examples": [
      "primeFactorization(200560490130);\n// > [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]"
    ],
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "Numbers to factor"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Array of prime factor of `number`"
    }
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "hanoi",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~hanoi",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{hanoi}",
    "description": "メルセンヌ数",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "frequency",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "triangular",
    "memberof": "src/math/sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/sequence.js~triangular",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/sequence.js",
    "importStyle": "{triangular}",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [
      {
        "name": "frequency",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "Infinity",
        "defaultValue": "Infinity"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "src/math/tolerance.js",
    "content": "\r\n// @ts-check\r\n\r\n// ?: within\r\nexport const inRange = (value, min, max)=>(\r\n    min <= value && max >= value\r\n);\r\n\r\nexport const errorRate = (value, base)=>(\r\n    (value - base) / base * 100\r\n);\r\n\r\n// acceptable(15, {\r\n//     min: 10,\r\n//     max: 20,\r\n//     base: 12,\r\n//     error: 2,\r\n// });\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/math/tolerance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "inRange",
    "memberof": "src/math/tolerance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/tolerance.js~inRange",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/tolerance.js",
    "importStyle": "{inRange}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "errorRate",
    "memberof": "src/math/tolerance.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/tolerance.js~errorRate",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/math/tolerance.js",
    "importStyle": "{errorRate}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "base",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/object/array/index.js",
    "content": "\r\nexport * from \"./shuffle\";\r\n// export * from \"./sort/index\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/array/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "src/object/array/shuffle.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { swap } from \"../property/swap\";\r\n\r\nexport const shuffle = (data) => {\r\n    for(let i = data.length;--i;){\r\n        const r = Math.floor(Math.random() * (i + 1));\r\n        swap(data, i, r);\r\n    }\r\n    return data;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/array/shuffle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "shuffle",
    "memberof": "src/object/array/shuffle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/array/shuffle.js~shuffle",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/array/shuffle.js",
    "importStyle": "{shuffle}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/object/array/sort/heap.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { swap } from \"../../property/swap\";\r\n\r\n/**\r\n * @typedef {function(any, any): boolean} compare\r\n */\r\n\r\n/**\r\n * @param {any[]} origin\r\n * @param {number} p\r\n * @param {number} q\r\n * @param {compare} compare\r\n */\r\nconst downheap = (origin, p, q, compare)=>{\r\n    let c;\r\n    const temp = origin[p];\r\n    while((c = 2 * p + 1) <= q){\r\n        if(c < q && compare(origin[c], origin[c + 1]))\r\n            c++;\r\n        if(compare(origin[c], temp))\r\n            break;\r\n        origin[p] = origin[c];\r\n        p = c;\r\n    }\r\n    origin[p] = temp;\r\n};\r\n\r\n/**\r\n * @param {any[]} origin\r\n * @param {compare} compare\r\n */\r\nexport const heapSort = (origin, compare)=>{\r\n    const N = origin.length, M = N - 1;\r\n    if(N < 2)return origin;\r\n    for(let p = N / 2;p;)\r\n        downheap(origin, --p, M, compare);\r\n    for(let q = M;q;){\r\n        swap(origin, 0, q);\r\n        downheap(origin, 0, --q, compare);\r\n    }\r\n    return origin;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/array/sort/heap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "typedef",
    "name": "compare",
    "memberof": "src/object/array/sort/heap.js",
    "static": true,
    "longname": "src/object/array/sort/heap.js~compare",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(any, any): boolean"
      ],
      "optional": false,
      "name": "compare"
    }
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "downheap",
    "memberof": "src/object/array/sort/heap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/array/sort/heap.js~downheap",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/array/sort/heap.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "q",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "compare"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "heapSort",
    "memberof": "src/object/array/sort/heap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/array/sort/heap.js~heapSort",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/array/sort/heap.js",
    "importStyle": "{heapSort}",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "compare"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/object/array/sort/index.js",
    "content": "\r\nexport * from \"./heap\";\r\nexport * from \"./quick\";\r\nexport * from \"../../../utility/sort/intro\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/array/sort/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/object/array/sort/quick.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { average } from \"../../../math/index\";\r\nimport { swap } from \"../../property/swap\";\r\n\r\n/**\r\n * destructive: `true`,\r\n * in-place: `true`,\r\n * stable: `false`,\r\n * not-number: `true`\r\n */\r\nexport const quickSort = (origin, compare=(a, b)=>a >= b, left=0, right=origin.length)=>{\r\n    if(right - left <= 1)return origin;\r\n    const pivotIndex = Math.floor(average(left, right));\r\n    const pivot = origin[pivotIndex];\r\n    const limit = right - 1;\r\n    swap(origin, pivotIndex, limit);\r\n    let j = left;\r\n    for(let i = left;i < limit;i++)\r\n        if(compare(origin[i], pivot))\r\n            swap(origin, i, j++);\r\n    swap(origin, j, limit);\r\n    quickSort(origin, compare, left, j);\r\n    quickSort(origin, compare, j + 1, right);\r\n    return origin;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/array/sort/quick.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "quickSort",
    "memberof": "src/object/array/sort/quick.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/array/sort/quick.js~quickSort",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/array/sort/quick.js",
    "importStyle": "{quickSort}",
    "description": "destructive: `true`,\nin-place: `true`,\nstable: `false`,\nnot-number: `true`",
    "lineNumber": 13,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "compare",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "left",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "right",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "src/object/clone/clone.js",
    "content": "\r\nconst copyObject = (modules, object, cloneObject)=>{\r\n    const propKeys = modules.getAllKeys(object);\r\n    const prototype = Object.getPrototypeOf(object);\r\n    object = propKeys.reduce((propertiesObject, propKey) => {\r\n        const prop = Object.getOwnPropertyDescriptor(object, propKey);\r\n        if (prop.hasOwnProperty(\"value\"))\r\n            prop.value = modules.cloneMod(prop.value, cloneObject);\r\n        Object.defineProperty(propertiesObject, propKey, prop);\r\n        return propertiesObject;\r\n    }, Object.create(prototype));\r\n    return object;\r\n};\r\nexport const copy = cloneObject=>{\r\n    console.log(`type: '${cloneObject.type}'`, [cloneObject.value]);\r\n    let object = cloneObject.value;\r\n    // primitive type, function\r\n    if(typeof object !== \"object\")\r\n        return cloneObject;\r\n    switch(cloneObject.type){\r\n    case \"object\": { // {}, new Object, new Foo etc...\r\n        object = copyObject(modules, object, cloneObject);\r\n        break;\r\n    }\r\n    case \"array\": // [], new Array\r\n        object = object.map(value=>modules.cloneMod(value, cloneObject));\r\n        break;\r\n    case \"number\": // new Number\r\n        return new Number(object);\r\n    case \"string\": // new String\r\n        return new String(object);\r\n    case \"boolean\": // new Boolean\r\n        return new Boolean(object);\r\n    case \"bigint\": // Object(BigInt())\r\n        return object.valueOf();\r\n    case \"regexp\": // /regexp/, new RegExp\r\n        return new RegExp(object);\r\n    case \"null\": // null\r\n        object = null;\r\n        break;\r\n    case \"date\": return new Date(object);\r\n    case \"map\": {\r\n        const map = new Map();\r\n        for(const [key, value] of object)\r\n            map.set(key, modules.clone(value));\r\n        return map;\r\n    }\r\n    case \"weakmap\": {\r\n        const map = new WeakMap();\r\n        for(const [key, value] of object)\r\n            map.set(key, modules.clone(value));\r\n        return map;\r\n    }\r\n    case \"set\": return new Set(object);\r\n    case \"weakset\": return new WeakSet(object);\r\n    default:\r\n        return null;\r\n    }\r\n    cloneObject.object = object;\r\n    return cloneObject;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/clone/clone.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "copyObject",
    "memberof": "src/object/clone/clone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/clone/clone.js~copyObject",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/clone/clone.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "modules",
        "types": [
          "*"
        ]
      },
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "cloneObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "copy",
    "memberof": "src/object/clone/clone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/clone/clone.js~copy",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/clone/clone.js",
    "importStyle": "{copy}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "cloneObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/object/clone/index.js",
    "content": "\r\nimport {undertake} from \"./recursive\";\r\n\r\nexport const clone = (object, depth=0)=>(\r\n    undertake(object, depth)\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/clone/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "clone",
    "memberof": "src/object/clone/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/clone/index.js~clone",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/clone/index.js",
    "importStyle": "{clone}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "depth",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": null
  },
  {
    "__docId__": 257,
    "kind": "file",
    "name": "src/object/clone/recursive.js",
    "content": "\r\nimport { copy } from \"./clone\";\r\nimport { typeOf } from \"../../utility/index\";\r\n\r\nclass CloneObject {\r\n    constructor(cloneObject, props = {}){\r\n        this.value = cloneObject;\r\n        this.existingObjects = props.existingObjects || new WeakSet();\r\n        this.isDone = false;\r\n    }\r\n    done(){\r\n        this.isDone = true;\r\n        return this.value;\r\n    }\r\n    get isExisting(){\r\n        return this.existingObjects.has(this.value);\r\n    }\r\n    get type(){\r\n        return typeOf(this.value);\r\n    }\r\n}\r\n\r\nexport const undertake = (object, props)=>{\r\n    object = new CloneObject(object, props);\r\n    if(object.isExisting)\r\n        return object.done();\r\n    console.groupCollapsed(`type: '${object.type}'`, object.value);\r\n    object.existingObjects.push(object.value);\r\n    const cloneObject = copy(object);\r\n    cloneObject.existingObjects.push(cloneObject.value);\r\n    console.log(cloneObject.existingObjects);\r\n    console.groupEnd();\r\n    return cloneObject.done();\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/clone/recursive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 258,
    "kind": "class",
    "name": "CloneObject",
    "memberof": "src/object/clone/recursive.js",
    "static": true,
    "longname": "src/object/clone/recursive.js~CloneObject",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/clone/recursive.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "value",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#value",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "existingObjects",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#existingObjects",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "isDone",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#isDone",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "done",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#done",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "get",
    "name": "isExisting",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#isExisting",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "get",
    "name": "type",
    "memberof": "src/object/clone/recursive.js~CloneObject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/clone/recursive.js~CloneObject#type",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "undertake",
    "memberof": "src/object/clone/recursive.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/clone/recursive.js~undertake",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/clone/recursive.js",
    "importStyle": "{undertake}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "src/object/clone.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { substitute } from \"../utility/index\";\r\nimport { isRegExp } from \"../util/is/index\";\r\nimport { deepBase } from \"./deepbase/index\";\r\nimport { has } from \"./property/has.js\";\r\n\r\n/**\r\n * WIP:\r\n * @param {Object} object\r\n * @param {Number} depth\r\n */\r\nexport const clone_WIP = (object, depth)=>{\r\n    const result = {};\r\n    let temp = result;\r\n    deepBase(object, {\r\n        hooks: {\r\n            every(){},\r\n            propBefore(prop){\r\n                const prototype = Object.getPrototypeOf(prop.value);\r\n                Object.create(prototype);\r\n                if(isRegExp(prop)){\r\n                    const next = new RegExp(prop.value);\r\n                }\r\n            },\r\n        },\r\n        propFunc(o, propName){\r\n            const prop = Object.getOwnPropertyDescriptor(o, propName);\r\n            if(has(prop, \"value\"))prop.value = null;\r\n            Object.defineProperty(temp, propName, prop);\r\n        },\r\n        propFuncIfObject(o, propName){\r\n            const target = o[propName];\r\n            const prototype = Object.getPrototypeOf(target);\r\n            const __ = Object.create(prototype);\r\n            temp[propName] = temp[propName] || __;\r\n            temp = temp[propName];\r\n        },\r\n        structureCall(r){\r\n            console.log(r);\r\n        },\r\n        depth: substitute([depth, Infinity])\r\n    });\r\n    console.log(object, \"=>\", result);\r\n    return result;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/clone.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "clone_WIP",
    "memberof": "src/object/clone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/clone.js~clone_WIP",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/clone.js",
    "importStyle": "{clone_WIP}",
    "description": "WIP:",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "src/object/deepbase/allocate.js",
    "content": "\r\nimport { callOrElse } from \"../../utility/index\";\r\nimport { isObject } from \"../../util/is/index\";\r\n\r\n/**\r\n * deepBaseのプロパティー\r\n * @typedef {{\r\n * keys: Function;\r\n * depth: Number;\r\n * maxDepth: Number;\r\n * existing: Set | WeakSet;\r\n * structureCall: Function;\r\n * propFuncIfObject: Function;\r\n * propFunc: Function;\r\n * }} prop\r\n */\r\n\r\n/**\r\n * @param {*} object\r\n * @param {String | Symbol} propName\r\n * @param {prop} props\r\n */\r\nexport const allocate = (object, propName, props={})=>{\r\n    const target = Object.getOwnPropertyDescriptor(object, propName);\r\n    if(isObject(target)){\r\n        callOrElse(props.propFuncIfObject, object, propName);\r\n        if(!props.existing.has(target)){\r\n            props.existing.add(target);\r\n            deepBase(target, Object.assign({}, props, {\r\n                depth: props.depth + 1,\r\n            }));\r\n        }\r\n    }else{\r\n        const prop = Object.getOwnPropertyDescriptor(object, propName);\r\n        callOrElse(props.propFunc, object, propName, prop);\r\n    }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/deepbase/allocate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "typedef",
    "name": "prop",
    "memberof": "src/object/deepbase/allocate.js",
    "static": true,
    "longname": "src/object/deepbase/allocate.js~prop",
    "access": "public",
    "description": "deepBaseのプロパティー",
    "type": {
      "types": [
        "{\nkeys: Function;\ndepth: Number;\nmaxDepth: Number;\nexisting: Set | WeakSet;\nstructureCall: Function;\npropFuncIfObject: Function;\npropFunc: Function;\n}"
      ],
      "optional": false,
      "name": "prop"
    }
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "allocate",
    "memberof": "src/object/deepbase/allocate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/deepbase/allocate.js~allocate",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/deepbase/allocate.js",
    "importStyle": "{allocate}",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String ",
          " Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "propName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/object/deepbase/baseClone_lodash.js",
    "content": "import Stack from \"./Stack.js\";\r\nimport arrayEach from \"./arrayEach.js\";\r\nimport assignValue from \"./assignValue.js\";\r\nimport cloneBuffer from \"./cloneBuffer.js\";\r\nimport copyArray from \"./copyArray.js\";\r\nimport copyObject from \"./copyObject.js\";\r\nimport cloneArrayBuffer from \"./cloneArrayBuffer.js\";\r\nimport cloneDataView from \"./cloneDataView.js\";\r\nimport cloneRegExp from \"./cloneRegExp.js\";\r\nimport cloneSymbol from \"./cloneSymbol.js\";\r\nimport cloneTypedArray from \"./cloneTypedArray.js\";\r\nimport copySymbols from \"./copySymbols.js\";\r\nimport copySymbolsIn from \"./copySymbolsIn.js\";\r\nimport getAllKeys from \"./getAllKeys.js\";\r\nimport getAllKeysIn from \"./getAllKeysIn.js\";\r\nimport getTag from \"./getTag.js\";\r\nimport initCloneObject from \"./initCloneObject.js\";\r\nimport isBuffer from \"../isBuffer.js\";\r\nimport isObject from \"../isObject.js\";\r\nimport isTypedArray from \"../isTypedArray.js\";\r\nimport keys from \"../keys.js\";\r\nimport keysIn from \"../keysIn.js\";\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nconst CLONE_DEEP_FLAG = 1;\r\nconst CLONE_FLAT_FLAG = 2;\r\nconst CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nconst argsTag = \"[object Arguments]\";\r\nconst arrayTag = \"[object Array]\";\r\nconst boolTag = \"[object Boolean]\";\r\nconst dateTag = \"[object Date]\";\r\nconst errorTag = \"[object Error]\";\r\nconst mapTag = \"[object Map]\";\r\nconst numberTag = \"[object Number]\";\r\nconst objectTag = \"[object Object]\";\r\nconst regexpTag = \"[object RegExp]\";\r\nconst setTag = \"[object Set]\";\r\nconst stringTag = \"[object String]\";\r\nconst symbolTag = \"[object Symbol]\";\r\nconst weakMapTag = \"[object WeakMap]\";\r\n\r\nconst arrayBufferTag = \"[object ArrayBuffer]\";\r\nconst dataViewTag = \"[object DataView]\";\r\nconst float32Tag = \"[object Float32Array]\";\r\nconst float64Tag = \"[object Float64Array]\";\r\nconst int8Tag = \"[object Int8Array]\";\r\nconst int16Tag = \"[object Int16Array]\";\r\nconst int32Tag = \"[object Int32Array]\";\r\nconst uint8Tag = \"[object Uint8Array]\";\r\nconst uint8ClampedTag = \"[object Uint8ClampedArray]\";\r\nconst uint16Tag = \"[object Uint16Array]\";\r\nconst uint32Tag = \"[object Uint32Array]\";\r\n\r\n/** Used to identify `toStringTag` values supported by `clone`. */\r\nconst cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag]\r\n    = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag]\r\n    = cloneableTags[boolTag] = cloneableTags[dateTag]\r\n    = cloneableTags[float32Tag] = cloneableTags[float64Tag]\r\n    = cloneableTags[int8Tag] = cloneableTags[int16Tag]\r\n    = cloneableTags[int32Tag] = cloneableTags[mapTag]\r\n    = cloneableTags[numberTag] = cloneableTags[objectTag]\r\n    = cloneableTags[regexpTag] = cloneableTags[setTag]\r\n    = cloneableTags[stringTag] = cloneableTags[symbolTag]\r\n    = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag]\r\n    = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[weakMapTag] = false;\r\n\r\n/** Used to check objects for own properties. */\r\nconst { hasOwnProperty } = Object.prototype;\r\n\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nconst initCloneByTag = (object, tag, isDeep) => {\r\n    const Ctor = object.constructor;\r\n    switch (tag) {\r\n    case arrayBufferTag:\r\n        return cloneArrayBuffer(object);\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n        return new Ctor(+object);\r\n\r\n    case dataViewTag:\r\n        return cloneDataView(object, isDeep);\r\n\r\n    case float32Tag:\r\n    case float64Tag:\r\n    case int8Tag:\r\n    case int16Tag:\r\n    case int32Tag:\r\n    case uint8Tag:\r\n    case uint8ClampedTag:\r\n    case uint16Tag:\r\n    case uint32Tag:\r\n        return cloneTypedArray(object, isDeep);\r\n\r\n    case mapTag:\r\n        return new Ctor();\r\n\r\n    case numberTag:\r\n    case stringTag:\r\n        return new Ctor(object);\r\n\r\n    case regexpTag:\r\n        return cloneRegExp(object);\r\n\r\n    case setTag:\r\n        return new Ctor();\r\n\r\n    case symbolTag:\r\n        return cloneSymbol(object);\r\n    }\r\n};\r\n\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nconst initCloneArray = (array) => {\r\n    const {\r\n        length\r\n    } = array;\r\n    const result = new array.constructor(length);\r\n\r\n    // Add properties assigned by `RegExp#exec`.\r\n    if (length && typeof array[0] === \"string\" && hasOwnProperty.call(array, \"index\")) {\r\n        result.index = array.index;\r\n        result.input = array.input;\r\n    }\r\n    return result;\r\n};\r\n\r\n/**\r\n * The base implementation of `clone` and `cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {number} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\n// eslint-disable-next-line max-statements, complexity\r\nconst baseClone = (value, bitmask, customizer, key, object, stack) => {\r\n    let result;\r\n    const isDeep = bitmask & CLONE_DEEP_FLAG;\r\n    const isFlat = bitmask & CLONE_FLAT_FLAG;\r\n    const isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n    if (customizer) {\r\n        result = object ? customizer(value, key, object, stack) : customizer(value);\r\n    }\r\n    if (result !== undefined) {\r\n        return result;\r\n    }\r\n    if (!isObject(value)) {\r\n        return value;\r\n    }\r\n    const isArr = Array.isArray(value);\r\n    const tag = getTag(value);\r\n    if (isArr) {\r\n        result = initCloneArray(value);\r\n        if (!isDeep) {\r\n            return copyArray(value, result);\r\n        }\r\n    } else {\r\n        const isFunc = typeof value === \"function\";\r\n\r\n        if (isBuffer(value)) {\r\n            return cloneBuffer(value, isDeep);\r\n        }\r\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n            result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n            if (!isDeep) {\r\n                return isFlat\r\n                    ? copySymbolsIn(value, copyObject(value, keysIn(value), result))\r\n                    : copySymbols(value, Object.assign(result, value));\r\n            }\r\n        } else {\r\n            if (isFunc || !cloneableTags[tag]) {\r\n                return object ? value : {};\r\n            }\r\n            result = initCloneByTag(value, tag, isDeep);\r\n        }\r\n    }\r\n    // Check for circular references and return its corresponding clone.\r\n    stack || (stack = new Stack());\r\n    const stacked = stack.get(value);\r\n    if (stacked) {\r\n        return stacked;\r\n    }\r\n    stack.set(value, result);\r\n\r\n    if (tag == mapTag) {\r\n        value.forEach((subValue, key) => {\r\n            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n        });\r\n        return result;\r\n    }\r\n\r\n    if (tag == setTag) {\r\n        value.forEach((subValue) => {\r\n            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n        });\r\n        return result;\r\n    }\r\n\r\n    if (isTypedArray(value)) {\r\n        return result;\r\n    }\r\n\r\n    const keysFunc = isFull\r\n        ? (isFlat ? getAllKeysIn : getAllKeys)\r\n        : (isFlat ? keysIn : keys);\r\n\r\n    const props = isArr ? undefined : keysFunc(value);\r\n    arrayEach(props || value, (subValue, key) => {\r\n        if (props) {\r\n            key = subValue;\r\n            subValue = value[key];\r\n        }\r\n        // Recursively populate clone (susceptible to call stack limits).\r\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n    return result;\r\n}\r\n\r\nexport default baseClone;\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "variable",
    "name": "CLONE_DEEP_FLAG",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~CLONE_DEEP_FLAG",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "Used to compose bitmasks for cloning.",
    "lineNumber": 25,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "CLONE_FLAT_FLAG",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~CLONE_FLAT_FLAG",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "variable",
    "name": "CLONE_SYMBOLS_FLAG",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~CLONE_SYMBOLS_FLAG",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "argsTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~argsTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "`Object#toString` result references.",
    "lineNumber": 30,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "arrayTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~arrayTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "boolTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~boolTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "variable",
    "name": "dateTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~dateTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "name": "errorTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~errorTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "name": "mapTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~mapTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "name": "numberTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~numberTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "variable",
    "name": "objectTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~objectTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "variable",
    "name": "regexpTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~regexpTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "setTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~setTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "stringTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~stringTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "symbolTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~symbolTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "weakMapTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~weakMapTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "variable",
    "name": "arrayBufferTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~arrayBufferTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "dataViewTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~dataViewTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "float32Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~float32Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "float64Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~float64Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "int8Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~int8Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "int16Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~int16Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "int32Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~int32Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "uint8Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~uint8Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "variable",
    "name": "uint8ClampedTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~uint8ClampedTag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "variable",
    "name": "uint16Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~uint16Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "uint32Tag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~uint32Tag",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "variable",
    "name": "cloneableTags",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~cloneableTags",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "Used to identify `toStringTag` values supported by `clone`.",
    "lineNumber": 57,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "variable",
    "name": "hasOwnProperty",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~hasOwnProperty",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "Used to check objects for own properties.",
    "lineNumber": 72,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "initCloneByTag",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~initCloneByTag",
    "access": "private",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "Initializes an object clone based on its `toStringTag`.\n\n**Note:** This function only supports cloning values with tags of\n`Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Returns the initialized clone."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to clone."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": "The `toStringTag` of the object to clone."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isDeep",
        "description": "Specify a deep clone."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Returns the initialized clone."
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "initCloneArray",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~initCloneArray",
    "access": "private",
    "export": false,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": null,
    "description": "Initializes an array clone.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} Returns the initialized clone."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "The array to clone."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Returns the initialized clone."
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "baseClone",
    "memberof": "src/object/deepbase/baseClone_lodash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/deepbase/baseClone_lodash.js~baseClone",
    "access": "private",
    "export": true,
    "importPath": "reiyayakko-core/src/object/deepbase/baseClone_lodash.js",
    "importStyle": "baseClone",
    "description": "The base implementation of `clone` and `cloneDeep` which tracks\ntraversed objects.",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} Returns the cloned value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to clone."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bitmask",
        "description": "The bitmask flags.\n 1 - Deep clone\n 2 - Flatten inherited properties\n 4 - Clone symbols"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "customizer",
        "description": "The function to customize cloning."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "key",
        "description": "The key of `value`."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "object",
        "description": "The parent object of `value`."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "stack",
        "description": "Tracks traversed objects and their clone counterparts."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Returns the cloned value."
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/object/deepbase/index.js",
    "content": "\r\nexport * from \"./base\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/deepbase/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "src/object/editable.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { typeOf, zip } from \"../utility\";\r\nimport { has } from \"./property\";\r\nimport { each } from \"../utility/loop/each\";\r\n\r\n// Common\r\nexport class Editable {\r\n    constructor(origin){\r\n        this.origin = origin || {};\r\n        this.type = typeOf(origin);\r\n    }\r\n    get size(){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.size;\r\n        case \"Array\":\r\n            return this.origin.length;\r\n        default:\r\n            return Object.keys(this.origin).length;\r\n        }\r\n    }\r\n    has(key){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.has(key);\r\n        case \"Array\":\r\n            return this.origin.includes(key);\r\n        default:\r\n            return has(this.origin, key);\r\n        }\r\n    }\r\n    get(key){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n            return this.origin.get(key);\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.has(key) ? key : null;\r\n        default:\r\n            return this.origin[key];\r\n        }\r\n    }\r\n    set(key, value){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n            this.origin.set(key, value);\r\n            break;\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            this.origin.add(value);\r\n            break;\r\n        default:\r\n            this.origin[key] = value;\r\n        }\r\n    }\r\n    delete(key){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            this.origin.delete(key);\r\n            break;\r\n        default:\r\n            delete this.origin[key];\r\n        }\r\n    }\r\n    forEach(callbackFn, thisArg){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n        case \"Array\":\r\n            this.origin.forEach(callbackFn, thisArg);\r\n            break;\r\n        default:\r\n            each.call(thisArg, this.origin, callbackFn);\r\n        }\r\n    }\r\n    entries(){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.entries();\r\n        default:\r\n            return zip([Object.keys(this.origin), Object.values(this.origin)]);\r\n        }\r\n    }\r\n    keys(){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.keys();\r\n        default:\r\n            return Object.keys(this.origin);\r\n        }\r\n    }\r\n    values(){\r\n        switch(this.type){\r\n        case \"WeakMap\":\r\n        case \"Map\":\r\n        case \"WeakSet\":\r\n        case \"Set\":\r\n            return this.origin.values();\r\n        default:\r\n            return Object.values(this.origin);\r\n        }\r\n    }\r\n    [Symbol.iterator](){\r\n        return this.origin[Symbol.iterator]();\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/editable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "class",
    "name": "Editable",
    "memberof": "src/object/editable.js",
    "static": true,
    "longname": "src/object/editable.js~Editable",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/editable.js",
    "importStyle": "{Editable}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 309,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "origin",
    "memberof": "src/object/editable.js~Editable",
    "static": false,
    "longname": "src/object/editable.js~Editable#origin",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "type",
    "memberof": "src/object/editable.js~Editable",
    "static": false,
    "longname": "src/object/editable.js~Editable#type",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "get",
    "name": "size",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#size",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "has",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#has",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "get",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#get",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "set",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#set",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "delete",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#delete",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#forEach",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "callbackFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "thisArg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "entries",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#entries",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "keys",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#keys",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "values",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#values",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/object/editable.js~Editable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/editable.js~Editable#[Symbol.iterator]",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/object/equals.js",
    "content": "\r\nimport * as utility from \"../utility/index\";\r\nconst deepEqual = ([value, other])=>{\r\n    const type = utility.typeOf(value);\r\n    if(type !== utility.typeOf(other))\r\n        return false;\r\n    if(typeof value === \"object\"){\r\n        const zip = utility.zip(utility.iterate(value), utility.iterate(other));\r\n        return zip.every(deepEqual);\r\n    }\r\n    return utility.equals(value, other);\r\n};\r\nexport const deepEquals = (...values)=>{\r\n    let prev = values.shift();\r\n    return values.every(value=>deepEqual([prev, prev=value]));\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/equals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "deepEqual",
    "memberof": "src/object/equals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/equals.js~deepEqual",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/equals.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "deepEquals",
    "memberof": "src/object/equals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/equals.js~deepEquals",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/equals.js",
    "importStyle": "{deepEquals}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "values",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "src/object/extract.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { property } from \"./property\";\r\nimport { each } from \"../utility/loop/each\";\r\n\r\nexport const extract = (source, picker)=>{\r\n    each(picker, (value, key)=>{\r\n        picker[key] = property(source, value);\r\n    });\r\n    return picker;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/extract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "extract",
    "memberof": "src/object/extract.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/extract.js~extract",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/extract.js",
    "importStyle": "{extract}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "picker",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "file",
    "name": "src/object/index.js",
    "content": "\r\n// export * from \"./clone/index\";\r\nexport * from \"./array/index\";\r\nexport * from \"./deepbase/index\";\r\nexport * from \"./structure/index\";\r\nexport * from \"./property/index\";\r\nexport * from \"./clone\";\r\nexport * from \"./temp\";\r\nexport * from \"./zip.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 328,
    "kind": "file",
    "name": "src/object/map.js",
    "content": "\r\n/*\r\nreiyayakkoPackage.addModule(\"object.Map\", ({modules})=>class ObjectMap {\r\n    constructor(map){\r\n        this.map = [];\r\n    }\r\n    static _find(key){\r\n        return ([entryKey])=>modules.equals(entryKey, key);\r\n    }\r\n    get size(){\r\n        return this.map.length;\r\n    }\r\n    get(key){\r\n        return this.map.find(modules.object.Map._find(key));\r\n    }\r\n    set(key, value){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            this.map.push([key, value]);\r\n        else\r\n            this.map[index] = [key, value];\r\n    }\r\n    has(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        return index !== -1;\r\n    }\r\n    delete(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            return false;\r\n        this.map.splice(index, 1);\r\n        return true;\r\n    }\r\n    clear(){\r\n        this.map = [];\r\n    }\r\n    entries(){\r\n        return this.map.map(entry=>entry);\r\n    }\r\n    forEach(){\r\n        this.map.forEach(...arguments);\r\n    }\r\n    keys(){\r\n        return this.map.map(([key])=>key);\r\n    }\r\n    values(){\r\n        return this.map.map(([,value])=>value);\r\n    }\r\n    [Symbol.iterator](){\r\n        const that = this;\r\n        return (function* (){\r\n            for(const entry of that.map)\r\n                yield entry;\r\n        })();\r\n    }\r\n});\r\nreiyayakkoPackage.addModule({\r\n    name: [\"object.Map.prototype\", Symbol.toStringTag],\r\n    enumerable: false,\r\n}, ()=>\"ObjectMap\");\r\n//*/\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "file",
    "name": "src/object/property/allkeys.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isNullLike } from \"../../util/index.js\";\r\nimport { keys } from \"./keys.js\";\r\n\r\nconst getPropNames = Object.getOwnPropertyNames || keys;\r\n\r\nconst getPropSymbols = Object.getOwnPropertySymbols;\r\n\r\n/**\r\n * 受け取ったオブジェクトの全てのプロパティー名とSymbolを取得します。\r\n * @param  {any} object キーを取得するオブジェクトです。\r\n * @return {PropertyKey[]} オブジェクトのプロパティー名とSymbolの配列です。\r\n */\r\nexport const allKeys = (object)=>(\r\n    isNullLike(object) ? null : []\r\n        .concat(getPropNames(object))\r\n        .concat(getPropSymbols && getPropSymbols(object))\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/allkeys.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "getPropNames",
    "memberof": "src/object/property/allkeys.js",
    "static": true,
    "longname": "src/object/property/allkeys.js~getPropNames",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/property/allkeys.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "getPropSymbols",
    "memberof": "src/object/property/allkeys.js",
    "static": true,
    "longname": "src/object/property/allkeys.js~getPropSymbols",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/property/allkeys.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "function",
    "name": "allKeys",
    "memberof": "src/object/property/allkeys.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/allkeys.js~allKeys",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/allkeys.js",
    "importStyle": "{allKeys}",
    "description": "受け取ったオブジェクトの全てのプロパティー名とSymbolを取得します。",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "キーを取得するオブジェクトです。"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PropertyKey[]"
      ],
      "spread": false,
      "description": "オブジェクトのプロパティー名とSymbolの配列です。"
    }
  },
  {
    "__docId__": 333,
    "kind": "file",
    "name": "src/object/property/has.js",
    "content": "\r\n// @ts-check\r\n\r\n/**\r\n * @param {object} object\r\n * @param {PropertyKey} propName\r\n * @return {boolean}\r\n */\r\nexport const has = (object, propName)=>(\r\n    Object.prototype.hasOwnProperty.call(object, propName)\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/has.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "has",
    "memberof": "src/object/property/has.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/has.js~has",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/has.js",
    "importStyle": "{has}",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PropertyKey"
        ],
        "spread": false,
        "optional": false,
        "name": "propName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 335,
    "kind": "file",
    "name": "src/object/property/index.js",
    "content": "\r\nexport * from \"./keys.js\";\r\nexport * from \"./allkeys.js\";\r\nexport * from \"./has.js\";\r\nexport * from \"./property\";\r\nexport * from \"./swap\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "src/object/property/keys.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { has } from \"./has\";\r\n\r\n/**\r\n * @param {object} obj\r\n * @return {string[]}\r\n */\r\nexport const keys = (obj) => {\r\n    const result = [];\r\n    for(const key in obj)\r\n        has(obj, key) && result.push(key);\r\n    return result;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/keys.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "keys",
    "memberof": "src/object/property/keys.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/keys.js~keys",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/keys.js",
    "importStyle": "{keys}",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "src/object/property/parsePropertyKey.js",
    "content": "\r\nimport { isString, isSymbol, isNumber } from \"../../util/index.js\";\r\n\r\nconst flat = (array, depth=1) => {\r\n    const flattend = [];\r\n    const flatCall = (array, depth) => {\r\n        for(const el of array) {\r\n            if (Array.isArray(el) && depth > 0)\r\n                flatCall(el, depth - 1);\r\n            else flattend.push(el);\r\n        }\r\n    };\r\n    flatCall(array, Math.floor(depth));\r\n    return flattend;\r\n};\r\n\r\n/**\r\n * @param {PropertyKey | PropertyKey[]} propKey\r\n * @return {PropertyKey[]}\r\n */\r\nexport const parsePropertyKey = (propKey) => {\r\n    switch(typeof propKey) {\r\n    case \"string\":\r\n        return propKey.split(\".\");\r\n    case \"number\":\r\n    case \"symbol\":\r\n        return [propKey];\r\n    case \"object\": {\r\n        const temp = propKey.map((key) => (\r\n            typeof key === \"string\" ? key.split(\".\") : key\r\n        ));\r\n        return flat(temp);\r\n    }\r\n    }\r\n    return (\r\n        isString(propKey) ? propKey.split(\".\")\r\n        : isSymbol(propKey) || isNumber(propKey) ? [propKey]\r\n        : flat(propKey.map((key)=>(\r\n            typeof key === \"string\" ? key.split(\".\") : key\r\n        )))\r\n    );\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/parsePropertyKey.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "flat",
    "memberof": "src/object/property/parsePropertyKey.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/parsePropertyKey.js~flat",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/property/parsePropertyKey.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "depth",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "parsePropertyKey",
    "memberof": "src/object/property/parsePropertyKey.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/parsePropertyKey.js~parsePropertyKey",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/parsePropertyKey.js",
    "importStyle": "{parsePropertyKey}",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "PropertyKey ",
          " PropertyKey[]"
        ],
        "spread": false,
        "optional": false,
        "name": "propKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PropertyKey[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "file",
    "name": "src/object/property/property.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { forOf } from \"../../utility/index.js\";\r\nimport { isObject } from \"../../util/index.js\";\r\nimport { parsePropertyKey } from \"./parsePropertyKey.js\";\r\nimport { has } from \"./has.js\";\r\n\r\n\r\n/**\r\n *\r\n * @param {Object} obj\r\n * @param {PropertyKey | PropertyKey[]} propKey\r\n * @param {*} [defineObj]\r\n */\r\nexport const property = (obj, propKey, defineObj)=>{\r\n    const propKeys = parsePropertyKey(propKey);\r\n    const define = isObject(defineObj);\r\n    return propKeys.reduce((object, key)=>(\r\n        define && !has(object, key)\r\n            ? (object[key] = defineObj)\r\n            : object[key]\r\n    ), obj);\r\n};\r\n\r\nexport const structure = (baseObj={}, applyObj={})=>{\r\n    forOf(allKeys(applyObj), (propName)=>{\r\n        const applyProp = applyObj[propName];\r\n        if(typeof applyProp === \"object\")\r\n            structure(baseObj[propName], applyProp);\r\n        else baseObj[propName] = applyProp;\r\n    });\r\n    return baseObj;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/property.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "property",
    "memberof": "src/object/property/property.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/property.js~property",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/property.js",
    "importStyle": "{property}",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PropertyKey ",
          " PropertyKey[]"
        ],
        "spread": false,
        "optional": false,
        "name": "propKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "defineObj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "structure",
    "memberof": "src/object/property/property.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/property.js~structure",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/property.js",
    "importStyle": "{structure}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "baseObj",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "applyObj",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "src/object/property/swap.js",
    "content": "\r\n// @ts-check\r\n\r\n/**\r\n * @param {*} orign\r\n * @param {PropertyKey} m\r\n * @param {PropertyKey} n\r\n */\r\nexport const swap = (orign, m, n)=>{\r\n    const temp = orign[m];\r\n    orign[m] = orign[n];\r\n    orign[n] = temp;\r\n    return orign;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/property/swap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "swap",
    "memberof": "src/object/property/swap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/property/swap.js~swap",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/property/swap.js",
    "importStyle": "{swap}",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "orign",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PropertyKey"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PropertyKey"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "src/object/structure/class.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { has, keys } from \"../property/index\";\r\nimport { parsePropertyKey } from \"../property/parsePropertyKey\";\r\nimport { each } from \"../../utility/loop/each\";\r\nimport { isArray, isString } from \"../../util/is/type\";\r\nimport { patch, substitute } from \"../../utility/condition\";\r\n\r\nclass FindProperty {\r\n    constructor() {\r\n        this.depth = 0;\r\n    }\r\n}\r\n\r\nconst log = (...msgs) => {\r\n    const first = msgs.shift();\r\n    if(isString(first))\r\n        msgs.unshift(`%c${first}`, \"color: lightseagreen\");\r\n    else msgs.unshift(first);\r\n    console.log(...msgs);\r\n};\r\n\r\nclass Structure {\r\n    constructor(type) {\r\n        this.type = type || \"structure\";\r\n        this.children = Object.create(null);\r\n        this.meta = {\r\n            link: [],\r\n            index: null,\r\n            extends: [],\r\n            tags: []\r\n        };\r\n    }\r\n    // has(name) {\r\n    //     name = parsePropertyKey(name);\r\n    //     return has(this.children, name)\r\n    //     || keys(this.children).every((_)=>{\r\n    //         _.has();\r\n    //     });\r\n    // }\r\n    has(name) {\r\n        name = parsePropertyKey(name);\r\n        log(\"has:\", name);\r\n        const ___ = has(this.children, name.pop());\r\n        log(\"has:\", name, \":) has: 1\", has(this.children, \"1\"));\r\n        if(!name.length)\r\n            return ___;\r\n        return ___ && keys(this.children).some((_)=>(\r\n            this.children[_].has(name)\r\n        ));\r\n    }\r\n    // ?: これはserth?\r\n    find(options) {\r\n        patch(options, {\r\n            key: \"fn\" ||[\"tag1\", \"tag2\"],\r\n            tag: \"tag\" ||[\"tag1\", \"tag2\"],\r\n            query: {},\r\n        });\r\n        options.depth = substitute([options.depth, 0], Number.isSafeInteger);\r\n        // options. = substitute([options., ], );\r\n\r\n        if(!(options.props instanceof FindProperty))\r\n            options.props = new FindProperty();\r\n\r\n        this.find(options);\r\n        options.depth\r\n    }\r\n    get(name) {\r\n        if(this.has(name))\r\n            return this.children[name];\r\n        each(this.meta.link, (link)=>{\r\n            if(this.has(link + name))\r\n                return this.get(link + name);\r\n        });\r\n        return null;\r\n    }\r\n    set(name, value) {\r\n        this.children[name] = value instanceof Property\r\n            ? value : new Property(value);\r\n        return this;\r\n    }\r\n    solution(name) {\r\n        name = parsePropertyKey(name);\r\n        this.meta.link.push(name);\r\n    }\r\n}\r\n\r\nclass Property extends Structure {\r\n    constructor(value, readonly) {\r\n        super();\r\n        this.value = value;\r\n        this.readonly = Boolean(readonly);\r\n        this.status = \"public\";\r\n    }\r\n    setStatus(status) {\r\n        // public\r\n        // protected\r\n        // private\r\n        this.status = status;\r\n    }\r\n}\r\n\r\nexport class RootStructure extends Structure {\r\n    get(name) {\r\n        name = parsePropertyKey(name);\r\n        return name.reduce((context, key) => {\r\n            if(context.has(key))\r\n                return super.get(key);\r\n            return context;\r\n        }, this);\r\n    }\r\n    set(name, value) {\r\n        name = parsePropertyKey(name);\r\n        const key = name.pop();\r\n        const _ = name.reduce((context, key) => {\r\n            console.log(context);\r\n            if(!context.has(key))\r\n                context.set(key, null);\r\n            return context.get(key);\r\n        }, this);\r\n        if(_ === this)\r\n            return super.set(key, value);\r\n        return _.set(key, value);\r\n    }\r\n}\r\n\r\nexport class Capsule {}\r\n\r\nconst bruteCall = function(cbfn, ...args) {\r\n    console.groupCollapsed(\"%cbruteCall\", \"color: deepskyblue\");\r\n    try {\r\n        cbfn.apply(this, args);\r\n    }catch(err) {\r\n        console.error(err);\r\n    }\r\n    console.log(\"%cend\", \"color: coral\");\r\n    console.groupEnd();\r\n};\r\n\r\nbruteCall(()=>{\r\n    const root = new RootStructure();\r\n\r\n    bruteCall(()=>{\r\n        root.set(\"log\", log);\r\n        root.get(\"log\").value(\"log\");\r\n    });\r\n\r\n    bruteCall(()=>{\r\n        log(\"1.1:\", root.get(\"1.1\"));\r\n        root.set(\"1\", root);\r\n        root.get(\"log\").value(root.has(\"1.1\"));\r\n    });\r\n\r\n    bruteCall(()=>{\r\n        root.set(\"temp.s\", log);\r\n        root.solution(\"temp\");\r\n        root.get(\"s\").value(\"solution log\");\r\n    });\r\n\r\n    bruteCall(()=>{\r\n        root.set(\"util.fn.log\", log);\r\n\r\n        root.solution(\"util\");\r\n        root.get(\"util\").solution(\"fn\");\r\n\r\n        const _1 = root.get(\"log\");\r\n        log(_1);\r\n        _1.value(\"util.fn.log\");\r\n    });\r\n\r\n    log(root);\r\n    const _root = {\r\n        set: \"value\",\r\n        set2: {\r\n            set: \"value\"\r\n        },\r\n        __proto__: {\r\n            set2link: {\r\n                set: \"value\"\r\n            }\r\n        }\r\n    };\r\n});\r\n\r\n// const createInstance = (Class) => {\r\n//     const instance = Object.create(Class.prototype);\r\n//     const result = Class.prototype.constructor.call(instance);\r\n//     return isObject(result) ? result : instance;\r\n// };\r\n\r\n// try {\r\n//     const Cs = [];\r\n//     class C1 {}\r\n//     Cs.push(class {});\r\n//     Cs.push(C1);\r\n//     Cs.push(class C2 extends C1 {});\r\n//     Cs.push(class C3 extends (class {}) {});\r\n//     Cs.push(class extends (class {}) {});\r\n//     Cs.push(class extends C1 {});\r\n//     Cs.forEach((C, i)=>{\r\n//         try{\r\n//             const result = createInstance(C);\r\n//             console.log(`complete create new instance of C${i}`, result);\r\n//         }catch(e){\r\n//             console.error(`resolve create new instance of C${i}`, e);\r\n//         }\r\n//     });\r\n// }catch(err) {\r\n//     console.error(err);\r\n// }\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/structure/class.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "class",
    "name": "FindProperty",
    "memberof": "src/object/structure/class.js",
    "static": true,
    "longname": "src/object/structure/class.js~FindProperty",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 348,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/object/structure/class.js~FindProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~FindProperty#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "depth",
    "memberof": "src/object/structure/class.js~FindProperty",
    "static": false,
    "longname": "src/object/structure/class.js~FindProperty#depth",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "log",
    "memberof": "src/object/structure/class.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/structure/class.js~log",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "msgs",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "Structure",
    "memberof": "src/object/structure/class.js",
    "static": true,
    "longname": "src/object/structure/class.js~Structure",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "type",
    "memberof": "src/object/structure/class.js~Structure",
    "static": false,
    "longname": "src/object/structure/class.js~Structure#type",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "children",
    "memberof": "src/object/structure/class.js~Structure",
    "static": false,
    "longname": "src/object/structure/class.js~Structure#children",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "meta",
    "memberof": "src/object/structure/class.js~Structure",
    "static": false,
    "longname": "src/object/structure/class.js~Structure#meta",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{\"link\": *, \"index\": *, \"extends\": *, \"tags\": *}"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "has",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#has",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "find",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#find",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "get",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#get",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "set",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#set",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "solution",
    "memberof": "src/object/structure/class.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Structure#solution",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "class",
    "name": "Property",
    "memberof": "src/object/structure/class.js",
    "static": true,
    "longname": "src/object/structure/class.js~Property",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "interface": false,
    "extends": [
      "Structure"
    ],
    "ignore": true
  },
  {
    "__docId__": 362,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/object/structure/class.js~Property",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Property#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 363,
    "kind": "member",
    "name": "value",
    "memberof": "src/object/structure/class.js~Property",
    "static": false,
    "longname": "src/object/structure/class.js~Property#value",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "readonly",
    "memberof": "src/object/structure/class.js~Property",
    "static": false,
    "longname": "src/object/structure/class.js~Property#readonly",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "status",
    "memberof": "src/object/structure/class.js~Property",
    "static": false,
    "longname": "src/object/structure/class.js~Property#status",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "setStatus",
    "memberof": "src/object/structure/class.js~Property",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~Property#setStatus",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "status",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 368,
    "kind": "class",
    "name": "RootStructure",
    "memberof": "src/object/structure/class.js",
    "static": true,
    "longname": "src/object/structure/class.js~RootStructure",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": "{RootStructure}",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "interface": false,
    "extends": [
      "Structure"
    ]
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "get",
    "memberof": "src/object/structure/class.js~RootStructure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~RootStructure#get",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "set",
    "memberof": "src/object/structure/class.js~RootStructure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/object/structure/class.js~RootStructure#set",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "class",
    "name": "Capsule",
    "memberof": "src/object/structure/class.js",
    "static": true,
    "longname": "src/object/structure/class.js~Capsule",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": "{Capsule}",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "bruteCall",
    "memberof": "src/object/structure/class.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/structure/class.js~bruteCall",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/object/structure/class.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [
      {
        "name": "cbfn",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "src/object/structure/index.js",
    "content": "\r\nexport * from \"./class\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/structure/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "src/object/zip.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isArrayLike } from \"../util/is/index.js\";\r\nimport { forOf } from \"../utility/loop/for-of.js\";\r\n\r\n/**\r\n * Flip objects at depth 0 and 1.\r\n *\r\n * オブジェクトを深さ0と1で反転します。\r\n *\r\n * @param {*} objects\r\n * The target object. The child properties of this object must also be objects.\r\n *\r\n * ターゲットオブジェクト。 このオブジェクトの子プロパティもオブジェクトである必要があります。\r\n * @param {function(any): PropertyKey[]} getKeys\r\n * A function that returns the keys of the object as an array.\r\n *\r\n * オブジェクトのキーを配列として返す関数。\r\n * {@link allKeys}などが指定できます\r\n * @return {object}\r\n * An object whose depth is inverted by 0 and 1.\r\n *\r\n * 深度が0と1で反転したオブジェクト。\r\n */\r\nexport const zip = (objects, getKeys=Object.keys)=>{\r\n    const keys = getKeys(objects);\r\n    const rootIsArray = isArrayLike(objects);\r\n    const isArray = keys.every((key)=>(\r\n        isArrayLike(objects[key])\r\n        // && getKeys(objects[key]).every((_)=>/\\d/.test(_))\r\n    ));\r\n    return keys.reduce((ziped, key)=>{\r\n        forOf(getKeys(objects[key]), (name)=>{\r\n            if(!ziped[name])ziped[name] = rootIsArray ? [] : {};\r\n            ziped[name][key] = objects[key][name];\r\n        });\r\n        return ziped;\r\n    }, isArray ? [] : {});\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/object/zip.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "zip",
    "memberof": "src/object/zip.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/object/zip.js~zip",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/object/zip.js",
    "importStyle": "{zip}",
    "description": "Flip objects at depth 0 and 1.\n\nオブジェクトを深さ0と1で反転します。",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "objects",
        "description": "The target object. The child properties of this object must also be objects.\n\nターゲットオブジェクト。 このオブジェクトの子プロパティもオブジェクトである必要があります。"
      },
      {
        "nullable": null,
        "types": [
          "function(any): PropertyKey[]"
        ],
        "spread": false,
        "optional": false,
        "name": "getKeys",
        "description": "A function that returns the keys of the object as an array.\n\nオブジェクトのキーを配列として返す関数。\n{@link allKeys}などが指定できます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "An object whose depth is inverted by 0 and 1.\n\n深度が0と1で反転したオブジェクト。"
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "src/util/bitflag.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isString } from \"./is/type\";\r\n\r\n/**\r\n * NOTE: めんｄ\r\n * @example\r\n * const flags = new BitFlags(\"flagA\", \"flagB\", \"flagC\");\r\n *\r\n * let flag = flags.create(\"flagA\");\r\n * flag |= flags.flagC;\r\n *\r\n * if(flags.check(flag, \"flagA\", \"flagC\")) {\r\n *     // some code...\r\n * }\r\n * if(flags.check(flag, \"flagB\")) {\r\n *     // some code...\r\n * }\r\n */\r\nexport class BitFlags {\r\n    /**\r\n     * @param  {...string} flags\r\n     */\r\n    constructor(...flags) {\r\n        this._nextbit = 1;\r\n        flags.forEach(this.addflag, this);\r\n    }\r\n    /**\r\n     * @param {string} flag\r\n     * @return {number}\r\n     */\r\n    addflag(flag) {\r\n        this[flag] = this._nextbit;\r\n        this._nextbit <<= 1;\r\n        return this[flag];\r\n    }\r\n    mask(mask) {}\r\n    /**\r\n     * @param {number} bit\r\n     * @param {(number | string)[]} flags\r\n     * @return {boolean}\r\n     */\r\n    check(bit, ...flags) {\r\n        return flags.some((flag) =>(\r\n            (isString(flag) ? flag : this[flag]) & bit\r\n        ));\r\n    }\r\n    /**\r\n     * @param  {...string} flags\r\n     * @return {number}\r\n     */\r\n    create(...flags) {\r\n        return flags.reduce((total, flag) => (\r\n            total | this[flag]\r\n        ), 0);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/bitflag.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "class",
    "name": "BitFlags",
    "memberof": "src/util/bitflag.js",
    "static": true,
    "longname": "src/util/bitflag.js~BitFlags",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/bitflag.js",
    "importStyle": "{BitFlags}",
    "description": "NOTE: めんｄ",
    "examples": [
      "const flags = new BitFlags(\"flagA\", \"flagB\", \"flagC\");\n\nlet flag = flags.create(\"flagA\");\nflag |= flags.flagC;\n\nif(flags.check(flag, \"flagA\", \"flagC\")) {\n    // some code...\n}\nif(flags.check(flag, \"flagB\")) {\n    // some code...\n}"
    ],
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 378,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/bitflag.js~BitFlags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "_nextbit",
    "memberof": "src/util/bitflag.js~BitFlags",
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#_nextbit",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "addflag",
    "memberof": "src/util/bitflag.js~BitFlags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#addflag",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "flag",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "[flag]",
    "memberof": "src/util/bitflag.js~BitFlags",
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#[flag]",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "mask",
    "memberof": "src/util/bitflag.js~BitFlags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#mask",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "mask",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "check",
    "memberof": "src/util/bitflag.js~BitFlags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#check",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bit",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number ",
          " string)[]"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "create",
    "memberof": "src/util/bitflag.js~BitFlags",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/bitflag.js~BitFlags#create",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/util/chain.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { each } from \"../utility/loop/each\";\r\n\r\nconst use = (category, useAll, instance, context=instance) => {\r\n    each(category, (func, key)=>{\r\n        (useAll || func.api && func.api.includes(\"chain\"))\r\n        && (context[key] = function(){\r\n            return func.call(this, instance.target, ...arguments);\r\n        });\r\n    });\r\n};\r\n\r\nexport class Chain {\r\n    constructor(target){\r\n        this.target = target;\r\n    }\r\n    use(category, useAll){\r\n        use(category, useAll, this);\r\n    }\r\n}\r\n\r\nuse({}, false, Chain.prototype);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/chain.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "use",
    "memberof": "src/util/chain.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/chain.js~use",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/chain.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "category",
        "types": [
          "*"
        ]
      },
      {
        "name": "useAll",
        "types": [
          "*"
        ]
      },
      {
        "name": "instance",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "instance",
        "defaultValue": "instance"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "class",
    "name": "Chain",
    "memberof": "src/util/chain.js",
    "static": true,
    "longname": "src/util/chain.js~Chain",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/chain.js",
    "importStyle": "{Chain}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 389,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/chain.js~Chain#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "target",
    "memberof": "src/util/chain.js~Chain",
    "static": false,
    "longname": "src/util/chain.js~Chain#target",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "use",
    "memberof": "src/util/chain.js~Chain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/chain.js~Chain#use",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "category",
        "types": [
          "*"
        ]
      },
      {
        "name": "useAll",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "src/util/function/benchmark.js",
    "content": "\r\n// @ts-check\r\n\r\n/**\r\n * @param {string} text\r\n * @param {number} limit\r\n * @param {string} rest\r\n */\r\nconst pr = (text, limit, rest=\"...\") => {\r\n    if(text.length > limit) {\r\n        text = text.slice(0, limit - rest.length) + rest;\r\n    }\r\n    return text;\r\n};\r\n\r\n/*\r\nJavascriptでミリ秒より細かい数字が取得できないため、\r\n実行に時間がかからない関数ほど多く実行します。\r\nより多く実行して正確なデータを取得したい場合は大きな値を指定してください。\r\nN回目のベンチマーク実行中に以下のエラーが発生しました。\r\n*/\r\n\r\n/**\r\n * @param {function(): void} func\r\n * @param {number} base\r\n */\r\nexport const benchmark = (func, base=10000) => {\r\n    const now = typeof performance === \"object\"\r\n        ? performance : Date;\r\n    let success = true;\r\n    // 関数の表示名\r\n    const displayName = pr((func.name || func.toString()).replace(/\\s+/g, \" \"), 40);\r\n    const __ = `benchmark total time\\n(${displayName})`;\r\n\r\n    // 一回の実行時間の計測\r\n    const firstStartDate = now.now();\r\n    try{ func(); }catch(err){\r\n        console.error(\"An error occurred during the benchmark.\", err);\r\n        success = false;\r\n    }\r\n    let totalTime = now.now() - firstStartDate;\r\n\r\n    // ベンチマーク回数の決定\r\n    let count = Math.floor(base / totalTime ** 1.4 / 2);\r\n    const countRef = 1 + (success && (count = Math.max(count, 2)));\r\n\r\n    if(success) {\r\n        // 計測\r\n        console.time(__);\r\n        const startDate = now.now();\r\n        try{\r\n            for(;--count;)func();\r\n        }catch(err){\r\n            console.error(`The following error occurred during the ${countRef - count}th benchmark run.\\n`, err);\r\n            success = false;\r\n        }\r\n        totalTime += now.now() - startDate;\r\n        console.timeEnd(__);\r\n    }\r\n\r\n    // 結果の出力\r\n    const executionsCount = countRef - count;\r\n    const once = totalTime / executionsCount;\r\n    return {\r\n        success,\r\n        executionsCount,\r\n        score: once ** -1 * 2,\r\n        totalTime,\r\n        once,\r\n    };\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/function/benchmark.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "function",
    "name": "pr",
    "memberof": "src/util/function/benchmark.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/function/benchmark.js~pr",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/function/benchmark.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "limit",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rest",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "function",
    "name": "benchmark",
    "memberof": "src/util/function/benchmark.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/function/benchmark.js~benchmark",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/function/benchmark.js",
    "importStyle": "{benchmark}",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"success\": *, \"executionsCount\": *, \"score\": *, \"totalTime\": *, \"once\": *}"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "src/util/function/index.js",
    "content": "\r\nexport * from \"./benchmark.js\";\r\nexport * from \"./thinning.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/function/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "src/util/function/thinning.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isNull } from \"../is/index.js\";\r\n\r\n/**\r\n * @typedef {function(...any): void} voidFn\r\n */\r\n\r\n/**\r\n * 高階関数。一度実行してから一定時間内に発生した処理を無視、\r\n * 一定期間呼び出されなかった場合も実行する。\r\n * @param {voidFn} func\r\n * @param {number} wait 待機時間\r\n * @return {voidFn}\r\n */\r\nexport const throttle = (func, wait=1000)=>{\r\n    let id = null, waiting = false, context, args;\r\n    return function(){\r\n        if(isNull(id)){\r\n            func.apply(this, arguments);\r\n            id = setTimeout(()=>{\r\n                waiting && func.apply(context, args);\r\n                waiting = false;\r\n                id = null;\r\n            }, wait);\r\n        }else{\r\n            waiting = true;\r\n            context = this;\r\n            args = arguments;\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * 高階関数。呼び出されてから一定期間呼び出されなかった場合に実行する。\r\n * @param {voidFn} func\r\n * @param {number} wait 待機時間\r\n * @return {voidFn}\r\n */\r\nexport const debounce = (func, wait=1000)=>{\r\n    let id;\r\n    return function(){\r\n        clearTimeout(id);\r\n        id = setTimeout(()=>{\r\n            func.apply(this, arguments);\r\n        }, wait);\r\n    };\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/function/thinning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "typedef",
    "name": "voidFn",
    "memberof": "src/util/function/thinning.js",
    "static": true,
    "longname": "src/util/function/thinning.js~voidFn",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(...any): void"
      ],
      "optional": false,
      "name": "voidFn"
    }
  },
  {
    "__docId__": 398,
    "kind": "function",
    "name": "throttle",
    "memberof": "src/util/function/thinning.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/function/thinning.js~throttle",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/function/thinning.js",
    "importStyle": "{throttle}",
    "description": "高階関数。一度実行してから一定時間内に発生した処理を無視、\n一定期間呼び出されなかった場合も実行する。",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "voidFn"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": "待機時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "voidFn"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "debounce",
    "memberof": "src/util/function/thinning.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/function/thinning.js~debounce",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/function/thinning.js",
    "importStyle": "{debounce}",
    "description": "高階関数。呼び出されてから一定期間呼び出されなかった場合に実行する。",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "voidFn"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": "待機時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "voidFn"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/util/index.js",
    "content": "\r\nexport * from \"./string/index.js\";\r\nexport * from \"./function/index.js\";\r\nexport * from \"./is/index.js\";\r\nexport * from \"./random/index.js\";\r\nexport * from \"./typeof.js\";\r\nexport * from \"./range.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "file",
    "name": "src/util/is/equals.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { typeOf } from \"../typeof.js\";\r\n\r\n// SameValueZeroアルゴリズムを使用して、値がすべて等しいことを検証します。\r\n/**\r\n * Validate that the values are all equal using the SameValueZero algorithm.\r\n * @param {...any} values\r\n * @return {boolean}\r\n */\r\nexport const equals = (...values)=>{\r\n    const first = values.shift();\r\n    const equal = Number.isNaN(first)\r\n        ? Number.isNaN\r\n        : (next) => (first === next);\r\n    return values.every(equal);\r\n};\r\n\r\n/**\r\n * 引数の型({@link typeOf})が全て同じかどうかを検証します。\r\n * @param  {...any} values\r\n * @return {Boolean}\r\n */\r\nexport const equalsType = (...values)=>(\r\n    equals(...values.map(typeOf))\r\n);\r\n\r\n// IDEA: deepEqualをここにつれてくる\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/equals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "function",
    "name": "equals",
    "memberof": "src/util/is/equals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/equals.js~equals",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/equals.js",
    "importStyle": "{equals}",
    "description": "Validate that the values are all equal using the SameValueZero algorithm.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "equalsType",
    "memberof": "src/util/is/equals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/equals.js~equalsType",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/equals.js",
    "importStyle": "{equalsType}",
    "description": "引数の型({@link typeOf})が全て同じかどうかを検証します。",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 404,
    "kind": "file",
    "name": "src/util/is/index.js",
    "content": "\r\nexport * from \"./type.js\";\r\nexport * from \"./number.js\";\r\nexport * from \"./util.js\";\r\nexport * from \"./equals.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "file",
    "name": "src/util/is/is.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { equals } from \"./equals.js\";\r\n\r\n/**\r\n * Object.is\r\n * @param {*} value1\r\n * @param {*} value2\r\n */\r\nexport const is = (value1, value2)=>(\r\n    value1 === value2\r\n        ? value1 !== 0 || 1 / value1 === 1 / value2\r\n        : equals(value1, value2)\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/is.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "is",
    "memberof": "src/util/is/is.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/is.js~is",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/is.js",
    "importStyle": "{is}",
    "description": "Object.is",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value2",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/util/is/number.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isNumber, isBoolean } from \"./type.js\";\r\nimport { range } from \"../range.js\";\r\nimport { random } from \"../random/index.js\";\r\n\r\n/**\r\n * Determines if it is a negative number.\r\n *\r\n * 負の数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isNegative = (number)=>(\r\n    isNumber(number) && number < 0\r\n    || Object.is(-0, number)\r\n);\r\n\r\n/**\r\n * Determines if it is a positive number.\r\n *\r\n * 正の数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isPositive = (number)=>(\r\n    isNumber(number) && number > 0\r\n    || Object.is(0, number)\r\n);\r\n\r\n/**\r\n * Determines if infinity.\r\n *\r\n * 無限かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isInfinity = (number)=>(\r\n    number === Infinity || number === -Infinity\r\n);\r\n\r\nconst primeCheck = (number)=>{\r\n    number = Math.abs(number);\r\n    if(number === 2)\r\n        return true;\r\n    if(\r\n        isNaN(number)\r\n        || isInfinity(number)\r\n        || !Number.isInteger(number)\r\n        || number < 2\r\n        || number % 2 === 0\r\n    )return false;\r\n};\r\n\r\n/**\r\n * Determines if it is a prime number.\r\n *\r\n * 素数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isPrime = (number)=>{\r\n    const _ = primeCheck(number);\r\n    if(isBoolean(_))\r\n        return _;\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        if(number % i === 0)return false;\r\n    return true;\r\n};\r\n\r\n// const isPrime_ = (number, base)=>{\r\n//     const _ = primeCheck(number);\r\n//     if(isBoolean(_))\r\n//         return _;\r\n//     return Math.pow(2, number - 1) % number;\r\n// };\r\n// return Math.pow(2, number - 1) % number__ === 1 && (()=>{\r\n//     // n-1=2^s*dとし（但しaは整数、dは奇数)、dを求める\r\n//     let ___ = (number - 1) >> 1;\r\n//     while((___ & 1) === 0)\r\n//         ___ >>= 1;\r\n//     // 判定をbase回繰り返す\r\n//     for(;base--;){\r\n//         const a = random(1, number - 1);\r\n//         let t = ___;\r\n//         let y = Math.pow(a,t) % number;\r\n//         // [0,s-1]の範囲すべてをチェック\r\n//         while(t !== number-1 && y !== 1 && y !== number-1){\r\n//             y = Math.pow(y,2) % number;\r\n//             t <<= 1;\r\n//         }\r\n//         if(y !== number-1 && (t & 1) === 0)\r\n//             return false;\r\n//     }\r\n//     return true;\r\n// })();\r\n\r\n// ((number, base=20)=>{\r\n//     const _ = primeCheck(number);\r\n//     if(isBoolean(_))\r\n//         return _;\r\n//     const nm1 = number - 1;\r\n//     let d = nm1;\r\n//     while((d & 1) === 0)d >>= 1;\r\n//     // const d = Math.pow(2, nm1) % number;\r\n//     for(;base--;){\r\n//         const a = random(1, nm1);\r\n//         let t = d;\r\n//         let y = Math.pow(a, t) % number;\r\n//         while(t !== nm1 && y !== 1 && y !== nm1){\r\n//             y = Math.pow(2, y) % number;\r\n//             t <<= 1;\r\n//         }\r\n//         if(y !== nm1 && (t & 1) === 0)return false;\r\n//     }\r\n//     return true;\r\n// })();\r\n\r\n// const isPrime_Lucas_Lehmer_Test_FAST = (p)=>{\r\n//     let s = 4;\r\n//     const M = 2 ** p - 1;\r\n//     for(const n of range(2, p)){\r\n//         const sqrt = s ** 2;\r\n//         s = (sqrt & m) + (sqrt >> p);\r\n//         if(s >= m)s -= m;\r\n//         s -= 2;\r\n//     }\r\n//     return s === 0;\r\n// };\r\n\r\n/**\r\n * Determine if it is odd (whether the remainder divided by 2 is 1).\r\n * Even numbers can use {@link isEven}.\r\n *\r\n * 奇数かどうか(2で割った余りが1かどうか)を判定します。\r\n * 偶数には{@link isEven}を使用できます。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isOdd = (number)=>(\r\n    isNumber(number) && number % 2 === 1\r\n);\r\n\r\n/**\r\n * Determine if it is even (whether the remainder divided by 2 is 0).\r\n * Odd numbers can use {@link isOdd}.\r\n *\r\n * 偶数かどうか(2で割った余りが0かどうか)を判定します。\r\n * 奇数には{@link isOdd}を使用できます。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isEven = (number)=>(\r\n    isNumber(number) && number % 2 === 0\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/number.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "function",
    "name": "isNegative",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isNegative",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isNegative}",
    "description": "Determines if it is a negative number.\n\n負の数かどうかを判定します。",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "isPositive",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isPositive",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isPositive}",
    "description": "Determines if it is a positive number.\n\n正の数かどうかを判定します。",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 410,
    "kind": "function",
    "name": "isInfinity",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isInfinity",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isInfinity}",
    "description": "Determines if infinity.\n\n無限かどうかを判定します。",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 411,
    "kind": "function",
    "name": "primeCheck",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~primeCheck",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "number",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "isPrime",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isPrime",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isPrime}",
    "description": "Determines if it is a prime number.\n\n素数かどうかを判定します。",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 413,
    "kind": "function",
    "name": "isOdd",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isOdd",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isOdd}",
    "description": "Determine if it is odd (whether the remainder divided by 2 is 1).\nEven numbers can use {@link isEven}.\n\n奇数かどうか(2で割った余りが1かどうか)を判定します。\n偶数には{@link isEven}を使用できます。",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 414,
    "kind": "function",
    "name": "isEven",
    "memberof": "src/util/is/number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/number.js~isEven",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/number.js",
    "importStyle": "{isEven}",
    "description": "Determine if it is even (whether the remainder divided by 2 is 0).\nOdd numbers can use {@link isOdd}.\n\n偶数かどうか(2で割った余りが0かどうか)を判定します。\n奇数には{@link isOdd}を使用できます。",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "src/util/is/type.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { typeOf } from \"../typeof.js\";\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether value is Undefined\r\n */\r\nexport const isUndefined = (value)=>(\r\n    value === void 0\r\n);\r\n\r\nexport const isDefined = (value)=>(\r\n    value !== void 0\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether value is Null// or Undefined\r\n */\r\nexport const isNull = (value)=>(\r\n    value === null || isUndefined(value)\r\n);\r\n\r\n/**\r\n * 値のプロパティーにアクセス可能かの判定にも使用することができます\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether value is null or undefined\r\n */\r\nexport const isNullLike = (value)=>(\r\n    isNull(value) || isUndefined(value)\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Boolean\r\n */\r\nexport const isBoolean = (value)=>(\r\n    typeOf(value) === \"Boolean\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is String\r\n */\r\nexport const isString = (value)=>(\r\n    typeOf(value) === \"String\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Number\r\n */\r\nexport const isNumber = (value)=>(\r\n    typeOf(value) === \"Number\" && !isNaN(value)\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Symbol\r\n */\r\nexport const isSymbol = (value)=>(\r\n    typeOf(value) === \"Symbol\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Function\r\n */\r\nexport const isFunction = (value)=>(\r\n    typeOf(value) === \"Function\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether typeof is an object and is not Null\r\n */\r\nexport const isObject = (value)=>(\r\n    typeof value === \"object\" && value !== null\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether properties can be edited\r\n */\r\nexport const isObjectLike = (value)=>(\r\n    isFunction(value) || isObject(value)\r\n);\r\n/**\r\n * @type {Function}\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Array\r\n */\r\nexport const isArray = (value)=>(\r\n    typeOf(value) === \"Array\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Arguments\r\n */\r\nexport const isArguments = (value)=>(\r\n    typeOf(value) === \"Arguments\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is TypedArray\r\n */\r\nexport const isTypedArray = (value)=>(\r\n    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/\r\n        .test(typeOf(value))\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is RegExp\r\n */\r\nexport const isRegExp = (value)=>(\r\n    typeOf(value) === \"RegExp\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Error\r\n */\r\nexport const isError = (value)=>(\r\n    typeOf(value) === \"Error\"\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "function",
    "name": "isUndefined",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isUndefined",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isUndefined}",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether value is Undefined"
    }
  },
  {
    "__docId__": 417,
    "kind": "function",
    "name": "isDefined",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isDefined",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isDefined}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 418,
    "kind": "function",
    "name": "isNull",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isNull",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isNull}",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether value is Null// or Undefined"
    }
  },
  {
    "__docId__": 419,
    "kind": "function",
    "name": "isNullLike",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isNullLike",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isNullLike}",
    "description": "値のプロパティーにアクセス可能かの判定にも使用することができます",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether value is null or undefined"
    }
  },
  {
    "__docId__": 420,
    "kind": "function",
    "name": "isBoolean",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isBoolean",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isBoolean}",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Boolean"
    }
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "isString",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isString",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isString}",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is String"
    }
  },
  {
    "__docId__": 422,
    "kind": "function",
    "name": "isNumber",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isNumber",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isNumber}",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Number"
    }
  },
  {
    "__docId__": 423,
    "kind": "function",
    "name": "isSymbol",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isSymbol",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isSymbol}",
    "description": "",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Symbol"
    }
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isFunction}",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Function"
    }
  },
  {
    "__docId__": 425,
    "kind": "function",
    "name": "isObject",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isObject",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isObject}",
    "description": "",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether typeof is an object and is not Null"
    }
  },
  {
    "__docId__": 426,
    "kind": "function",
    "name": "isObjectLike",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isObjectLike",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isObjectLike}",
    "description": "",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether properties can be edited"
    }
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "isArray",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isArray}",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Array"
    },
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 428,
    "kind": "function",
    "name": "isArguments",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isArguments",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isArguments}",
    "description": "",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Arguments"
    }
  },
  {
    "__docId__": 429,
    "kind": "function",
    "name": "isTypedArray",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isTypedArray",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isTypedArray}",
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is TypedArray"
    }
  },
  {
    "__docId__": 430,
    "kind": "function",
    "name": "isRegExp",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isRegExp",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isRegExp}",
    "description": "",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is RegExp"
    }
  },
  {
    "__docId__": 431,
    "kind": "function",
    "name": "isError",
    "memberof": "src/util/is/type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/type.js~isError",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/type.js",
    "importStyle": "{isError}",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether {@link typeOf} is Error"
    }
  },
  {
    "__docId__": 432,
    "kind": "file",
    "name": "src/util/is/util.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { has } from \"../../object/property/has.js\";\r\nimport { typeOf } from \"../typeof.js\";\r\nimport { isFunction, isObject, isString, isNullLike } from \"./type.js\";\r\nimport { isPositive } from \"./number.js\";\r\n\r\n/**\r\n * 文字列かつ長さが1\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport const isChar = (value)=>(\r\n    isString(value) && value.length === 1\r\n);\r\n\r\n/**\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nexport const isIteratorResult = (value)=>(\r\n    isObject(value) && has(value, \"value\") || Boolean(value.done)\r\n);\r\n\r\n/**\r\n * @param {*} value\r\n * @return {Boolean}\r\n */\r\nconst isIterator = (value)=>(\r\n    isObject(value)\r\n    && isFunction(value.next)\r\n    && isIteratorResult(value.next())\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the value is iterable\r\n */\r\nexport const isIterable = (value)=>(\r\n    isObject(value)\r\n    && isFunction(value[Symbol.iterator])\r\n    && isIterator(value[Symbol.iterator]())\r\n);\r\n\r\n/**\r\n * Array.isArrayかisArgumentsがtrueかどうか\r\n * 値がArrayLikeかどうか\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the value is ArrayLike\r\n */\r\nexport const isArrayLike = (value)=>{\r\n    if(isNullLike(value) || isFunction(value))return false;\r\n    return isPositive(value.length);\r\n};\r\n\r\n/**\r\n * Alpha:\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the property does not exist\r\n */\r\nexport const isEmpty = (value)=>{\r\n    if(isString(value) || isArrayLike(value))\r\n        return value.length === 0;\r\n    if(typeOf(value) === \"Object\")\r\n        return Object.keys(value).length === 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verify whether an error occurs when you execute it by passing the argument \"args\" to \"func\".\r\n * \"func\"に引数として\"args\"を渡して実行した場合にエラーが発生するか検証します。\r\n * @param {Function} func Function that verifies if an error occurs\r\n * @param  {...any} [args] Argument that verifies whether an error has occurred\r\n * @return {Boolean} Whether an error has occurred\r\n */\r\nexport const isThrowError = (func, ...args)=>{\r\n    if(isFunction(func))return false;\r\n    try{\r\n        func.apply(void 0, args);\r\n        return false;\r\n    }catch(err){ return true; }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/is/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "function",
    "name": "isChar",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isChar",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isChar}",
    "description": "文字列かつ長さが1",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 434,
    "kind": "function",
    "name": "isIteratorResult",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isIteratorResult",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isIteratorResult}",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 435,
    "kind": "function",
    "name": "isIterator",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isIterator",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 436,
    "kind": "function",
    "name": "isIterable",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isIterable",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isIterable}",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the value is iterable"
    }
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "isArrayLike",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isArrayLike",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isArrayLike}",
    "description": "Array.isArrayかisArgumentsがtrueかどうか\n値がArrayLikeかどうか",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the value is ArrayLike"
    }
  },
  {
    "__docId__": 438,
    "kind": "function",
    "name": "isEmpty",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isEmpty",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isEmpty}",
    "description": "Alpha:",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to be compared"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the property does not exist"
    }
  },
  {
    "__docId__": 439,
    "kind": "function",
    "name": "isThrowError",
    "memberof": "src/util/is/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/is/util.js~isThrowError",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/is/util.js",
    "importStyle": "{isThrowError}",
    "description": "Verify whether an error occurs when you execute it by passing the argument \"args\" to \"func\".\n\"func\"に引数として\"args\"を渡して実行した場合にエラーが発生するか検証します。",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "Function that verifies if an error occurs"
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "Argument that verifies whether an error has occurred"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether an error has occurred"
    }
  },
  {
    "__docId__": 440,
    "kind": "file",
    "name": "src/util/random/index.js",
    "content": "\r\n// @ts-check\r\n\r\nexport * from \"./xorshift\";\r\nexport * from \"./random\";\r\nexport * from \"./randomstr\";\r\nexport * from \"./probability\";\r\n\r\n// const temp = [123456789, 362436069, 521288629, 88675123];\r\n// const shift = (a, b)=>a ^ (a >> b);\r\n// const xorshift = ()=>{\r\n//     const [z,,,t] = temp;\r\n//     const tt = shift(z, 11);\r\n//     temp.shift();\r\n//     temp.push(shift(t, 19) ^ shift(tt, 8));\r\n//     return temp[3];\r\n// };\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/random/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/util/random/probability.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { random } from \"./random.js\";\r\n\r\n/*\r\n指定された確率でtrueを返し、そうでない場合はfalseを返します。\r\n確率の分子です。\r\n確率の分母です。デフォルト値は100です。\r\n*/\r\n\r\n/**\r\n * Returns true with the specified probability, false otherwise.\r\n * @param {number} number It is a numerator of probability.\r\n * @param {number} max The denominator of probability. The default value is 100.\r\n * @return {boolean}\r\n */\r\nexport const probability = (number=50, max=100)=>(\r\n    Number.isFinite(number)\r\n    && random(0, max) < number\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/random/probability.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "function",
    "name": "probability",
    "memberof": "src/util/random/probability.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/random/probability.js~probability",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/random/probability.js",
    "importStyle": "{probability}",
    "description": "Returns true with the specified probability, false otherwise.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "It is a numerator of probability."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "The denominator of probability. The default value is 100."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "src/util/random/random.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { assertType } from \"../../utility/condition/assert-type.js\";\r\nimport { xorshift } from \"./xorshift.js\";\r\n\r\n/**\r\n * Do not use this function for security purposes!!\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} [seed]\r\n */\r\nexport const random = (min=0, max=1, seed) => {\r\n    assertType(min, Number.isFinite);\r\n    assertType(max, Number.isFinite);\r\n    if(min > max)[min, max] = [max, min];\r\n    // 0b1111111111111111111111111111111\r\n    // おそらくこれがxorshiftの最大値。\r\n    const constant = 2147483647;\r\n    const decimal = xorshift(0, constant, seed) / constant;\r\n    const integer = xorshift(min, max - 1, seed);\r\n    return (integer + decimal) % (max - min) + min;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/random/random.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "function",
    "name": "random",
    "memberof": "src/util/random/random.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/random/random.js~random",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/random/random.js",
    "importStyle": "{random}",
    "description": "Do not use this function for security purposes!!",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "seed",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "file",
    "name": "src/util/random/randomstr.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { assertType } from \"../../utility/condition/assert-type.js\";\r\n\r\n/**\r\n * 小文字アルファベットと数字の文字列を生成します。\r\n * @param {number} length 文字列の長さ\r\n * @param {number} base N進数\r\n */\r\nexport const randomStr = (length=8, base=36)=>{\r\n    assertType(length, Number.isSafeInteger);\r\n    length = Math.abs(length);\r\n    let result = \"\";\r\n    do result += Math.random().toString(base).slice(-10);\r\n    while(result.length <= length);\r\n    return result.slice(-length);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/random/randomstr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "randomStr",
    "memberof": "src/util/random/randomstr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/random/randomstr.js~randomStr",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/random/randomstr.js",
    "importStyle": "{randomStr}",
    "description": "小文字アルファベットと数字の文字列を生成します。",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "文字列の長さ"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": "N進数"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/util/random/xorshift.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { assertType } from \"../../utility/condition/assert-type.js\";\r\nimport { isNumber } from \"../is/type.js\";\r\n\r\nlet seedCache = 1073741824;\r\n\r\n/*\r\nxorshiftアルゴリズムを使用して整数の疑似乱数を生成します。\r\n出力される数値の上限は`2147483647(2^31-1)`です。\r\nこの関数をセキュリティ目的で使用しないでください。\r\n*/\r\n\r\n/**\r\n * Generates an integer pseudo-random number using the xorshift algorithm.\r\n *\r\n * The upper limit of the output value is `2147483647(2^31-1)`.\r\n *\r\n * Do not use this function for security purposes!!\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} [seed]\r\n */\r\nexport const xorshift = (min=0, max=Infinity, seed) => {\r\n    assertType(min, Number.isFinite);\r\n    assertType(max, isNumber);\r\n    let number = isNumber(seed) ? seed : seedCache;\r\n    number ^= number << 13;\r\n    number ^= number >> 17;\r\n    number ^= number << 5;\r\n    seedCache = number;\r\n    return Math.abs(number) % (max + 1 - min) + min;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/random/xorshift.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "variable",
    "name": "seedCache",
    "memberof": "src/util/random/xorshift.js",
    "static": true,
    "longname": "src/util/random/xorshift.js~seedCache",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/random/xorshift.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 449,
    "kind": "function",
    "name": "xorshift",
    "memberof": "src/util/random/xorshift.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/random/xorshift.js~xorshift",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/random/xorshift.js",
    "importStyle": "{xorshift}",
    "description": "Generates an integer pseudo-random number using the xorshift algorithm.\n\nThe upper limit of the output value is `2147483647(2^31-1)`.\n\nDo not use this function for security purposes!!",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "seed",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "file",
    "name": "src/util/range.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isUndefined } from \"./is/type.js\";\r\nimport { generator } from \"../utility/generator.js\";\r\n\r\n/**\r\n * startからendまでのincrementごとの数のジェネレーター。\r\n * for-of文で使う場合代替として{@link forIndex}が使用できます。\r\n *\r\n * @param {Number} start\r\n * 初期値。`end`が指定されていなかった場合は0からこの数までの連版となる。\r\n * つまり、`range(end)`は`range(0, end)`と等価。\r\n * @param {Number} [end]\r\n * 出力する数字の上限/下限。\r\n * @param {Number} [step=1]\r\n * 一度に増やす/減らす数。\r\n * start > end の場合でも負の値を指定する必要はない。\r\n * 0を指定すると1が使用される\r\n * @return {Generator<Number>}\r\n * @example\r\n * console.log([...range(4)]);\r\n * // [0, 1, 2, 3, 4]\r\n *\r\n * console.log([...range(1, -10, 2)]);\r\n * // [1, -1, -3, -5, -7, -9]\r\n */\r\nexport const range = (start, end, step=1)=>{\r\n    if(isUndefined(end))\r\n        return range(0, start);\r\n    const stepAbs = step = Math.abs(step) || 1;\r\n    if(start > end)step = -stepAbs;\r\n    return generator((_)=>{\r\n        switch(_.phase){\r\n        case 0:\r\n            _.yield(start);\r\n            break;\r\n        case 1:\r\n            if(Math.abs(end - start) < stepAbs)\r\n                _.goto(3);\r\n            break;\r\n        case 2:\r\n            start += step;\r\n            _.goto(0);\r\n            break;\r\n        default:\r\n            _.return();\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nfunction* (start, end, step=1){\r\n    if(isUndefined(end)){\r\n        yield* range(0, start);\r\n        return;\r\n    }\r\n    const stepAbs = step = Math.abs(step) || 1;\r\n    if(start > end)step = -step;\r\n    while(Math.abs(end - start) >= stepAbs){\r\n        yield start;\r\n        start += step;\r\n    }\r\n    yield start;\r\n};\r\n// */\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/range.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 451,
    "kind": "function",
    "name": "range",
    "memberof": "src/util/range.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/range.js~range",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/range.js",
    "importStyle": "{range}",
    "description": "startからendまでのincrementごとの数のジェネレーター。\nfor-of文で使う場合代替として{@link forIndex}が使用できます。",
    "examples": [
      "console.log([...range(4)]);\n// [0, 1, 2, 3, 4]\n\nconsole.log([...range(1, -10, 2)]);\n// [1, -1, -3, -5, -7, -9]"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "初期値。`end`が指定されていなかった場合は0からこの数までの連版となる。\nつまり、`range(end)`は`range(0, end)`と等価。"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "end",
        "description": "出力する数字の上限/下限。"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "step",
        "description": "一度に増やす/減らす数。\nstart > end の場合でも負の値を指定する必要はない。\n0を指定すると1が使用される"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Generator<Number>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 452,
    "kind": "file",
    "name": "src/util/string/base64.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { chunk } from \"../../utility/loop/index\";\r\nimport { foldLeft } from \"../../utility/loop/fold\";\r\n\r\nconst base64Table = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\nconst str2bin = (str) => (\r\n    foldLeft(str, (binStr, char) => (\r\n        binStr + char.charCodeAt().toString(2).padStart(8, \"0\")\r\n    ), \"\")\r\n);\r\n\r\nexport const base64Encode = (str) => {\r\n    str = str2bin(str);\r\n    str = chunk(str, 6).map((chunk) => chunk.padEnd(6, \"0\"));\r\n    console.log(str);\r\n    str[8] = \"100000\";\r\n    for(let i = 0;i < str.length;i++) {\r\n        const n = parseInt(str[i], 2);\r\n        str[i] = base64Table.charAt(n);\r\n    }\r\n    const fill = str.length % 6;\r\n    if(fill)str.push(\"=\".repeat(6 - fill));\r\n    return str.join(\"\");\r\n};\r\n\r\nexport const base64Decode = (str) => {};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/base64.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 453,
    "kind": "variable",
    "name": "base64Table",
    "memberof": "src/util/string/base64.js",
    "static": true,
    "longname": "src/util/string/base64.js~base64Table",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/base64.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 454,
    "kind": "function",
    "name": "str2bin",
    "memberof": "src/util/string/base64.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/base64.js~str2bin",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/base64.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 455,
    "kind": "function",
    "name": "base64Encode",
    "memberof": "src/util/string/base64.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/base64.js~base64Encode",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/base64.js",
    "importStyle": "{base64Encode}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "function",
    "name": "base64Decode",
    "memberof": "src/util/string/base64.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/base64.js~base64Decode",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/base64.js",
    "importStyle": "{base64Decode}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 457,
    "kind": "file",
    "name": "src/util/string/diff/diff.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { forIndex } from \"../../../utility/index\";\r\n\r\nconst sdecode = (valX, valY, path) => {\r\n    let res = \"\";\r\n    let pX = 0;\r\n    let pY = 0;\r\n    let state = \"\";\r\n    forIndex(path.length, (i) => {\r\n        switch(path.charAt(i)) {\r\n        case \"edit\":\r\n        case \"+\":\r\n        case \"add\":\r\n            if(state !== \"add\"){\r\n                state = \"add\";\r\n                res += \"+>\";\r\n            }\r\n            res += valX.charAt(pX);\r\n            pX++;\r\n            break;\r\n        case \"-\":\r\n        case \"del\":\r\n            if(state !== \"del\"){\r\n                state = \"del\";\r\n                res += \"->\";\r\n            }\r\n            res += valY.charAt(pY);\r\n            pY++;\r\n            break;\r\n        case \"=\":\r\n        case \"none\":\r\n            if (state !== \"=\") {\r\n                state = \"=\";\r\n                res += \"=>\";\r\n            }\r\n            res += valX.charAt(pX);\r\n            pX++;\r\n            pY++;\r\n            break;\r\n        }\r\n    });\r\n    return res;\r\n};\r\n\r\n// eslint-disable-next-line max-statements\r\nconst sSearch = (valX, valY, posX, posY, path, map) => {\r\n    let c = posX.length; // 終端の個数\r\n    let endPath = null;\r\n    for (let i = 0;i < c;i++) { // 各終端について\r\n        while(posX[i] !== valX.length || posY[i] !== valY.length) {\r\n            console.log({ valX, valY }, posX, posY, path, map);\r\n            // 編集回数が1増える（追加か削除を行う）か、比較し終えるまで繰り返す\r\n            const hoge = (posX[i] + posY[i] + 2) * (valX.length + 1);\r\n            const huga = posX[i] + 1 + posY[i] * (valX.length + 1);\r\n            const piyo = posX[i] + (1 + posY[i]) * (valX.length + 1);\r\n            if(valX.charAt(posX[i]) === valY.charAt(posY[i])) {\r\n                // posX[posX.length]=posX[i]+1;//全列挙は無駄\r\n                // posY[posY.length]=posY[i];\r\n                // path[path.length]=path[i]+\"a\";\r\n                // posX[posX.length]=posX[i];\r\n                // posY[posY.length]=posY[i]+1;\r\n                // path[path.length]=path[i]+\"d\";\r\n\r\n                // 同じ時は右下に進める\r\n                if (map[hoge] === true) {\r\n                    // すでに通った経路がある場合には現在のノードを削除する\r\n                    posX.splice(i, 1);\r\n                    posY.splice(i, 1);\r\n                    path.splice(i, 1);\r\n                    i--;\r\n                    c--;\r\n                    break;\r\n                }else{\r\n                    map[hoge] = true;\r\n                    posX[i]++;\r\n                    posY[i]++;\r\n                    path[i] += \"=\";\r\n                }\r\n            } else if (posX[i] === valX.length) {\r\n                // 右端なら分岐せずに下に進める\r\n                if (map[hoge] === true) {\r\n                    // すでに通った経路がある場合には現在のノードを削除する\r\n                    posX.splice(i, 1);\r\n                    posY.splice(i, 1);\r\n                    path.splice(i, 1);\r\n                    i--;\r\n                    c--;\r\n                } else {\r\n                    map[hoge] = true;\r\n                    posY[i]++;\r\n                    path[i] += \"-\";\r\n                    i--;\r\n                }\r\n                break;\r\n            } else if (posY[i] === valY.length) {\r\n                // 下端なら分岐せ=ずに右に進める\r\n                if (map[huga] === true) {\r\n                    // すでに通った経路がある場合には現在のノードを削除する\r\n                    posX.splice(i, 1);\r\n                    posY.splice(i, 1);\r\n                    path.splice(i, 1);\r\n                    i--;\r\n                    c--;\r\n                }else{\r\n                    map[huga] = true;\r\n                    posX[i]++;\r\n                    path[i] += \"+\";\r\n                }\r\n                break;\r\n            } else {\r\n                // 同じでない場合は分岐させる（新規を右に）(元を下へ進める)\r\n                if(map[huga] === true){\r\n                    // すでに通った経路がある場合には新しく作らない\r\n                    // posX.splice(i,1);\r\n                    // posY.splice(i,1);\r\n                    // path.splice(i,1);\r\n                }else{\r\n                    map[huga] = true;\r\n                    posX[posX.length] = posX[i] + 1;\r\n                    posY[posY.length] = posY[i];\r\n                    path[path.length] = `${path[i]}+`;\r\n                }if (map[piyo] === true){\r\n                    // すでに通った経路がある場合には現在のノードを削除する\r\n                    posX.splice(i, 1);\r\n                    posY.splice(i, 1);\r\n                    path.splice(i, 1);\r\n                    i--;\r\n                    c--;\r\n                }else{\r\n                    map[piyo] = true;\r\n                    // posX[i]=posX[i];\r\n                    posY[i] = posY[i] + 1;\r\n                    path[i] += \"-\";\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // もし右下まで着いた経路なら、記録しておく\r\n        if (posX[i] == valX.length && posY[i] == valY.length) {\r\n            if (endPath == null) endPath = [];\r\n            endPath[endPath.length] = i;\r\n        }\r\n    }\r\n    return endPath;\r\n};\r\n\r\nexport const searchPath = (valX, valY) => {\r\n    const maxLength = valX.length + valY.length; // 編集回数の上限\r\n    const path = [\"\"];\r\n    const posX = [0];\r\n    const posY = [0];\r\n    const map = Array(valX.length * valY.length);\r\n    let p;\r\n    forIndex(maxLength, ()=>{\r\n        p = sSearch(valX, valY, posX, posY, path, map);\r\n        if(p !== null)return null;\r\n    });\r\n    console.log(path);\r\n    return sdecode(valX, valY, path[p[0]]);\r\n};\r\n\r\nsearchPath(\"1234\",\"1235\");\r\n\r\nconst rollover = (valX, valY, posX, posY, path, map) => {\r\n    let c = posX.length;\r\n    let xPos = 0, yPos = 0;\r\n    for(let i = 0;i < c;i++){\r\n        if(valX.charAt(posX[i]) === valY.charAt(posY[i])){\r\n            xPos++;\r\n            yPos++;\r\n        }\r\n    }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/diff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 458,
    "kind": "function",
    "name": "sdecode",
    "memberof": "src/util/string/diff/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/diff.js~sdecode",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/diff.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "valX",
        "types": [
          "*"
        ]
      },
      {
        "name": "valY",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "sSearch",
    "memberof": "src/util/string/diff/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/diff.js~sSearch",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/diff.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [
      {
        "name": "valX",
        "types": [
          "*"
        ]
      },
      {
        "name": "valY",
        "types": [
          "*"
        ]
      },
      {
        "name": "posX",
        "types": [
          "*"
        ]
      },
      {
        "name": "posY",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 460,
    "kind": "function",
    "name": "searchPath",
    "memberof": "src/util/string/diff/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/diff.js~searchPath",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/diff/diff.js",
    "importStyle": "{searchPath}",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [
      {
        "name": "valX",
        "types": [
          "*"
        ]
      },
      {
        "name": "valY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "function",
    "name": "rollover",
    "memberof": "src/util/string/diff/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/diff.js~rollover",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/diff.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "params": [
      {
        "name": "valX",
        "types": [
          "*"
        ]
      },
      {
        "name": "valY",
        "types": [
          "*"
        ]
      },
      {
        "name": "posX",
        "types": [
          "*"
        ]
      },
      {
        "name": "posY",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "src/util/string/diff/diffNewTemp.js",
    "content": "\r\nimport { SHA1 as sha1 } from \"../hash/index\";\r\n\r\nclass DiffEngine {\r\n    InitInfo(len1, len2) {\r\n        // eslint-disable-next-line no-undef\r\n        const bIgnoreCase = this.bIgnoreCase, isBlank_ = DIFF_ORZ.isBlank;\r\n        // const hash = (s_org, bIgnoreCase) => {\r\n        //     let s = s_org.trim().replace(this.BLANK_PATTERN, \"\");\r\n        //     const len = s.length;\r\n        //     if (len === 0) { return 0; }\r\n        //     if (bIgnoreCase) { s = s.toLowerCase(); }\r\n        //     return [...s].reduce((v, c) => (c.codePointAt(0) ^ (v << 2)), len);\r\n        // };\r\n        this.vInfo_L = this.vLeft.map((s) => ({\r\n            status: \"+\",\r\n            pair: -1,\r\n            isBlank: s[isBlank_](),\r\n            hash: sha1(s, bIgnoreCase),\r\n            UniquePair: -1\r\n        }));\r\n        this.vInfo_R = this.vRight.map((s) => ({\r\n            status: \"+\",\r\n            pair: -1,\r\n            isBlank:\r\n            s[isBlank_](),\r\n            hash: sha1(s, bIgnoreCase),\r\n            UniquePair: -1\r\n        }));\r\n        if (!this.bDetectSimilarLine && !this.bDetectMovedBlock) { return; }\r\n        const [vIsUnique_L, vIsUnique_R] = [this.vInfo_L.map((o) => !o.isBlank), this.vInfo_R.map((o) => !o.isBlank)];\r\n        for (let i = 0;i < len1;i++) {\r\n            if (!(vIsUnique_L[i])) { continue; }\r\n            for (let j = len1 - 1;j > i;j--) {\r\n                if (!(this.vInfo_L[j].isBlank) && this.IsDuplicated(this.vLeft, this.vInfo_L, i, j, bIgnoreCase, 2)) {\r\n                    vIsUnique_L[i] = vIsUnique_L[j] = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0;i < len2;i++) {\r\n            if (!(vIsUnique_R[i])) { continue; }\r\n            for (let j = len2 - 1;j > i;j--) {\r\n                if (!(this.vInfo_R[j].isBlank) && this.IsDuplicated(this.vRight, this.vInfo_R, i, j, bIgnoreCase, 2)) {\r\n                    vIsUnique_R[i] = vIsUnique_R[j] = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (!(vIsUnique_R[i])) { continue; }\r\n            for (let j = 0;j < len1;j++) {\r\n                if (vIsUnique_L[j] && (this.vInfo_L[j].UniquePair < 0) && (this.CompareStr(j, i, true) > 1)) {\r\n                    [this.vInfo_R[i].UniquePair, this.vInfo_L[j].UniquePair] = [j, i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Diff_(len1, len2, bReverse) {\r\n        const bStrict = !this.bDetectSimilarLine, threshold = this.threshold, _max = Math.max;\r\n        const n = len1 + len2 + 3, fp = (new Int32Array(n)).fill(-1), ed = (new Array(n)).fill(null);\r\n        for (let p = 0;fp[len2 + 1] != len2;p++) {\r\n            for (let k = len1 - p;k < len2;k++) {\r\n                let y = _max(fp[k] + 1, fp[k + 2]), x = y - k + len1, bIsBlank, y0, org, score;\r\n                let [x1, y1, k_plus, k_minus] = (bReverse ? [y, x, k + 2, k] : [x, y, k, k + 2]);\r\n                if (bReverse ? (y == fp[k + 2]) : ((y == (fp[k] + 1)) && (fp[k + 2] != 0))) {\r\n                    if (y1 > 0) { ed[k + 1] = { op: \"+\", x: -1, y: y1 - 1, prev: ed[k_plus] }; }\r\n                } else if (x1 > 0) { ed[k + 1] = { op: \"-\", x: x1 - 1, y: -1, prev: ed[k_minus] }; }\r\n                for (bIsBlank = true, y0 = y, org = ed[k + 1];x < len1;x1++, y1++, x++, y++) {\r\n                    if ((score = this.CompareStr(x1, y1, bStrict)) <= threshold) { break; }\r\n                    if (!this.vInfo_L[x1].isBlank) { bIsBlank = false; }\r\n                    ed[k + 1] = { op: ((score > 1) ? \"=\" : \"*\"), x: x1, y: y1, prev: ed[k + 1] };\r\n                }\r\n                if (bIsBlank && !((x >= (len1 - 1)) && (y >= (len2 - 1)))) { [y, ed[k + 1]] = [y0, org]; }\r\n                fp[k + 1] = y;\r\n            }\r\n            for (let k = len2 + p;k >= len2;k--) {\r\n                let y = _max(fp[k] + 1, fp[k + 2]), x = y - k + len1, bIsBlank, y0, org, score;\r\n                let [x1, y1, k_plus, k_minus] = (bReverse ? [y, x, k + 2, k] : [x, y, k, k + 2]);\r\n                if (bReverse ? (y == fp[k + 2]) : ((y == (fp[k] + 1)) && (fp[k + 2] != 0))) {\r\n                    if (y1 > 0) { ed[k + 1] = { op: \"+\", x: -1, y: y1 - 1, prev: ed[k_plus] }; }\r\n                } else if (x1 > 0) { ed[k + 1] = { op: \"-\", x: x1 - 1, y: -1, prev: ed[k_minus] }; }\r\n                for (bIsBlank = true, y0 = y, org = ed[k + 1];y < len2;x1++, y1++, x++, y++) {\r\n                    if ((score = this.CompareStr(x1, y1, bStrict)) <= threshold) { break; }\r\n                    if (!this.vInfo_L[x1].isBlank) { bIsBlank = false; }\r\n                    ed[k + 1] = { op: ((score > 1) ? \"=\" : \"*\"), x: x1, y: y1, prev: ed[k + 1] };\r\n                }\r\n                if (bIsBlank && !((x >= (len1 - 1)) && (y >= (len2 - 1)))) { [y, ed[k + 1]] = [y0, org]; }\r\n                fp[k + 1] = y;\r\n            }\r\n        }\r\n        return ed[len2 + 1];\r\n    }\r\n    Diff(s1, s2) {\r\n        [this.vLeft, this.vRight] = [s1.split(\"\\n\"), s2.split(\"\\n\")];\r\n        const\r\n            len1 = this.vLeft.length,\r\n            len2 = this.vRight.length,\r\n            vResult = [];\r\n        let vResult2 = [], vWork = [];\r\n        this.InitInfo(len1, len2);\r\n        for (let o = (len1 > len2) ? this.Diff_(len2, len1, true) : this.Diff_(len1, len2, false);o != null;o = o.prev) {\r\n            vResult.unshift(o);\r\n            if (o.op == \"-\" || o.op == \"+\") { continue; }\r\n            this.vInfo_L[o.x].status = this.vInfo_R[o.y].status = o.op;\r\n            [this.vInfo_L[o.x].pair, this.vInfo_R[o.y].pair] = [o.y, o.x];\r\n        }\r\n\r\n        const o_L = new Hunks(), o_R = new Hunks();\r\n        this.CreateHunksList(len1, len2, o_L, o_R, vResult);\r\n        this.IndentHeuristic(len1, len2, o_L, o_R, vResult);\r\n\r\n        if (o_L.unlinkedCount > 0 && o_R.unlinkedCount > 0 && this.bDetectMovedBlock) {\r\n            this.DetectMovedBlock(len1, len2, o_L, o_R);\r\n            for (let x = len1 - 1;x >= 0;x--) {\r\n                if ((this.vInfo_L[x].status == \"#\" && this.vInfo_L[x].isBlank)\r\n                    && ((x == (len1 - 1)) || (this.vInfo_L[x + 1].status != \"#\")\r\n                        || (this.vInfo_L[x].pair != (this.vInfo_L[x + 1].pair - 1)))\r\n                ) {\r\n                    const y = this.vInfo_L[x].pair;\r\n                    this.vInfo_L[x].status = this.vInfo_R[y].status = \"+\";\r\n                    this.vInfo_L[x].pair = this.vInfo_R[y].pair = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const o of vResult) {\r\n            if ((o.op != \"+\") && (vWork.length > 0)) {\r\n                vResult2 = vResult2.concat(vWork);\r\n                vWork = [];\r\n            }\r\n            ((o.op == \"+\") ? vWork : vResult2).push(o);\r\n        }\r\n        if (vWork.length > 0) { vResult2 = vResult2.concat(vWork); }\r\n\r\n        return vResult2;\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/diffNewTemp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "class",
    "name": "DiffEngine",
    "memberof": "src/util/string/diff/diffNewTemp.js",
    "static": true,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/diffNewTemp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 464,
    "kind": "method",
    "name": "InitInfo",
    "memberof": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine#InitInfo",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "len1",
        "types": [
          "*"
        ]
      },
      {
        "name": "len2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "vInfo_L",
    "memberof": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "static": false,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine#vInfo_L",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "vInfo_R",
    "memberof": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "static": false,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine#vInfo_R",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "method",
    "name": "Diff_",
    "memberof": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine#Diff_",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "len1",
        "types": [
          "*"
        ]
      },
      {
        "name": "len2",
        "types": [
          "*"
        ]
      },
      {
        "name": "bReverse",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "method",
    "name": "Diff",
    "memberof": "src/util/string/diff/diffNewTemp.js~DiffEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/diff/diffNewTemp.js~DiffEngine#Diff",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "s1",
        "types": [
          "*"
        ]
      },
      {
        "name": "s2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "file",
    "name": "src/util/string/diff/diff_orz_do.js",
    "content": "/* eslint-disable complexity */\r\n/* eslint-disable max-statements */\r\n\r\n// ==================================================================================================\r\nconst DiffEngine = {\r\n    bIgnoreCase: false,\r\n    flgIgnoreBlank: 1, // 0:compare 1:ignore change 2: ignore all\r\n    bDetectMovedBlock: true,\r\n    bDetectSimilarLine: true,\r\n    bWord: true,\r\n    bSemanticCleanup: true,\r\n    vLeft: [],\r\n    vRight: [],\r\n    vInfo_L: [],\r\n    vInfo_R: [],\r\n    threshold: 0.5, // 0(loose) < threshold < 1(strict)\r\n    BLANK_PATTERN: /[\\s\\t]+/g,\r\n\r\n    CompareStr(x, y, bStrict) {\r\n        if (this.vInfo_L[x].isBlank != this.vInfo_R[y].isBlank) { return 0; }\r\n        let s1 = this.vLeft[x], s2 = this.vRight[y];\r\n        if (this.vInfo_L[x].isBlank) {\r\n            return ((this.flgIgnoreBlank != 0) || (s1 == s2)) ? 2 : (bStrict ? 0 : 1);\r\n        }\r\n        if (bStrict && (this.vInfo_L[x].hash != this.vInfo_R[y].hash)) { return 0; }\r\n        if (this.bIgnoreCase) { [s1, s2] = [s1.toLowerCase(), s2.toLowerCase()]; }\r\n        if ((this.vInfo_L[x].hash == this.vInfo_R[y].hash) && DIFF_ORZ.Compare(s1, s2, this.flgIgnoreBlank)) { return 2; }\r\n        if (bStrict || (this.vInfo_L[x].UniquePair >= 0) || (this.vInfo_R[y].UniquePair >= 0)) { return 0; }\r\n        [s1, s2] = [s1.replace(this.BLANK_PATTERN, \"\"), s2.replace(this.BLANK_PATTERN, \"\")];\r\n        const len1 = s1.length, len2 = s2.length;\r\n        return ((len1 > len2) ? this.CalcScore(s2, s1, len2, len1) : this.CalcScore(s1, s2, len1, len2));\r\n    },\r\n    CalcScore(s1, s2, len1, len2) {\r\n        const pmax = len1 + 1 - this.threshold * len2, _max = Math.max;\r\n        if (pmax < 1) { return 0; } // optimize\r\n        let y, p = 0, fp = (new Int32Array(len1 + len2 + 3)).fill(-1);\r\n        for (; (p < pmax) && (fp[len2 + 1] != len2);p++) {\r\n            for (let k = len1 - p;k < len2;k++) {\r\n                for (y = _max(fp[k] + 1, fp[k + 2]);\r\n                    (y < k) && (s1.charCodeAt(y - k + len1) == s2.charCodeAt(y));\r\n                    y++) { }\r\n                fp[k + 1] = y;\r\n            }\r\n            for (let k = len2 + p;k >= len2;k--) {\r\n                for (y = _max(fp[k] + 1, fp[k + 2]);\r\n                    (y < len2) && (s1.charCodeAt(y - k + len1) == s2.charCodeAt(y));\r\n                    y++) { }\r\n                fp[k + 1] = y;\r\n            }\r\n        }\r\n        return (1 - (len2 - len1 + p - 1) / len2); // distance score\r\n    },\r\n    IsDuplicated(v, vInfo, i, j, bIgnoreCase, flgIgnoreBlank) {\r\n        if ((vInfo[i].isBlank != vInfo[j].isBlank) || (vInfo[i].hash != vInfo[j].hash)) { return false; }\r\n        return (bIgnoreCase ? DIFF_ORZ.Compare(v[i].toLowerCase(), v[j].toLowerCase(), flgIgnoreBlank) : DIFF_ORZ.Compare(v[i], v[j], flgIgnoreBlank));\r\n    },\r\n    CreateHunksList(len1, len2, o_L, o_R, vResult) {\r\n        let o, x = 0, y = 0, x0 = -1, y0 = -1, bIsBlank_L, bIsBlank_R, op_bak = \"\";\r\n        for (let i = 0;o = vResult[i];) {\r\n            if (o.op == \"-\") { // left block\r\n                for (x0 = o.x - 1, bIsBlank_L = true;(o = vResult[i]) && (x < len1) && (o.op == \"-\");i++, x++) {\r\n                    if (!this.vInfo_L[x].isBlank) { bIsBlank_L = false; }\r\n                }\r\n                o_L.addEntry(x0, x, bIsBlank_L);\r\n                op_bak = \"-\";\r\n            } else if (o.op == \"+\") { // right block\r\n                if (op_bak != \"-\") { o_L.addEntry(x - 1, x, true); }\r\n                for (y0 = o.y - 1, bIsBlank_R = true;(o = vResult[i]) && (y < len2) && (o.op == \"+\");i++, y++) {\r\n                    if (!this.vInfo_R[o.y].isBlank) { bIsBlank_R = false; }\r\n                }\r\n                o_R.addEntry(y0, y, bIsBlank_R);\r\n                op_bak = \"+\";\r\n            } else { // common\r\n                if (op_bak == \"-\") { o_R.addEntry(o.y - 1, o.y, true); }\r\n                for (op_bak = o.op;(o = vResult[i]) && (o.op == op_bak);i++, x++, y++) { }\r\n            }\r\n        }\r\n        if (op_bak == \"-\") { o_R.addEntry(len2 - 1, len2, true); }\r\n    },\r\n    makePair_(x, y, o_L, o_R) {\r\n        this.vInfo_L[x].status = this.vInfo_R[y].status = \"#\";\r\n        [this.vInfo_L[x].pair, this.vInfo_R[y].pair] = [y, x];\r\n        o_L.addLink();\r\n        return o_R.addLink();\r\n    },\r\n    IndentHeuristic(len1, len2, o_L, o_R, vResult) {\r\n        const IsDuplicated = (v, vInfo, i, j) => this.IsDuplicated(v, vInfo, i, j, this.bIgnoreCase, this.flgIgnoreBlank);\r\n        for (let n = 0, nLen = o_L.vList.length;n < nLen;n++) {\r\n            if (!o_L.vList[n].isBlankLines) {\r\n                let x1 = o_L.vList[n].start, x = x1, hunk_size = o_L.hunk_size(n);\r\n                if (hunk_size > 1) {\r\n                    const x_min = (o_R.hunk_size(n) > 0) ? x1 : x1 - Math.min(hunk_size, o_L.gap(n));\r\n                    for (; (x > x_min) && (this.vInfo_L[x].status == \"=\");x--) {\r\n                        if (!(IsDuplicated(this.vLeft, this.vInfo_L, x, x + hunk_size))) { break; }\r\n                    }\r\n                    let indent_prev = DIFF_ORZ.CalcIndent(this.vLeft[x1 + 1]);\r\n                    for (let indent = 0;(x1 > x) && !(this.vInfo_L[x1].isBlank);x1--, indent_prev = indent) {\r\n                        if ((indent = DIFF_ORZ.CalcIndent(this.vLeft[x1])) > indent_prev) { break; }\r\n                        o_L.vList[n].shift = o_L.vList[n].start - x1 + 1;\r\n                    }\r\n                }\r\n            }\r\n            if (!o_R.vList[n].isBlankLines) {\r\n                let y1 = o_R.vList[n].start, y = y1, hunk_size = o_R.hunk_size(n);\r\n                if (hunk_size > 1) {\r\n                    const y_min = (o_L.hunk_size(n) > 0) ? y1 : y1 - Math.min(hunk_size, o_R.gap(n));\r\n                    for (; (y > y_min) && (this.vInfo_R[y].status == \"=\");y--) {\r\n                        if (!(IsDuplicated(this.vRight, this.vInfo_R, y, y + hunk_size))) { break; }\r\n                    }\r\n                    let indent_prev = DIFF_ORZ.CalcIndent(this.vRight[y1 + 1]);\r\n                    for (let indent = 0;(y1 > y) && !(this.vInfo_R[y1].isBlank);y1--, indent_prev = indent) {\r\n                        if ((indent = DIFF_ORZ.CalcIndent(this.vRight[y1])) > indent_prev) { break; }\r\n                        o_R.vList[n].shift = o_R.vList[n].start - y1 + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (o_L.vList.length <= 0) { return; }\r\n        o_L.resetPos();\r\n        o_R.resetPos();\r\n\r\n        for (let i = 0, shift = 0, o = null;o = vResult[i];i++) {\r\n            if (o.op == \"+\") {\r\n                if (o_R.pos < o.y) { o_R.nextPos(); }\r\n                if (((shift = o_R.currentHunk().shift) > 0) && ((o_R.pos - o_R.currentHunk().start) <= shift)) {\r\n                    const hunk_size = o_R.hunk_size(o_R.current), i_max = i + hunk_size;\r\n                    for (i = i_max - shift;i < i_max;i++, o_R.nextPos()) {\r\n                        const [x, y] = [vResult[i - hunk_size].x, vResult[i].y];\r\n                        if ((x < 0) || (y < 0)) { i = i_max;break; }\r\n                        [vResult[i - hunk_size].op, vResult[i - hunk_size].x] = [\"+\", -1];\r\n                        [this.vInfo_R[y - hunk_size].status, this.vInfo_R[y - hunk_size].pair] = [\"+\", -1];\r\n                        this.vInfo_L[x].status = this.vInfo_R[y].status = vResult[i].op = \"=\";\r\n                        [this.vInfo_L[x].pair, this.vInfo_R[y].pair, vResult[i].x] = [y, x, x];\r\n                    }\r\n                    o_R.pos += hunk_size - shift;\r\n                }\r\n            } else if (o.op == \"-\") {\r\n                if (o_L.pos < o.x) { o_L.nextPos(); }\r\n                if (((shift = o_L.currentHunk().shift) > 0) && ((o_L.pos - o_L.currentHunk().start) <= shift)) {\r\n                    const hunk_size = o_L.hunk_size(o_L.current), i_max = i + hunk_size;\r\n                    for (i = i_max - shift;i < i_max;i++, o_L.nextPos()) {\r\n                        const [x, y] = [vResult[i].x, vResult[i - hunk_size].y];\r\n                        if ((x < 0) || (y < 0)) { i = i_max;break; }\r\n                        [vResult[i - hunk_size].op, vResult[i - hunk_size].y] = [\"-\", -1];\r\n                        [this.vInfo_L[x - hunk_size].status, this.vInfo_L[x - hunk_size].pair] = [\"+\", -1];\r\n                        this.vInfo_L[x].status = this.vInfo_R[y].status = vResult[i].op = \"=\";\r\n                        [this.vInfo_L[x].pair, this.vInfo_R[y].pair, vResult[i].y] = [y, x, y];\r\n                    }\r\n                    o_L.pos += hunk_size - shift;\r\n                }\r\n            }\r\n        }\r\n        o_L.cleanup();\r\n        o_R.cleanup();\r\n    },\r\n    DetectMovedBlock(len1, len2, o_L, o_R) {\r\n        let x0, x, y0, y;\r\n        for (x = o_L.resetPos();(x >= 0) && (x < len1);x = o_L.setPos(x, true)) {\r\n            for (y0 = -1, x0 = x;x0 > -1;x0 = o_L.nextPos()) {\r\n                if ((this.vInfo_L[x0].status == \"+\") && (this.vInfo_L[x0].UniquePair >= 0)) {\r\n                    y0 = o_R.setPos(this.vInfo_L[x0].UniquePair, false);\r\n                    break;\r\n                }\r\n            }\r\n            if (y0 == -1) { break; }\r\n            if (this.makePair_(x0, y0, o_L, o_R) == 0) { return; }\r\n            // backward\r\n            for (x = x0 - 1, y = y0 - 1;(this.vInfo_L[x] && this.vInfo_L[x].status === \"+\") && (this.vInfo_R[y] && this.vInfo_R[y].status === \"+\");x--, y--) {\r\n                if (this.CompareStr(x, y, true) < 2) { break; }\r\n                if (this.makePair_(x, y, o_L, o_R) == 0) { return; }\r\n            }\r\n            // forward\r\n            for (x = x0 + 1, y = y0 + 1;(x < len1) && (y < len2);x++, y++) {\r\n                if ((o_L.setPos(x, false) < 0)\r\n                    || (this.vInfo_L[x].status != \"+\") || (this.vInfo_R[y].status != \"+\")\r\n                    || (this.CompareStr(x, y, true) < 2)) {\r\n                    break;\r\n                }\r\n                if (this.makePair_(x, y, o_L, o_R) == 0) { return; }\r\n            }\r\n        }\r\n        if (o_L.unLinkedCount <= 0 || o_R.unLinkedCount <= 0) { return; }\r\n\r\n        for (x = o_L.resetPos();x > -1;x = o_L.nextPos()) {\r\n            if (this.vInfo_L[x].status != \"+\") {\r\n            } else if (!this.vInfo_L[x].isBlank) {\r\n                const oHunk = o_R.searchNeighborHunk(o_L);\r\n                if (oHunk.start < 0) { continue; }\r\n                for (y = o_R.setPos(oHunk.start, true);y > -1;y = o_R.nextPos()) {\r\n                    if ((this.vInfo_R[y].status == \"+\") && this.CompareStr(x, y, true)) {\r\n                        if (this.makePair_(x, y, o_L, o_R) == 0) { return; }\r\n                        break;\r\n                    }\r\n                    if (y >= oHunk.end) { break; }\r\n                }\r\n            } else if ((x > 0) && (this.vInfo_L[x - 1].status == \"#\")) {\r\n                y = this.vInfo_L[x - 1].pair + 1;\r\n                if ((y < len2) && (this.vInfo_R[y].status == \"+\") && this.CompareStr(x, y, true)) {\r\n                    if (this.makePair_(x, y, o_L, o_R) == 0) { return; }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default () => {\r\n    const oDiff = DiffEngine;\r\n    oDiff.bIgnoreCase = $(\"chkIgnoreCase\").checked;\r\n    oDiff.flgIgnoreBlank = $(\"rdIgnoreBlank_c\").checked ? 1 : ($(\"rdIgnoreBlank_a\").checked ? 2 : 0);\r\n    oDiff.bDetectMovedBlock = $(\"chkDetectMovedBlock\").checked;\r\n    oDiff.bDetectSimilarLine = $(\"chkDetectSimilarLine\").checked;\r\n    oDiff.bWord = $(\"chkWord\").checked;\r\n    const vResult = oDiff.Diff($(\"txtOld\").value, $(\"txtNew\").value), vTable = [\"<table>\"];\r\n\r\n    const int2str = (v) => ((v == 0) ? \"\" : (`${v}`));\r\n    const do_lineDiff = (oDiff, x, y) => {\r\n        let oLDiff = new LineDiffEngine(oDiff, x, y), sOut_L = \"\", sOut_R = \"\", sWork = \"\", o;\r\n        for (let vResult = oLDiff.Diff(), i = 0;o = vResult[i];i++) {\r\n            if (o.op == \"-\") {\r\n                let sWork2 = `<del>${this.EscapeHTML(oLDiff.vLeft[o.x])}`;\r\n                for (; (o = vResult[i + 1]) && (o.op == \"-\");i++) {\r\n                    sWork2 += this.EscapeHTML(oLDiff.vLeft[o.x]);\r\n                }\r\n                sOut_L += `${sWork2}</del><span class=\"del1\"></span>`;\r\n                sOut_R += `${sWork2}</del><span class=\"del1\"></span>`;\r\n            } else if (o.op == \"+\") {\r\n                sWork += `<ins>${this.EscapeHTML(oLDiff.vRight[o.y])}`;\r\n                for (; (o = vResult[i + 1]) && (o.op == \"+\");i++) {\r\n                    sWork += this.EscapeHTML(oLDiff.vRight[o.y]);\r\n                }\r\n                sWork += \"</ins><span class=\\\"ins1\\\"></span>\";\r\n            } else {\r\n                sOut_L += sWork + this.EscapeHTML(oLDiff.vLeft[o.x]);\r\n                sOut_R += sWork + this.EscapeHTML(oLDiff.vRight[o.y]);\r\n                sWork = \"\";\r\n            }\r\n        }\r\n        return [sOut_L + sWork, sOut_R + sWork];\r\n    };\r\n    const status_map = { \"-\": \"minus\", \"+\": \"plus\", \"=\": \"equal\", \"*\": \"similar\" };\r\n    if ($(\"chkSideBySide\").checked) {\r\n        vTable.push(\"<colgroup>\");\r\n        vTable.push('<col class=\"lnum\" /><col /><col style=\"min-width:250px;max-width:600px;\" />');\r\n        vTable.push('<col class=\"lnum\" /><col /><col style=\"min-width:250px;max-width:600px;\" />');\r\n        vTable.push(\"</colgroup>\");\r\n        for (const o of vResult) {\r\n            const [sLine_L, sLine_R] = (o.op == \"*\") ? do_lineDiff(oDiff, o.x, o.y)\r\n                : [(o.op == \"+\") ? \"\" : this.EscapeHTML(oDiff.vLeft[o.x]),\r\n                    (o.op == \"-\") ? \"\" : this.EscapeHTML(oDiff.vRight[o.y])];\r\n            const [sStyle_L, sInfo_R] = ((o.op == \"-\") && (oDiff.vInfo_L[o.x].status == \"#\"))\r\n                ? [\"moved\", `(${int2str(oDiff.vInfo_L[o.x].pair + 1)})`] : [\"\", int2str(o.y + 1)];\r\n            const [sStyle_R, sInfo_L] = ((o.op == \"+\") && (oDiff.vInfo_R[o.y].status == \"#\"))\r\n                ? [\"moved\", `(${int2str(oDiff.vInfo_R[o.y].pair + 1)})`] : [\"\", int2str(o.x + 1)];\r\n            const sOut = (`<tr class=\"${status_map[o.op]}\"><td class=\"lnum\">${sInfo_L}</td><td class=\"L ${sStyle_L}\">${\r\n                ((o.op == \"+\") || (o.op == \"=\")) ? \"&nbsp;\" : o.op}</td><td class=\"L ${sStyle_L}\"><pre>${sLine_L}</pre></td>`\r\n                + `<td class=\"lnum\">${sInfo_R}</td><td class=\"R ${sStyle_R}\">${((o.op == \"-\") || (o.op == \"=\")) ? \"&nbsp;\" : o.op\r\n                }</td><td class=\"R ${sStyle_R}\"><pre>${sLine_R}</pre></td></tr>`);\r\n            vTable.push(sOut);\r\n        }\r\n    } else {\r\n        for (const o of vResult) {\r\n            let sInfo_L = int2str(o.x + 1), sInfo_R = int2str(o.y + 1), sStyle = \"\";\r\n            const sLine = (o.op == \"*\") ? (do_lineDiff(oDiff, o.x, o.y))[0]\r\n                : this.EscapeHTML((o.op != \"+\") ? oDiff.vLeft[o.x] : oDiff.vRight[o.y]);\r\n            if ((o.op == \"-\") && (oDiff.vInfo_L[o.x].status == \"#\")) {\r\n                [sStyle, sInfo_R] = [\"moved\", `(${int2str(oDiff.vInfo_L[o.x].pair + 1)})`];\r\n            } else if ((o.op == \"+\") && (oDiff.vInfo_R[o.y].status == \"#\")) {\r\n                [sStyle, sInfo_L] = [\"moved\", `(${int2str(oDiff.vInfo_R[o.y].pair + 1)})`];\r\n            }\r\n            const sOut = (`<tr class=\"${status_map[o.op]}\"><td class=\"lnum\">${sInfo_L}</td><td class=\"lnum\">${sInfo_R}`\r\n                + `</td><td class=\"M ${sStyle}\">${(o.op == \"=\") ? \"&nbsp;\" : o.op\r\n                }</td><td class=\"M ${sStyle}\" nowrap=\"nowrap\"><pre>${sLine}</pre></td></tr>`);\r\n            vTable.push(sOut);\r\n        }\r\n    }\r\n    vTable.push(\"</table>\");\r\n    $(\"result\").innerHTML = vTable.join(\"\\n\");\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/diff_orz_do.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 470,
    "kind": "variable",
    "name": "DiffEngine",
    "memberof": "src/util/string/diff/diff_orz_do.js",
    "static": true,
    "longname": "src/util/string/diff/diff_orz_do.js~DiffEngine",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/diff_orz_do.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"bIgnoreCase\": *, \"flgIgnoreBlank\": number, \"bDetectMovedBlock\": boolean, \"bDetectSimilarLine\": boolean, \"bWord\": boolean, \"bSemanticCleanup\": boolean, \"vLeft\": *, \"vRight\": *, \"vInfo_L\": *, \"vInfo_R\": *, \"threshold\": number, \"BLANK_PATTERN\": *, \"CompareStr\": function, \"CalcScore\": function, \"IsDuplicated\": function, \"CreateHunksList\": function, \"makePair_\": function, \"IndentHeuristic\": function, \"DetectMovedBlock\": function}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 471,
    "kind": "function",
    "name": "diff_orz_do",
    "memberof": "src/util/string/diff/diff_orz_do.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/diff_orz_do.js~diff_orz_do",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/diff/diff_orz_do.js",
    "importStyle": "diff_orz_do",
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "src/util/string/diff/index.js",
    "content": "\r\nexport * from \"./diff.js\";\r\nexport * from \"./stringDiff.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "file",
    "name": "src/util/string/diff/stringDiff.js",
    "content": "// @ts-check\r\n\r\nimport { md5 } from \"../hash/index\";\r\n\r\nexport const stringDiff = (before, after) => {\r\n    if(md5(before) === md5(after) && before === after){}\r\n};\r\n\r\nexport const distance = (A, B)=>{\r\n    const M = A.length;\r\n    const N = B.length;\r\n    // DP のテーブル (大きさ (M + 1) * (N + 1) の 2 次元配列)\r\n    // D[i][j] = (0, 0) から (i, j) までの最小コスト (編集距離)\r\n    const D = new Array(M + 1);\r\n    for (let i = 0;i <= M;i++) {\r\n        D[i] = new Array(N + 1);\r\n        // (0,0) から (i, 0) までの距離は i\r\n        D[i][0] = i;\r\n    }\r\n    for (let j = 1;j <= N;j++) {\r\n        // (0,0) から (0, j) までの距離は j\r\n        D[0][j] = j;\r\n    }\r\n    // D[i][j] を順番に求める\r\n    for (let i = 1;i <= M;i++) {\r\n        for (let j = 1;j <= N;j++) {\r\n        // 縦横については + 1, 斜めの辺 (あれば) については + 0\r\n            D[i][j] = A[i - 1] === B[j - 1]\r\n                ? Math.min(D[i - 1][j] + 1, D[i][j - 1] + 1, D[i - 1][j - 1])\r\n                : Math.min(D[i - 1][j] + 1, D[i][j - 1] + 1);\r\n        }\r\n    }\r\n    return D[M][N];\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/stringDiff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 474,
    "kind": "function",
    "name": "stringDiff",
    "memberof": "src/util/string/diff/stringDiff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/stringDiff.js~stringDiff",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/diff/stringDiff.js",
    "importStyle": "{stringDiff}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "before",
        "types": [
          "*"
        ]
      },
      {
        "name": "after",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "distance",
    "memberof": "src/util/string/diff/stringDiff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/stringDiff.js~distance",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/diff/stringDiff.js",
    "importStyle": "{distance}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "A",
        "types": [
          "*"
        ]
      },
      {
        "name": "B",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "file",
    "name": "src/util/string/diff/temp2.js",
    "content": "\r\n/* eslint-disable no-extend-native */\r\n\r\n// TODO:２次元配列のラッパーOBJがほしい\r\n\r\n\r\n// ※Array拡張時は，配列の要素をthisに代入しないよう気をつける。\r\n// http://d.hatena.ne.jp/language_and_engineering/20141226/JavaScriptCallMethodArg\r\n\r\n// 配列のイテレータ\r\nArray.prototype.each = function(func){\r\n    for(let i = 0;i < this.length;i++){\r\n        func.call(this, this[i], i);\r\n    }\r\n    return this; // チェインを継続\r\n};\r\n\r\n// map\r\nArray.prototype.map = function(func){\r\n    const _arr = [];\r\n    this.each((item, ind) => {\r\n        _arr.push(func.call(_arr, item, ind));\r\n    });\r\n    return _arr;\r\n};\r\n\r\nArray.prototype.filter = function(func){\r\n    const _arr = [];\r\n    this.each((item, ind) => {\r\n        if(func(item, ind)){\r\n            _arr.push(item);\r\n        }\r\n    });\r\n    return _arr;\r\n};\r\n\r\nconst $ = (dom_id) => document.getElementById(dom_id);\r\n\r\n// 以下はメインの計算オブジェクト\r\n// 文字列のdiffを計算するオブジェクト\r\n// 比較対象を引数に渡す\r\nclass DiffTaker {\r\n    constructor(str_old, str_new) {\r\n        // モードを判定\r\n        this.judge_mode();\r\n    }\r\n}\r\nDiffTaker.prototype = {\r\n\r\n\r\n    // ---------- 起動時 ---------\r\n\r\n\r\n    // 実行モード CUI/GUI\r\n    cui_mode : false,\r\n\r\n    is_cui_mode(){\r\n        return this.cui_mode;\r\n    },\r\n    is_gui_mode(){\r\n        return !this.cui_mode;\r\n    },\r\n\r\n    judge_mode(){\r\n        if(typeof (window) == \"undefined\") {\r\n            // WSHで実行中とみなす\r\n            this.cui_mode = true;\r\n        }else{\r\n            // ブラウザで実行中とみなす\r\n            this.cui_mode = false;\r\n        }\r\n    },\r\n\r\n    // GUIモードの場合，ログ出力先のDOMを指定\r\n    set_output_target(elem){\r\n        this.output_dom = elem;\r\n        return this;\r\n    },\r\n\r\n    output_dom : null,\r\n\r\n    // リッチテキストによる結果出力先\r\n    set_richtxt_target(elem){\r\n        this.richtxt_dom = elem;\r\n        return this;\r\n    },\r\n\r\n    richtxt_dom : null,\r\n\r\n\r\n    // ---------- 比較処理 ---------\r\n\r\n\r\n    // ２つの文字列の比較を実行\r\n    test(str_old, str_new){\r\n        // まずプロパティを色々初期化\r\n        // このメソッドが呼ばれるたびに新たな比較対象を生むから\r\n        this.str_old = str_old;\r\n        this.str_new = str_new;\r\n        this.operation_symbols = null;\r\n        this.operation_rich_text = null;\r\n        this.eg = null;\r\n        this.eg_i_arr = [null];\r\n        this.eg_j_arr = [null];\r\n\r\n        // 計算を開始\r\n        this.calculate();\r\n\r\n        return this;\r\n    },\r\n\r\n    // 比較対象の文字列\r\n    str_old : null,\r\n    str_new : null,\r\n\r\n\r\n    // 計算を実行\r\n    calculate(){\r\n        // エディットグラフの作成\r\n        this.init_edit_graph();\r\n        this.calc_edit_graph();\r\n\r\n        this.dump_edit_graph();\r\n\r\n        // バックポインタをたどって最短経路を決定\r\n        this.trace_back_pointers();\r\n\r\n        // this.dump_pointers();\r\n        // this.dump_route_on_graph();\r\n        this.dump_operations();\r\n\r\n        // 差分生成操作を表すシンボル文字列を生成\r\n        this.calc_operation_symbols();\r\n        this.dump_operation_symbols();\r\n\r\n        if(this.is_gui_mode()){\r\n            // 差分生成操作を表すリッチテキストを生成\r\n            this.generate_rich_text();\r\n            this.display_rich_text();\r\n        }\r\n    },\r\n\r\n\r\n    // ---------- 動作試験用 ---------\r\n\r\n\r\n    // 差分の生成結果をassert検査\r\n    assert_symbols(expected_value){\r\n        const actual_value = this.operation_symbols;\r\n\r\n        // テキスト形式でログ\r\n        this.log(`[ ${\r\n\t\t\t this.assert_count\r\n\t\t\t } ] actual : '${\r\n\t\t\t actual_value\r\n\t\t\t }', expected : '${\r\n\t\t\t expected_value\r\n\t\t\t }'\\n`);\r\n\r\n        this.assert_count++;\r\n\r\n        if(expected_value == actual_value){\r\n            this.log(\"assert : OK\\n\");\r\n\r\n            return this;\r\n        }\r\n        this.log(\"assert : NG\\n\");\r\n\r\n        // おかしい結果が出たらここでメソッドチェインを停止\r\n        return null;\r\n    },\r\n\r\n    // アサート回数\r\n    assert_count : 1,\r\n\r\n\r\n    // 差分操作を表すシンボル文字列表記を取得\r\n    calc_operation_symbols(){\r\n        this.operation_symbols = this.array_best_points.map((item) => item.desc_sym).filter((item) => (\r\n            (item)\r\n\t\t\t\t&&\t\t\t\t(\r\n\t\t\t\t    (`${item}`).length > 0\r\n\t\t\t\t)\r\n        )).join(\",\");\r\n    },\r\n\r\n    operation_symbols : null,\r\n\r\n\r\n    // リッチテキスト（というかHTML形式の視覚的な表示方法）を生成\r\n    generate_rich_text(){\r\n        this.operation_rich_text = this.array_best_points.map((item) => item.desc_html).join(\"\");\r\n    },\r\n\r\n    operation_rich_text : null,\r\n\r\n    // リッチテキスト表示\r\n    display_rich_text(){\r\n        this.richtxt_dom.innerHTML = `${\r\n\t\t\t this.richtxt_dom.innerHTML\r\n\t\t\t }<br>${\r\n\t\t\t this.operation_rich_text}`;\r\n    },\r\n\r\n\r\n    // 以下は内部のアルゴリズム\r\n\r\n\r\n    // ---------- エディットグラフ ---------\r\n\r\n\r\n    // eg[ i ][ j ] のようにi座標とj座標でアクセス\r\n    eg : null,\r\n\r\n    // すみっこに各文字列がセットされる\r\n    eg_i_arr : [null],\r\n    eg_j_arr : [null],\r\n\r\n    // iとjの最大値\r\n    getMaxI(){\r\n        // 文字数分に原点が加わるので-1しなくてよい\r\n        return this.str_old.length;\r\n    },\r\n\r\n    getMaxJ(){\r\n        return this.str_new.length;\r\n    },\r\n\r\n    // 表示整形用\r\n    tb : \"\\t\",\r\n\r\n    // エディットグラフ上の点を操作\r\n\r\n    get_point(i, j){\r\n        return this.eg[i][j];\r\n    },\r\n\r\n    // 距離（コスト）のGET/SET\r\n    set_cost(i, j, cost){\r\n        this.get_point(i, j).total_cost = cost;\r\n    },\r\n    get_cost_at(i, j){\r\n        return this.get_point(i, j).total_cost;\r\n    },\r\n\r\n\r\n    // 初期化\r\n    init_edit_graph(){\r\n        // すみっこ\r\n        for(var i = 0;i < this.getMaxI();i++){\r\n            this.eg_i_arr.push(this.str_old.charAt(i));\r\n        }\r\n        for(var j = 0;j < this.getMaxJ();j++){\r\n            this.eg_j_arr.push(this.str_new.charAt(j));\r\n        }\r\n\r\n        // 盤\r\n        this.eg = [];\r\n        for(var i = 0;i <= this.getMaxI();i++){\r\n            this.eg.push([]);\r\n\r\n            for(var j = 0;j <= this.getMaxJ();j++){\r\n                this.eg[i].push(\r\n                    // 点\r\n                    new EditGraphPoint(\r\n                        i,\r\n                        j,\r\n                        this.eg_i_arr[i],\r\n                        this.eg_j_arr[j]\r\n                    ));\r\n            }\r\n        }\r\n    },\r\n\r\n    // グラフ上の各点に距離を算出\r\n    calc_edit_graph(){\r\n        // グラフ上の全点に対して\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n            for(let j = 0;j <= this.getMaxJ();j++){\r\n                // この点の前までの最小コスト\r\n                const minimum_cost_info = this.getMinimumCostBefore(i, j);\r\n                const prev_minimum_cost = minimum_cost_info.cost;\r\n\r\n                const p = this.get_point(i, j);\r\n\r\n                // この点が同じ文字で，なおかつすみっこではないなら\r\n                if(p.hasSameChars() && (i > 0) && (j > 0)){\r\n                    // 左上の最小コストを引き継ぐ。\r\n                    // バックポインタも左上を指す\r\n                    this.set_cost(i, j, this.get_cost_at(i - 1, j - 1));\r\n                    p.backPointerIJMinus();\r\n                } else {\r\n                    // 前までの最小コストよりも１増える。\r\n                    // バックポインタは前の最小コストを指す。\r\n                    this.set_cost(i, j, prev_minimum_cost + 1);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    // ある点の前までの最小コスト（バックポインタをセットしながら算出）\r\n    // コストだけでなく，どの点からくるのが最小かという座標も返す\r\n    getMinimumCostBefore(i, j){\r\n        const p = this.get_point(i, j);\r\n\r\n        if((i == 0) && (j == 0)) {\r\n            // 原点ならコスト0になるように調節\r\n            return {\r\n                cost : -1,\r\n                i : 0,\r\n                j : 0\r\n            };\r\n        }\r\n        if(i == 0) {\r\n            // J方向にたどる\r\n            p.backPointerJMinus();\r\n            return {\r\n                cost : this.get_cost_at(0, j - 1),\r\n                i : 0,\r\n                j : j - 1\r\n            };\r\n        }\r\n        if(j == 0) {\r\n            // i方向にたどる\r\n            p.backPointerIMinus();\r\n            return {\r\n                cost : this.get_cost_at(i - 1, 0),\r\n                i : i - 1,\r\n                j : 0\r\n            };\r\n        }\r\n\r\n        // 隅っこの点ではない場合，詳しく比較\r\n\r\n        // 隣接する手前の点のうち小さいほう\r\n        const parray = [\r\n\r\n            {\r\n                cost : this.get_cost_at(i, j - 1),\r\n                func : \"backPointerJMinus\",\r\n                i,\r\n                j : j - 1\r\n            },\r\n            {\r\n                cost : this.get_cost_at(i - 1, j),\r\n                func : \"backPointerIMinus\",\r\n                i : i - 1,\r\n                j\r\n            }\r\n        ];\r\n        parray.sort((v1, v2) => (v1.cost > v2.cost) ? 1 : -1);\r\n        p[parray[0].func]();\r\n\r\n        return parray[0];\r\n    },\r\n\r\n\r\n    // 末尾からバックポインタをたどる\r\n    trace_back_pointers(){\r\n        // 末尾\r\n        let point = this.get_point(this.getMaxI(), this.getMaxJ());\r\n\r\n        let continue_flag = true;\r\n        const arr_bp = [];\r\n        while(continue_flag){\r\n            // この座標と，そのバックポインタの向きを記録\r\n            const pos = point.get_back_pointer_pos();\r\n            arr_bp.push({\r\n                i : point.i,\r\n                j : point.j,\r\n                s : pos.s,\r\n                desc_seq : pos.desc_seq,\r\n                char_i : point.char_i,\r\n                char_j : point.char_j,\r\n                desc_sym : pos.desc_sym,\r\n                desc_html : pos.desc_html\r\n            });\r\n\r\n            if((point.i == 0) && (point.j == 0)){\r\n                // 始点から先へは進まない\r\n                continue_flag = false;\r\n            } else {\r\n                // 手前の点へ移る\r\n                point = this.get_point(pos.i, pos.j);\r\n            }\r\n        }\r\n\r\n        // 先頭からに並び替える\r\n        arr_bp.reverse();\r\n\r\n        this.array_best_points = arr_bp;\r\n    },\r\n\r\n\r\n    // ----- デバッグ出力用 ----\r\n\r\n\r\n    log(s){\r\n        // nullが来たら空文字で改行する\r\n        if((`${s}`).length < 1){\r\n            s = \"\";\r\n        }\r\n\r\n        if(this.is_cui_mode()){\r\n            // コンソール出力\r\n            WScript.Echo(s);\r\n        }else{\r\n            // TODO:ログ出力モードのPREまたはTEXTAREAモード？\r\n\r\n            this.output_dom.innerHTML = `${s\r\n\t\t\t\t }\\n${\r\n\t\t\t\t this.output_dom.innerHTML}`;\r\n        }\r\n    },\r\n\r\n    // エディットグラフを文字列にダンプして表示\r\n    dump_edit_graph(){\r\n        // 表示内容：\r\n        // 旧文字列と新文字列，\r\n        // 各点におけるコスト，\r\n        // 各点におけるバックポインタの向き。\r\n\r\n        let s = \"\";\r\n\r\n        // 旧文字列\r\n        s += `${this.tb + this.eg_i_arr.map((item) => ((item == null) ? \"null\" : item)).join(this.tb)}\\n\\n\\n`;\r\n\r\n        // 行ごとに２段に分けて出力\r\n        for(let j = 0;j <= this.getMaxJ();j++){\r\n            if(j == 0){\r\n            }else{\r\n                s += `${this.tb + this.dumpJLineFirst(j)}\\n`;\r\n                s += `${this.tb + this.dumpJLineFirst2(j)}\\n\\n`;\r\n            }\r\n            s += `${this.eg_j_arr[j] + this.tb + this.dumpJLineSecond(j)}\\n`;\r\n            s += `${this.tb + this.dumpJLineThird(j)}\\n\\n`;\r\n        }\r\n\r\n        this.log(`${s}\\n`);\r\n    },\r\n\r\n    // あるjについてグラフを出力（二段目）\r\n    dumpJLineSecond(j){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n            s += this.get_cost_at(i, j);\r\n            if(i < this.getMaxI()){\r\n                // 右側の点が「←」を持っていれば\r\n                if(this.get_point(i + 1, j).bp_iminus){\r\n                    s += \" ←←\";\r\n                }else{\r\n                }\r\n                s += this.tb;\r\n            }\r\n        }\r\n\r\n        return s;\r\n    },\r\n\r\n    // あるjについてグラフを出力（三段目）\r\n    dumpJLineThird(j){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n            s += this.get_point(i, j).charPair() + this.tb;\r\n        }\r\n\r\n        return s;\r\n    },\r\n\r\n    // あるjについてグラフを出力（一段目）\r\n    dumpJLineFirst(j){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n \t\t\t// この点が「↑」を持っていれば\r\n \t\t\tif(this.get_point(i, j).bp_jminus){\r\n \t\t\t\ts += \"↑\";\r\n \t\t\t}else{\r\n \t\t\t\ts += \"　\";\r\n \t\t\t}\r\n\r\n            if(i < this.getMaxI()){\r\n                // 右の点が「＼」を持っていれば\r\n                if(this.get_point(i + 1, j).bp_ijminus){\r\n                    s += \"＼\";\r\n                }else{\r\n                }\r\n\r\n                s += this.tb;\r\n            }\r\n        }\r\n\r\n        return s;\r\n    },\r\n\r\n    // あるjについてグラフを出力（一段目＋）\r\n    dumpJLineFirst2(j){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n \t\t\t// この点が「↑」を持っていれば\r\n \t\t\tif(this.get_point(i, j).bp_jminus){\r\n \t\t\t\ts += \"↑\";\r\n \t\t\t}else{\r\n \t\t\t\ts += \"　\";\r\n \t\t\t}\r\n\r\n            if(i < this.getMaxI()){\r\n                // 右の点が「＼」を持っていれば\r\n                if(this.get_point(i + 1, j).bp_ijminus){\r\n                    s += \"　＼＿\";\r\n                }else{\r\n                }\r\n\r\n                s += this.tb;\r\n            }\r\n        }\r\n\r\n        return s;\r\n    },\r\n\r\n    // 経路を文字列にダンプして表示\r\n    dump_pointers(){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i < this.array_best_points.length;i++){\r\n            const ap = this.array_best_points[i];\r\n            s += `(${\r\n\t\t\t\t ap.i\r\n\t\t\t\t }, ${\r\n\t\t\t\t ap.j\r\n\t\t\t\t }), (${\r\n\t\t\t\t ap.char_i\r\n\t\t\t\t }, ${\r\n\t\t\t\t ap.char_j\r\n\t\t\t\t }) ${\r\n\t\t\t\t ap.s\r\n\t\t\t\t }  \\r\\n`;\r\n        }\r\n\r\n        this.log(`${s}\\n`);\r\n    },\r\n\r\n    // 経路をグラフ上の道として文字列にダンプして表示\r\n    dump_route_on_graph(){\r\n        let s = \"\";\r\n\r\n        for(let i = 0;i <= this.getMaxI();i++){\r\n            for(let j = 0;j <= this.getMaxJ();j++){\r\n                s += this.get_point(i, j).get_back_pointer_pos().w;\r\n            }\r\n            s += \"\\r\\n\";\r\n        }\r\n\r\n        this.log(`${s}\\n`);\r\n    },\r\n\r\n    // 差分の生成操作を文字列にダンプして表示\r\n    dump_operations(){\r\n        const s = `${this.str_old\r\n\t\t\t }\\n${\r\n\t\t\t this.array_best_points.map((item, ind) => item.desc_seq).join(\"\\n\")\r\n\t\t\t }\\n${\r\n\t\t\t this.str_new}`;\r\n        this.log(`${s}\\n`);\r\n    },\r\n\r\n    // 差分操作のシンボル文字列を出力\r\n    dump_operation_symbols(){\r\n        this.log(`${this.operation_symbols}\\n`);\r\n    }\r\n\r\n};\r\n// edit graph上の座標\r\nvar EditGraphPoint = function(i, j, char_i, char_j){\r\n    this.i = i;\r\n    this.j = j;\r\n    this.char_i = char_i;\r\n    this.char_j = char_j;\r\n    this.total_cost = 0;\r\n};\r\nEditGraphPoint.prototype = {\r\n    // 最短経路のバックポインタの方向\r\n    bp_iminus  : false,\r\n    bp_jminus  : false,\r\n    bp_ijminus : false,\r\n\r\n    backPointerIMinus(){\r\n        this.bp_iminus = true;\r\n        this.bp_jminus = false;\r\n        this.bp_ijminus = false;\r\n    },\r\n    backPointerJMinus(){\r\n        this.bp_iminus = false;\r\n        this.bp_jminus = true;\r\n        this.bp_ijminus = false;\r\n    },\r\n    backPointerIJMinus(){\r\n        this.bp_iminus = false;\r\n        this.bp_jminus = false;\r\n        this.bp_ijminus = true;\r\n    },\r\n\r\n    get_back_pointer_pos(){\r\n        if(this.bp_iminus){\r\n            return {\r\n                i : this.i - 1,\r\n                j : this.j,\r\n                s : \"i - 1\",\r\n                w : \"↑\",\r\n                desc_seq : `旧文字${this.char_i}を削除`,\r\n                desc_sym : `-${this.char_i}`,\r\n                desc_html : `<span class='_diff_remove'>${\r\n\t\t\t\t\t this.h(this.char_i)\r\n\t\t\t\t\t }</span>`\r\n            };\r\n        }\r\n        if(this.bp_jminus){\r\n            return {\r\n                i : this.i,\r\n                j : this.j - 1,\r\n                s : \"j - 1\",\r\n                w : \"←\",\r\n                desc_seq : `新文字${this.char_j}を追加`,\r\n                desc_sym : `+${this.char_j}`,\r\n                desc_html : `<span class='_diff_add'>${\r\n\t\t\t\t\t this.h(this.char_j)\r\n\t\t\t\t\t }</span>`\r\n            };\r\n        }\r\n        if(this.bp_ijminus){\r\n            return {\r\n                i : this.i - 1,\r\n                j : this.j - 1,\r\n                s : \"ij - 1\",\r\n                w : \"＼\",\r\n                desc_seq : `同文字${this.char_i}`,\r\n                desc_sym : this.char_i,\r\n                desc_html : `<span class='_diff_keep'>${\r\n\t\t\t\t\t this.h(this.char_i)\r\n\t\t\t\t\t }</span>`\r\n            };\r\n        }\r\n\r\n        return {\r\n            s : null,\r\n            w : \"○\",\r\n            desc_seq : \"差分をスタート\"\r\n        };\r\n    },\r\n\r\n    // HTML用エスケープ\r\n    h(s){\r\n        return (\r\n            (`${s}`)\r\n                .replace(/>/g, \"&gt;\")\r\n                .replace(/</g, \"&lt;\")\r\n        );\r\n    },\r\n\r\n    // 保有している２文字について\r\n\r\n    charPair(){\r\n        return (\r\n            `(${\r\n\t\t\t this.char_i == null ? \"NA\" : this.char_i\r\n\t\t\t },${\r\n\t\t\t this.char_j == null ? \"NA\" : this.char_j\r\n\t\t\t })`\r\n        );\r\n    },\r\n\r\n    hasSameChars(){\r\n        return (this.char_i == this.char_j);\r\n    }\r\n};\r\n\r\nconst f = () => {\r\n    new DiffTaker()\r\n        .set_output_target($(\"my_pre\"))\r\n        .set_richtxt_target($(\"my_div\"))\r\n        .test(\"通報しました\", \"通報しますた\")\r\n        .test(\"go\", \"goes\")\r\n        .test(\"go\", \"went\")\r\n        .test(\"go\", \"gone\")\r\n        .test(\"make\", \"made\")\r\n        .test(\"take\", \"takes\")\r\n        .test(\"take\", \"took\")\r\n        .test(\"take\", \"taken\")\r\n        .test(\"choose\", \"chose\")\r\n        .test(\"chose\", \"chosen\")\r\n        .test(\"have\", \"has\")\r\n        .test(\"abcdef\", \"bbacddg\")\r\n        // .assert_symbols(\"\")\r\n    ;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/diff/temp2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 477,
    "kind": "function",
    "name": "each",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~each",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "map",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~map",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "filter",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~filter",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 480,
    "kind": "function",
    "name": "$",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~$",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "dom_id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 481,
    "kind": "class",
    "name": "DiffTaker",
    "memberof": "src/util/string/diff/temp2.js",
    "static": true,
    "longname": "src/util/string/diff/temp2.js~DiffTaker",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 482,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/string/diff/temp2.js~DiffTaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/diff/temp2.js~DiffTaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "EditGraphPoint",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~EditGraphPoint",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 578,
    "undocument": true,
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      },
      {
        "name": "j",
        "types": [
          "*"
        ]
      },
      {
        "name": "char_i",
        "types": [
          "*"
        ]
      },
      {
        "name": "char_j",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 484,
    "kind": "function",
    "name": "f",
    "memberof": "src/util/string/diff/temp2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/diff/temp2.js~f",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/diff/temp2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 681,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 485,
    "kind": "file",
    "name": "src/util/string/enigma.js",
    "content": "\r\n// @ts-check\r\n\r\nconst difaultGears = [\r\n    [16,14,6,3,4,20,9,24,7,2,23,1,25,8,19,0,5,12,15,18,21,11,13,10,17,22],\r\n    [9,7,3,24,17,10,1,13,15,22,2,25,5,14,19,4,0,20,18,23,11,16,8,12,21,6],\r\n    [11,12,25,3,0,10,21,19,8,24,2,15,9,22,18,17,23,14,1,4,13,16,7,6,20,5],\r\n];\r\nconst difaultR = [1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,17,16,19,18,21,20,23,22,25,24];\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\nexport class Enigma {\r\n    constructor(charTable=alphabet, gears=difaultGears, reverseGear=difaultR) {\r\n        this.charTable = charTable;\r\n        this.gears = gears;\r\n        this.reverseGear = reverseGear;\r\n        this.rotation = new Array(this.gears.length).fill(0);\r\n    }\r\n    _place(i, n) {\r\n        const { length } = this.gears[i];\r\n        return (length + n - this.rotation[i]) % length;\r\n    }\r\n    _shift(i, n) {\r\n        return (this.rotation[i] + n) % this.gears[i].length;\r\n    }\r\n    charExchange(char) {\r\n        const l = this.gears.length;\r\n        let i = 0, n = this.charTable.indexOf(char);\r\n        if(!~n)return null;\r\n        for(;i < l;i++) {\r\n            const location = this._place(i, n);\r\n            n = this._shift(i, this.gears[i][location]);\r\n        }\r\n        // 反転\r\n        n = this.reverseGear[n];\r\n        for(;i--;) {\r\n            const location = this._place(i, n);\r\n            n = this._shift(i, this.gears[i].indexOf(location));\r\n        }\r\n        // ギアの回転\r\n        for(let i = 0, flag = true;flag && i < l;) {\r\n            flag = ++this.rotation[i] === this.gears[i].length;\r\n            flag && (this.rotation[i++] = 0);\r\n        }\r\n        return this.charTable[n] || null;\r\n    }\r\n    /**\r\n     * @param {string} string\r\n     */\r\n    exchange(string) {\r\n        let cryptedStr = \"\";\r\n        for(let i = 0;i < string.length;i++)\r\n            cryptedStr += this.charExchange(string[i]);\r\n        return cryptedStr;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/enigma.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 486,
    "kind": "variable",
    "name": "difaultGears",
    "memberof": "src/util/string/enigma.js",
    "static": true,
    "longname": "src/util/string/enigma.js~difaultGears",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/enigma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 487,
    "kind": "variable",
    "name": "difaultR",
    "memberof": "src/util/string/enigma.js",
    "static": true,
    "longname": "src/util/string/enigma.js~difaultR",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/enigma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 488,
    "kind": "variable",
    "name": "alphabet",
    "memberof": "src/util/string/enigma.js",
    "static": true,
    "longname": "src/util/string/enigma.js~alphabet",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/enigma.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 489,
    "kind": "class",
    "name": "Enigma",
    "memberof": "src/util/string/enigma.js",
    "static": true,
    "longname": "src/util/string/enigma.js~Enigma",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/enigma.js",
    "importStyle": "{Enigma}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 490,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/string/enigma.js~Enigma",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 491,
    "kind": "member",
    "name": "charTable",
    "memberof": "src/util/string/enigma.js~Enigma",
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#charTable",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "member",
    "name": "gears",
    "memberof": "src/util/string/enigma.js~Enigma",
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#gears",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "member",
    "name": "reverseGear",
    "memberof": "src/util/string/enigma.js~Enigma",
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#reverseGear",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "member",
    "name": "rotation",
    "memberof": "src/util/string/enigma.js~Enigma",
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#rotation",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "_place",
    "memberof": "src/util/string/enigma.js~Enigma",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#_place",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      },
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "_shift",
    "memberof": "src/util/string/enigma.js~Enigma",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#_shift",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      },
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "charExchange",
    "memberof": "src/util/string/enigma.js~Enigma",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#charExchange",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "char",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "exchange",
    "memberof": "src/util/string/enigma.js~Enigma",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/string/enigma.js~Enigma#exchange",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "src/util/string/format.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { each } from \"../../utility/loop/each\";\r\nimport { splice } from \"../../utility/getIndex\";\r\n\r\n/**\r\n * @param {string} string\r\n * @param {*} placeholders\r\n * @param {[string, string]} affix\r\n * @example\r\n * format(\"{test}\", { test: \"value\" });\r\n * // => \"value\"\r\n */\r\nexport const format = (string, placeholders, affix=[\"{\", \"}\"])=>{\r\n    each(placeholders, (value, key)=>{\r\n        const str = splice(affix, 1, 0, key).join(\"\");\r\n        if(~value.indexOf(str))return;\r\n        while(~string.indexOf(str))\r\n            string = string.replace(str, value);\r\n    });\r\n    return string;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/format.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "function",
    "name": "format",
    "memberof": "src/util/string/format.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/format.js~format",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/format.js",
    "importStyle": "{format}",
    "description": "",
    "examples": [
      "format(\"{test}\", { test: \"value\" });\n// => \"value\""
    ],
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "placeholders",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[string, string]"
        ],
        "spread": false,
        "optional": false,
        "name": "affix",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "file",
    "name": "src/util/string/hash/core.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isArray, isString } from \"../../is/index\";\r\nimport { foldLeft } from \"../../../utility/loop/fold\";\r\n\r\nconst unpack = (text) => {\r\n    let n = 0;\r\n    const result = new Array(text.length);\r\n    for(let index = 0;index < text.length;index++) {\r\n        const charCode = text.charCodeAt(index);\r\n        if(charCode > 0xff) {\r\n            result[n++] = charCode >>> 8;\r\n            result[n++] = charCode & 0xff;\r\n        }else result[n++] = charCode;\r\n    }\r\n    return result;\r\n};\r\n\r\n/**\r\n * @param {function(number[]): number[]} hash\r\n * @param {string | number[]} data\r\n * @param {*} props\r\n */\r\nexport const hashCore = (hash, data, props={}) => {\r\n    const temp\r\n        = isArray(data) ? data\r\n        : isString(data) ? unpack(data)\r\n        : [];\r\n    const hashedData = hash(temp);\r\n    switch(props.format){\r\n    default:\r\n    case \"hex\":\r\n        return foldLeft(hashedData, (hex, current)=>(\r\n            hex + (current > 0xf ? \"\" : \"0\") + current.toString(16)\r\n        ), \"\");\r\n    case \"binary\":\r\n        return String.fromCharCode(...hashedData);\r\n    case \"dec\":\r\n        return hashedData;\r\n    }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/core.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 502,
    "kind": "function",
    "name": "unpack",
    "memberof": "src/util/string/hash/core.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/core.js~unpack",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/core.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 503,
    "kind": "function",
    "name": "hashCore",
    "memberof": "src/util/string/hash/core.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/core.js~hashCore",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/core.js",
    "importStyle": "{hashCore}",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(number[]): number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "src/util/string/hash/index.js",
    "content": "\r\nexport * from \"./md5.js\";\r\nexport * from \"./sha1.js\";\r\nexport * from \"./sha256.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "file",
    "name": "src/util/string/hash/lib.js",
    "content": "\r\n// @ts-check\r\n\r\nexport const fromBigEndian32 = (_blk) => {\r\n    const result = [];\r\n    for (let n = 0, i = 0;i < _blk.length;i++) {\r\n        result[n++] = (_blk[i] >>> 24) & 0xff;\r\n        result[n++] = (_blk[i] >>> 16) & 0xff;\r\n        result[n++] = (_blk[i] >>> 8) & 0xff;\r\n        result[n++] = _blk[i] & 0xff;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const toBigEndian32 = (_blk) => {\r\n    const tmp = [];\r\n    for(let n = 0, i = 0;i < _blk.length;i += 4, n++)\r\n        tmp[n] = (_blk[i] << 24) | (_blk[i + 1] << 16) | (_blk[i + 2] << 8) | _blk[i + 3];\r\n    return tmp;\r\n};\r\n\r\nconst blockLen = 64;\r\n\r\nexport const paddingData = (_datz) => {\r\n    let datLen = _datz.length;\r\n    let n = datLen;\r\n    _datz[n++] = 0x80;\r\n    while(n % blockLen !== 56)_datz[n++] = 0;\r\n    datLen *= 8;\r\n    return _datz.concat(0, 0, 0, 0, fromBigEndian32([datLen]));\r\n};\r\n\r\nexport const ch = (_b, _c, _d) => (\r\n    (_b & _c) ^ (~_b & _d)\r\n);\r\n\r\nexport const maj = (_b, _c, _d) => (\r\n    (_b & _c) ^ (_b & _d) ^ (_c & _d)\r\n);\r\n\r\nexport const xor3 = (state) => (state[1] ^ state[2] ^ state[3]);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/lib.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 506,
    "kind": "function",
    "name": "fromBigEndian32",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~fromBigEndian32",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{fromBigEndian32}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "_blk",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "function",
    "name": "toBigEndian32",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~toBigEndian32",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{toBigEndian32}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "_blk",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "variable",
    "name": "blockLen",
    "memberof": "src/util/string/hash/lib.js",
    "static": true,
    "longname": "src/util/string/hash/lib.js~blockLen",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 509,
    "kind": "function",
    "name": "paddingData",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~paddingData",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{paddingData}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "_datz",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 510,
    "kind": "function",
    "name": "ch",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~ch",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{ch}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "_b",
        "types": [
          "*"
        ]
      },
      {
        "name": "_c",
        "types": [
          "*"
        ]
      },
      {
        "name": "_d",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 511,
    "kind": "function",
    "name": "maj",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~maj",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{maj}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "_b",
        "types": [
          "*"
        ]
      },
      {
        "name": "_c",
        "types": [
          "*"
        ]
      },
      {
        "name": "_d",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 512,
    "kind": "function",
    "name": "xor3",
    "memberof": "src/util/string/hash/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/lib.js~xor3",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/lib.js",
    "importStyle": "{xor3}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "file",
    "name": "src/util/string/hash/md5.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { hashCore } from \"./core\";\r\n\r\nconst K = [\r\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\r\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\r\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9,\r\n];\r\nconst S = [\r\n    7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\r\n    5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\r\n    4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\r\n    6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21,\r\n];\r\nconst T = [\r\n    0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\r\n    0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\r\n    0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa, 0xd62f105d, 0x2441453, 0xd8a1e681, 0xe7d3fbc8,\r\n    0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\r\n    0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\r\n    0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x4881d05, 0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\r\n    0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\r\n    0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391,\r\n];\r\nconst initState = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\r\n\r\nconst fromLittleEndian32 = (data) => {\r\n    const result = [];\r\n    for(;data.length;) {\r\n        const ___ = data.shift();\r\n        result.push(___ & 0xff);\r\n        result.push(___ >>> 8 & 0xff);\r\n        result.push(___ >>> 16 & 0xff);\r\n        result.push(___ >>> 24 & 0xff);\r\n    }\r\n    return result;\r\n};\r\n\r\nconst $ = (data, charSize, state, _i) => {\r\n    const tmp = new Array(16);\r\n    if(charSize === 1)\r\n        for(let j = 0, n = _i;j < 16;)\r\n            tmp[j++] = data[n++] | (data[n++] << 8)\r\n                | (data[n++] << 16) | (data[n++] << 24);\r\n    else for(let j = 0, n = _i;j < 16;)\r\n        tmp[j++] = data[n++] | (data[n++] << 16);\r\n    const stateRef = [...state];\r\n    for(let i = 0;i < 64;i++) {\r\n        const [s0, s1, s2, s3] = state;\r\n        const _1\r\n            = i < 16 ? (s1 & s2) | (~s1 & s3)\r\n            : i < 32 ? (s1 & s3) | (s2 & ~s3)\r\n            : i < 48 ? s1 ^ s2 ^ s3\r\n            : s2 ^ (s1 | ~s3);\r\n        const _2 = _1 + s0 + T[i] + tmp[K[i]];\r\n        const Si = S[i];\r\n        const _3 = (_2 << Si) | (_2 >>> (32 - Si));\r\n        state[0] = _3 + s1;\r\n        state.unshift(state.pop());\r\n    }\r\n    for(let i = 0;i < 4;i++)\r\n        state[i] = state[i] + stateRef[i] & 0xffffffff;\r\n};\r\n\r\n/**\r\n * @param {number[]} data\r\n * @return {number[]}\r\n */\r\nconst hashMD5 = (data) => {\r\n    const state = [...initState];\r\n    const len = data.length;\r\n    const index = len & 0x3f;\r\n    let paddingLen = (index < 56 ? 56 : 64) - index;// 元は65 : 120 だった。64でもいい?(64でも結果同じ)\r\n    if(paddingLen) {\r\n        data.push(128);\r\n        for(;--paddingLen;)data.push(0);\r\n    }\r\n    data.push(...fromLittleEndian32([len * 8]),0,0,0,0);\r\n    const { length } = data;\r\n    for(let i = 0;i < length;i += 64)\r\n        $(data, 1, state, i);\r\n    return fromLittleEndian32(state);\r\n};\r\n\r\n/**\r\n * MD5\r\n * @param {string} data\r\n * @param {{format?: \"hex\" | \"binary\" | \"dec\"}} [props]\r\n */\r\nexport const md5 = (data, props={}) => hashCore(hashMD5, data, props);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/md5.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "variable",
    "name": "K",
    "memberof": "src/util/string/hash/md5.js",
    "static": true,
    "longname": "src/util/string/hash/md5.js~K",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 515,
    "kind": "variable",
    "name": "S",
    "memberof": "src/util/string/hash/md5.js",
    "static": true,
    "longname": "src/util/string/hash/md5.js~S",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 516,
    "kind": "variable",
    "name": "T",
    "memberof": "src/util/string/hash/md5.js",
    "static": true,
    "longname": "src/util/string/hash/md5.js~T",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 517,
    "kind": "variable",
    "name": "initState",
    "memberof": "src/util/string/hash/md5.js",
    "static": true,
    "longname": "src/util/string/hash/md5.js~initState",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 518,
    "kind": "function",
    "name": "fromLittleEndian32",
    "memberof": "src/util/string/hash/md5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5.js~fromLittleEndian32",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 519,
    "kind": "function",
    "name": "$",
    "memberof": "src/util/string/hash/md5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5.js~$",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "charSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "_i",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 520,
    "kind": "function",
    "name": "hashMD5",
    "memberof": "src/util/string/hash/md5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5.js~hashMD5",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 521,
    "kind": "function",
    "name": "md5",
    "memberof": "src/util/string/hash/md5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5.js~md5",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/md5.js",
    "importStyle": "{md5}",
    "description": "MD5",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{format?: \"hex\" | \"binary\" | \"dec\"}"
        ],
        "spread": false,
        "optional": true,
        "name": "props",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 522,
    "kind": "file",
    "name": "src/util/string/hash/md5_$$.js",
    "content": "/* md5.js - MD5 Message-Digest\r\n * Copyright (C) 1999,2002 Masanao Izumo <iz@onicos.co.jp>\r\n * Version: 2.0.0\r\n * LastModified: May 13 2002\r\n *\r\n * This program is free software.  You can redistribute it and/or modify\r\n * it without any warranty.  This library calculates the MD5 based on RFC1321.\r\n * See RFC1321 for more information and algorism.\r\n */\r\n\r\n/* Interface:\r\n * md5_128bits = MD5_hash(data);\r\n * md5_hexstr = MD5_hexhash(data);\r\n */\r\n\r\n/* ChangeLog\r\n * 2002/05/13: Version 2.0.0 released\r\n * NOTICE: API is changed.\r\n * 2002/04/15: Bug fix about MD5 length.\r\n */\r\n\r\n\r\n//    md5_T[i] = parseInt(Math.abs(Math.sin(i)) * 4294967296.0);\r\nconst MD5_T = [\r\n    0x00000000, 0xd76aa478, 0xe8c7b756, 0x242070db,\r\n    0xc1bdceee, 0xf57c0faf, 0x4787c62a, 0xa8304613,\r\n    0xfd469501, 0x698098d8, 0x8b44f7af, 0xffff5bb1,\r\n    0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,\r\n    0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51,\r\n    0xe9b6c7aa, 0xd62f105d, 0x02441453, 0xd8a1e681,\r\n    0xe7d3fbc8, 0x21e1cde6, 0xc33707d6, 0xf4d50d87,\r\n    0x455a14ed, 0xa9e3e905, 0xfcefa3f8, 0x676f02d9,\r\n    0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,\r\n    0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60,\r\n    0xbebfbc70, 0x289b7ec6, 0xeaa127fa, 0xd4ef3085,\r\n    0x04881d05, 0xd9d4d039, 0xe6db99e5, 0x1fa27cf8,\r\n    0xc4ac5665, 0xf4292244, 0x432aff97, 0xab9423a7,\r\n    0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,\r\n    0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314,\r\n    0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb,\r\n    0xeb86d391\r\n];\r\n\r\nconst MD5_round1 = [\r\n    [0, 7, 1], [1, 12, 2],\r\n    [2, 17, 3], [3, 22, 4],\r\n    [4, 7, 5], [5, 12, 6],\r\n    [6, 17, 7], [7, 22, 8],\r\n    [8, 7, 9], [9, 12, 10],\r\n    [10, 17, 11], [11, 22, 12],\r\n    [12, 7, 13], [13, 12, 14],\r\n    [14, 17, 15], [15, 22, 16]\r\n];\r\nconst MD5_round2 = [\r\n    [1, 5, 17], [6, 9, 18],\r\n    [11, 14, 19], [0, 20, 20],\r\n    [5, 5, 21], [10, 9, 22],\r\n    [15, 14, 23], [4, 20, 24],\r\n    [9, 5, 25], [14, 9, 26],\r\n    [3, 14, 27], [8, 20, 28],\r\n    [13, 5, 29], [2, 9, 30],\r\n    [7, 14, 31], [12, 20, 32]\r\n];\r\nconst MD5_round3 = [\r\n    [5, 4, 33], [8, 11, 34],\r\n    [11, 16, 35], [14, 23, 36],\r\n    [1, 4, 37], [4, 11, 38],\r\n    [7, 16, 39], [10, 23, 40],\r\n    [13, 4, 41], [0, 11, 42],\r\n    [3, 16, 43], [6, 23, 44],\r\n    [9, 4, 45], [12, 11, 46],\r\n    [15, 16, 47], [2, 23, 48]\r\n];\r\nconst MD5_round4 = [\r\n    [0, 6, 49], [7, 10, 50],\r\n    [14, 15, 51], [5, 21, 52],\r\n    [12, 6, 53], [3, 10, 54],\r\n    [10, 15, 55], [1, 21, 56],\r\n    [8, 6, 57], [15, 10, 58],\r\n    [6, 15, 59], [13, 21, 60],\r\n    [4, 6, 61], [11, 10, 62],\r\n    [2, 15, 63], [9, 21, 64]\r\n];\r\n\r\nconst MD5_round = [\r\n    [(x, y, z)=>(x & y) | (~x & z), MD5_round1],\r\n    [(x, y, z)=>(x & z) | (y & ~z), MD5_round2],\r\n    [(x, y, z)=>x ^ y ^ z, MD5_round3],\r\n    [(x, y, z)=>y ^ (x | ~z), MD5_round4]\r\n];\r\n\r\nconst md5_pack = (n32) => (\r\n    String.fromCharCode(n32 & 0xff)\r\n        + String.fromCharCode((n32 >>> 8) & 0xff)\r\n        + String.fromCharCode((n32 >>> 16) & 0xff)\r\n        + String.fromCharCode((n32 >>> 24) & 0xff)\r\n);\r\n\r\nconst MD5_unpack = (s4) => (\r\n    s4.charCodeAt(0)\r\n        | (s4.charCodeAt(1) << 8)\r\n        | (s4.charCodeAt(2) << 16)\r\n        | (s4.charCodeAt(3) << 24)\r\n);\r\n\r\nconst md5_number = (n) => {\r\n    while (n < 0)\r\n        n += 4294967296;\r\n    while (n > 4294967295)\r\n        n -= 4294967296;\r\n    return n;\r\n};\r\nconst md5_apply_round = (x, s, f, abcd, r) => {\r\n    const [a,b,c,d] = abcd;\r\n    const [kk, ss, ii] = r;\r\n    const u = f(s[b], s[c], s[d]);\r\n    let t = s[a] + u + x[kk] + MD5_T[ii];\r\n    t = md5_number(t);\r\n    t = ((t << ss) | (t >>> (32 - ss)));\r\n    t += s[b];\r\n    s[a] = md5_number(t);\r\n};\r\n\r\nconst hashMD5 = (data) => {\r\n    const state = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\r\n    let len = data.length;\r\n    const index = len & 0x3f;\r\n    const padLen = (index < 56) ? (56 - index) : (120 - index);\r\n    if(padLen > 0) {\r\n        data += \"\\x80\";\r\n        for(let i = 0;i < padLen - 1;i++)\r\n            data += \"\\x00\";\r\n    }\r\n    data += md5_pack(len * 8);\r\n    data += md5_pack(0);\r\n    len += padLen + 8;\r\n    const abcd = [0, 1, 2, 3];\r\n    const x = new Array(16);\r\n    const s = new Array(4);\r\n    for(let k = 0;k < len;k += 64) {\r\n        for(let i = 0, j = k;i < 16;i++, j += 4) {\r\n            x[i] = data.charCodeAt(j)\r\n            | (data.charCodeAt(j + 1) << 8)\r\n            | (data.charCodeAt(j + 2) << 16)\r\n            | (data.charCodeAt(j + 3) << 24);\r\n        }\r\n        for(let i = 0;i < 4;i++)\r\n            s[i] = state[i];\r\n        for(let i = 0;i < 4;i++) {\r\n            const [f, r] = MD5_round[i];\r\n            for(let j = 0;j < 16;j++) {\r\n                md5_apply_round(x, s, f, abcd, r[j]);\r\n                const tmp = abcd[0];\r\n                abcd[0] = abcd[3];\r\n                abcd[3] = abcd[2];\r\n                abcd[2] = abcd[1];\r\n                abcd[1] = tmp;\r\n            }\r\n        }\r\n        for(let i = 0;i < 4;i++) {\r\n            state[i] += s[i];\r\n            state[i] = md5_number(state[i]);\r\n        }\r\n    }\r\n    return md5_pack(state[0])\r\n        + md5_pack(state[1])\r\n        + md5_pack(state[2])\r\n        + md5_pack(state[3]);\r\n};\r\n\r\nconst MD5_hexhash = (data) => {\r\n    const bit128 = hashMD5(data);\r\n    let out = \"\";\r\n    for (let i = 0;i < 16;i++) {\r\n        const c = bit128.charCodeAt(i);\r\n        out += \"0123456789abcdef\".charAt((c >> 4) & 0xf);\r\n        out += \"0123456789abcdef\".charAt(c & 0xf);\r\n    }\r\n    return out;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/md5_$$.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 523,
    "kind": "variable",
    "name": "MD5_T",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_T",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 524,
    "kind": "variable",
    "name": "MD5_round1",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_round1",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 525,
    "kind": "variable",
    "name": "MD5_round2",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_round2",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "MD5_round3",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_round3",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "MD5_round4",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_round4",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "MD5_round",
    "memberof": "src/util/string/hash/md5_$$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_round",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "md5_pack",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~md5_pack",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "n32",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 530,
    "kind": "function",
    "name": "MD5_unpack",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_unpack",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "s4",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 531,
    "kind": "function",
    "name": "md5_number",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~md5_number",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 532,
    "kind": "function",
    "name": "md5_apply_round",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~md5_apply_round",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "s",
        "types": [
          "*"
        ]
      },
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "abcd",
        "types": [
          "*"
        ]
      },
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 533,
    "kind": "function",
    "name": "hashMD5",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~hashMD5",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 534,
    "kind": "function",
    "name": "MD5_hexhash",
    "memberof": "src/util/string/hash/md5_$$.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_$$.js~MD5_hexhash",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 535,
    "kind": "file",
    "name": "src/util/string/hash/md5_$.js",
    "content": "\r\n/* eslint-disable */\r\n/*\r\n    MD5\r\n    Copyright (C) 2007 MITSUNARI Shigeo at Cybozu Labs, Inc.\r\n    license:new BSD license\r\n    how to use\r\n    CybozuLabs.MD5.calc(<ascii string>);\r\n    CybozuLabs.MD5.calc(<unicode(UTF16) string>, CybozuLabs.MD5.BY_UTF16);\r\n\r\n    ex. CybozuLabs.MD5.calc(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\r\n*/\r\nvar MD5 = {\r\n    // for Firefox\r\n    int2hex8_Fx: function (x) {\r\n        return this.int2hex8((x[1] * 65536) + x[0]);\r\n    },\r\n\r\n    update_Fx: function (buf, charSize) {\r\n        var aL = this.a_[0];\r\n        var aH = this.a_[1];\r\n        var bL = this.b_[0];\r\n        var bH = this.b_[1];\r\n        var cL = this.c_[0];\r\n        var cH = this.c_[1];\r\n        var dL = this.d_[0];\r\n        var dH = this.d_[1];\r\n        var tmpL0, tmpL1, tmpL2, tmpL3, tmpL4, tmpL5, tmpL6, tmpL7, tmpL8, tmpL9, tmpLa, tmpLb, tmpLc, tmpLd, tmpLe, tmpLf;\r\n        var tmpH0, tmpH1, tmpH2, tmpH3, tmpH4, tmpH5, tmpH6, tmpH7, tmpH8, tmpH9, tmpHa, tmpHb, tmpHc, tmpHd, tmpHe, tmpHf;\r\n        // if (charSize == 1) {\r\n        //     tmpL0 = buf.charCodeAt(0) | (buf.charCodeAt(1) << 8);\r\n        //     tmpH0 = buf.charCodeAt(2) | (buf.charCodeAt(3) << 8);\r\n        //     tmpL1 = buf.charCodeAt(4) | (buf.charCodeAt(5) << 8);\r\n        //     tmpH1 = buf.charCodeAt(6) | (buf.charCodeAt(7) << 8);\r\n        //     tmpL2 = buf.charCodeAt(8) | (buf.charCodeAt(9) << 8);\r\n        //     tmpH2 = buf.charCodeAt(10) | (buf.charCodeAt(11) << 8);\r\n        //     tmpL3 = buf.charCodeAt(12) | (buf.charCodeAt(13) << 8);\r\n        //     tmpH3 = buf.charCodeAt(14) | (buf.charCodeAt(15) << 8);\r\n        //     tmpL4 = buf.charCodeAt(16) | (buf.charCodeAt(17) << 8);\r\n        //     tmpH4 = buf.charCodeAt(18) | (buf.charCodeAt(19) << 8);\r\n        //     tmpL5 = buf.charCodeAt(20) | (buf.charCodeAt(21) << 8);\r\n        //     tmpH5 = buf.charCodeAt(22) | (buf.charCodeAt(23) << 8);\r\n        //     tmpL6 = buf.charCodeAt(24) | (buf.charCodeAt(25) << 8);\r\n        //     tmpH6 = buf.charCodeAt(26) | (buf.charCodeAt(27) << 8);\r\n        //     tmpL7 = buf.charCodeAt(28) | (buf.charCodeAt(29) << 8);\r\n        //     tmpH7 = buf.charCodeAt(30) | (buf.charCodeAt(31) << 8);\r\n        //     tmpL8 = buf.charCodeAt(32) | (buf.charCodeAt(33) << 8);\r\n        //     tmpH8 = buf.charCodeAt(34) | (buf.charCodeAt(35) << 8);\r\n        //     tmpL9 = buf.charCodeAt(36) | (buf.charCodeAt(37) << 8);\r\n        //     tmpH9 = buf.charCodeAt(38) | (buf.charCodeAt(39) << 8);\r\n        //     tmpLa = buf.charCodeAt(40) | (buf.charCodeAt(41) << 8);\r\n        //     tmpHa = buf.charCodeAt(42) | (buf.charCodeAt(43) << 8);\r\n        //     tmpLb = buf.charCodeAt(44) | (buf.charCodeAt(45) << 8);\r\n        //     tmpHb = buf.charCodeAt(46) | (buf.charCodeAt(47) << 8);\r\n        //     tmpLc = buf.charCodeAt(48) | (buf.charCodeAt(49) << 8);\r\n        //     tmpHc = buf.charCodeAt(50) | (buf.charCodeAt(51) << 8);\r\n        //     tmpLd = buf.charCodeAt(52) | (buf.charCodeAt(53) << 8);\r\n        //     tmpHd = buf.charCodeAt(54) | (buf.charCodeAt(55) << 8);\r\n        //     tmpLe = buf.charCodeAt(56) | (buf.charCodeAt(57) << 8);\r\n        //     tmpHe = buf.charCodeAt(58) | (buf.charCodeAt(59) << 8);\r\n        //     tmpLf = buf.charCodeAt(60) | (buf.charCodeAt(61) << 8);\r\n        //     tmpHf = buf.charCodeAt(62) | (buf.charCodeAt(63) << 8);\r\n        // } else {\r\n        //     tmpL0 = buf.charCodeAt(0);\r\n        //     tmpH0 = buf.charCodeAt(1);\r\n        //     tmpL1 = buf.charCodeAt(2);\r\n        //     tmpH1 = buf.charCodeAt(3);\r\n        //     tmpL2 = buf.charCodeAt(4);\r\n        //     tmpH2 = buf.charCodeAt(5);\r\n        //     tmpL3 = buf.charCodeAt(6);\r\n        //     tmpH3 = buf.charCodeAt(7);\r\n        //     tmpL4 = buf.charCodeAt(8);\r\n        //     tmpH4 = buf.charCodeAt(9);\r\n        //     tmpL5 = buf.charCodeAt(10);\r\n        //     tmpH5 = buf.charCodeAt(11);\r\n        //     tmpL6 = buf.charCodeAt(12);\r\n        //     tmpH6 = buf.charCodeAt(13);\r\n        //     tmpL7 = buf.charCodeAt(14);\r\n        //     tmpH7 = buf.charCodeAt(15);\r\n        //     tmpL8 = buf.charCodeAt(16);\r\n        //     tmpH8 = buf.charCodeAt(17);\r\n        //     tmpL9 = buf.charCodeAt(18);\r\n        //     tmpH9 = buf.charCodeAt(19);\r\n        //     tmpLa = buf.charCodeAt(20);\r\n        //     tmpHa = buf.charCodeAt(21);\r\n        //     tmpLb = buf.charCodeAt(22);\r\n        //     tmpHb = buf.charCodeAt(23);\r\n        //     tmpLc = buf.charCodeAt(24);\r\n        //     tmpHc = buf.charCodeAt(25);\r\n        //     tmpLd = buf.charCodeAt(26);\r\n        //     tmpHd = buf.charCodeAt(27);\r\n        //     tmpLe = buf.charCodeAt(28);\r\n        //     tmpHe = buf.charCodeAt(29);\r\n        //     tmpLf = buf.charCodeAt(30);\r\n        //     tmpHf = buf.charCodeAt(31);\r\n        // }\r\n\r\n        // var t;\r\n        // aL += ((bL & cL) | (~bL & dL)) + tmpL0 + 0xa478;\r\n        // aH += ((bH & cH) | (~bH & dH)) + tmpH0 + 0xd76a;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 9) | ((aL << 7) & 65535);\r\n        // aH = (aL >> 9) | ((aH << 7) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & bL) | (~aL & cL)) + tmpL1 + 0xb756;\r\n        // dH += ((aH & bH) | (~aH & cH)) + tmpH1 + 0xe8c7;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 4) | ((dL << 12) & 65535);\r\n        // dH = (dL >> 4) | ((dH << 12) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & aL) | (~dL & bL)) + tmpL2 + 0x70db;\r\n        // cH += ((dH & aH) | (~dH & bH)) + tmpH2 + 0x2420;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 15) | ((cH << 1) & 65535);\r\n        // cH = (cH >> 15) | ((cL << 1) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & dL) | (~cL & aL)) + tmpL3 + 0xceee;\r\n        // bH += ((cH & dH) | (~cH & aH)) + tmpH3 + 0xc1bd;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 10) | ((bH << 6) & 65535);\r\n        // bH = (bH >> 10) | ((bL << 6) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & cL) | (~bL & dL)) + tmpL4 + 0x0faf;\r\n        // aH += ((bH & cH) | (~bH & dH)) + tmpH4 + 0xf57c;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 9) | ((aL << 7) & 65535);\r\n        // aH = (aL >> 9) | ((aH << 7) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & bL) | (~aL & cL)) + tmpL5 + 0xc62a;\r\n        // dH += ((aH & bH) | (~aH & cH)) + tmpH5 + 0x4787;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 4) | ((dL << 12) & 65535);\r\n        // dH = (dL >> 4) | ((dH << 12) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & aL) | (~dL & bL)) + tmpL6 + 0x4613;\r\n        // cH += ((dH & aH) | (~dH & bH)) + tmpH6 + 0xa830;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 15) | ((cH << 1) & 65535);\r\n        // cH = (cH >> 15) | ((cL << 1) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & dL) | (~cL & aL)) + tmpL7 + 0x9501;\r\n        // bH += ((cH & dH) | (~cH & aH)) + tmpH7 + 0xfd46;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 10) | ((bH << 6) & 65535);\r\n        // bH = (bH >> 10) | ((bL << 6) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & cL) | (~bL & dL)) + tmpL8 + 0x98d8;\r\n        // aH += ((bH & cH) | (~bH & dH)) + tmpH8 + 0x6980;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 9) | ((aL << 7) & 65535);\r\n        // aH = (aL >> 9) | ((aH << 7) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & bL) | (~aL & cL)) + tmpL9 + 0xf7af;\r\n        // dH += ((aH & bH) | (~aH & cH)) + tmpH9 + 0x8b44;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 4) | ((dL << 12) & 65535);\r\n        // dH = (dL >> 4) | ((dH << 12) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & aL) | (~dL & bL)) + tmpLa + 0x5bb1;\r\n        // cH += ((dH & aH) | (~dH & bH)) + tmpHa + 0xffff;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 15) | ((cH << 1) & 65535);\r\n        // cH = (cH >> 15) | ((cL << 1) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & dL) | (~cL & aL)) + tmpLb + 0xd7be;\r\n        // bH += ((cH & dH) | (~cH & aH)) + tmpHb + 0x895c;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 10) | ((bH << 6) & 65535);\r\n        // bH = (bH >> 10) | ((bL << 6) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & cL) | (~bL & dL)) + tmpLc + 0x1122;\r\n        // aH += ((bH & cH) | (~bH & dH)) + tmpHc + 0x6b90;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 9) | ((aL << 7) & 65535);\r\n        // aH = (aL >> 9) | ((aH << 7) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & bL) | (~aL & cL)) + tmpLd + 0x7193;\r\n        // dH += ((aH & bH) | (~aH & cH)) + tmpHd + 0xfd98;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 4) | ((dL << 12) & 65535);\r\n        // dH = (dL >> 4) | ((dH << 12) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & aL) | (~dL & bL)) + tmpLe + 0x438e;\r\n        // cH += ((dH & aH) | (~dH & bH)) + tmpHe + 0xa679;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 15) | ((cH << 1) & 65535);\r\n        // cH = (cH >> 15) | ((cL << 1) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & dL) | (~cL & aL)) + tmpLf + 0x0821;\r\n        // bH += ((cH & dH) | (~cH & aH)) + tmpHf + 0x49b4;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 10) | ((bH << 6) & 65535);\r\n        // bH = (bH >> 10) | ((bL << 6) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // ///\r\n        // aL += ((bL & dL) | (cL & ~dL)) + tmpL1 + 0x2562;\r\n        // aH += ((bH & dH) | (cH & ~dH)) + tmpH1 + 0xf61e;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 11) | ((aL << 5) & 65535);\r\n        // aH = (aL >> 11) | ((aH << 5) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & cL) | (bL & ~cL)) + tmpL6 + 0xb340;\r\n        // dH += ((aH & cH) | (bH & ~cH)) + tmpH6 + 0xc040;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 7) | ((dL << 9) & 65535);\r\n        // dH = (dL >> 7) | ((dH << 9) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & bL) | (aL & ~bL)) + tmpLb + 0x5a51;\r\n        // cH += ((dH & bH) | (aH & ~bH)) + tmpHb + 0x265e;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 2) | ((cL << 14) & 65535);\r\n        // cH = (cL >> 2) | ((cH << 14) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & aL) | (dL & ~aL)) + tmpL0 + 0xc7aa;\r\n        // bH += ((cH & aH) | (dH & ~aH)) + tmpH0 + 0xe9b6;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 12) | ((bH << 4) & 65535);\r\n        // bH = (bH >> 12) | ((bL << 4) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & dL) | (cL & ~dL)) + tmpL5 + 0x105d;\r\n        // aH += ((bH & dH) | (cH & ~dH)) + tmpH5 + 0xd62f;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 11) | ((aL << 5) & 65535);\r\n        // aH = (aL >> 11) | ((aH << 5) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & cL) | (bL & ~cL)) + tmpLa + 0x1453;\r\n        // dH += ((aH & cH) | (bH & ~cH)) + tmpHa + 0x0244;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 7) | ((dL << 9) & 65535);\r\n        // dH = (dL >> 7) | ((dH << 9) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & bL) | (aL & ~bL)) + tmpLf + 0xe681;\r\n        // cH += ((dH & bH) | (aH & ~bH)) + tmpHf + 0xd8a1;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 2) | ((cL << 14) & 65535);\r\n        // cH = (cL >> 2) | ((cH << 14) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & aL) | (dL & ~aL)) + tmpL4 + 0xfbc8;\r\n        // bH += ((cH & aH) | (dH & ~aH)) + tmpH4 + 0xe7d3;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 12) | ((bH << 4) & 65535);\r\n        // bH = (bH >> 12) | ((bL << 4) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & dL) | (cL & ~dL)) + tmpL9 + 0xcde6;\r\n        // aH += ((bH & dH) | (cH & ~dH)) + tmpH9 + 0x21e1;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 11) | ((aL << 5) & 65535);\r\n        // aH = (aL >> 11) | ((aH << 5) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & cL) | (bL & ~cL)) + tmpLe + 0x07d6;\r\n        // dH += ((aH & cH) | (bH & ~cH)) + tmpHe + 0xc337;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 7) | ((dL << 9) & 65535);\r\n        // dH = (dL >> 7) | ((dH << 9) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & bL) | (aL & ~bL)) + tmpL3 + 0x0d87;\r\n        // cH += ((dH & bH) | (aH & ~bH)) + tmpH3 + 0xf4d5;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 2) | ((cL << 14) & 65535);\r\n        // cH = (cL >> 2) | ((cH << 14) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & aL) | (dL & ~aL)) + tmpL8 + 0x14ed;\r\n        // bH += ((cH & aH) | (dH & ~aH)) + tmpH8 + 0x455a;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 12) | ((bH << 4) & 65535);\r\n        // bH = (bH >> 12) | ((bL << 4) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL & dL) | (cL & ~dL)) + tmpLd + 0xe905;\r\n        // aH += ((bH & dH) | (cH & ~dH)) + tmpHd + 0xa9e3;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 11) | ((aL << 5) & 65535);\r\n        // aH = (aL >> 11) | ((aH << 5) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL & cL) | (bL & ~cL)) + tmpL2 + 0xa3f8;\r\n        // dH += ((aH & cH) | (bH & ~cH)) + tmpH2 + 0xfcef;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 7) | ((dL << 9) & 65535);\r\n        // dH = (dL >> 7) | ((dH << 9) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL & bL) | (aL & ~bL)) + tmpL7 + 0x02d9;\r\n        // cH += ((dH & bH) | (aH & ~bH)) + tmpH7 + 0x676f;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 2) | ((cL << 14) & 65535);\r\n        // cH = (cL >> 2) | ((cH << 14) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL & aL) | (dL & ~aL)) + tmpLc + 0x4c8a;\r\n        // bH += ((cH & aH) | (dH & ~aH)) + tmpHc + 0x8d2a;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 12) | ((bH << 4) & 65535);\r\n        // bH = (bH >> 12) | ((bL << 4) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // ///\r\n        // aL += ((bL ^ cL) ^ dL) + tmpL5 + 0x3942;\r\n        // aH += ((bH ^ cH) ^ dH) + tmpH5 + 0xfffa;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 12) | ((aL << 4) & 65535);\r\n        // aH = (aL >> 12) | ((aH << 4) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL ^ bL) ^ cL) + tmpL8 + 0xf681;\r\n        // dH += ((aH ^ bH) ^ cH) + tmpH8 + 0x8771;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 5) | ((dL << 11) & 65535);\r\n        // dH = (dL >> 5) | ((dH << 11) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL ^ aL) ^ bL) + tmpLb + 0x6122;\r\n        // cH += ((dH ^ aH) ^ bH) + tmpHb + 0x6d9d;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 16) | ((cH << 0) & 65535);\r\n        // cH = (cH >> 16) | ((cL << 0) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL ^ dL) ^ aL) + tmpLe + 0x380c;\r\n        // bH += ((cH ^ dH) ^ aH) + tmpHe + 0xfde5;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 9) | ((bH << 7) & 65535);\r\n        // bH = (bH >> 9) | ((bL << 7) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL ^ cL) ^ dL) + tmpL1 + 0xea44;\r\n        // aH += ((bH ^ cH) ^ dH) + tmpH1 + 0xa4be;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 12) | ((aL << 4) & 65535);\r\n        // aH = (aL >> 12) | ((aH << 4) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL ^ bL) ^ cL) + tmpL4 + 0xcfa9;\r\n        // dH += ((aH ^ bH) ^ cH) + tmpH4 + 0x4bde;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 5) | ((dL << 11) & 65535);\r\n        // dH = (dL >> 5) | ((dH << 11) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL ^ aL) ^ bL) + tmpL7 + 0x4b60;\r\n        // cH += ((dH ^ aH) ^ bH) + tmpH7 + 0xf6bb;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 16) | ((cH << 0) & 65535);\r\n        // cH = (cH >> 16) | ((cL << 0) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL ^ dL) ^ aL) + tmpLa + 0xbc70;\r\n        // bH += ((cH ^ dH) ^ aH) + tmpHa + 0xbebf;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 9) | ((bH << 7) & 65535);\r\n        // bH = (bH >> 9) | ((bL << 7) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL ^ cL) ^ dL) + tmpLd + 0x7ec6;\r\n        // aH += ((bH ^ cH) ^ dH) + tmpHd + 0x289b;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 12) | ((aL << 4) & 65535);\r\n        // aH = (aL >> 12) | ((aH << 4) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL ^ bL) ^ cL) + tmpL0 + 0x27fa;\r\n        // dH += ((aH ^ bH) ^ cH) + tmpH0 + 0xeaa1;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 5) | ((dL << 11) & 65535);\r\n        // dH = (dL >> 5) | ((dH << 11) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL ^ aL) ^ bL) + tmpL3 + 0x3085;\r\n        // cH += ((dH ^ aH) ^ bH) + tmpH3 + 0xd4ef;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 16) | ((cH << 0) & 65535);\r\n        // cH = (cH >> 16) | ((cL << 0) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL ^ dL) ^ aL) + tmpL6 + 0x1d05;\r\n        // bH += ((cH ^ dH) ^ aH) + tmpH6 + 0x0488;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 9) | ((bH << 7) & 65535);\r\n        // bH = (bH >> 9) | ((bL << 7) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += ((bL ^ cL) ^ dL) + tmpL9 + 0xd039;\r\n        // aH += ((bH ^ cH) ^ dH) + tmpH9 + 0xd9d4;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 12) | ((aL << 4) & 65535);\r\n        // aH = (aL >> 12) | ((aH << 4) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += ((aL ^ bL) ^ cL) + tmpLc + 0x99e5;\r\n        // dH += ((aH ^ bH) ^ cH) + tmpHc + 0xe6db;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 5) | ((dL << 11) & 65535);\r\n        // dH = (dL >> 5) | ((dH << 11) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += ((dL ^ aL) ^ bL) + tmpLf + 0x7cf8;\r\n        // cH += ((dH ^ aH) ^ bH) + tmpHf + 0x1fa2;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cL >> 16) | ((cH << 0) & 65535);\r\n        // cH = (cH >> 16) | ((cL << 0) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += ((cL ^ dL) ^ aL) + tmpL2 + 0x5665;\r\n        // bH += ((cH ^ dH) ^ aH) + tmpH2 + 0xc4ac;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 9) | ((bH << 7) & 65535);\r\n        // bH = (bH >> 9) | ((bL << 7) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // ///\r\n        // aL += (cL ^ ((65535 - dL) | bL)) + tmpL0 + 0x2244;\r\n        // aH += (cH ^ ((65535 - dH) | bH)) + tmpH0 + 0xf429;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 10) | ((aL << 6) & 65535);\r\n        // aH = (aL >> 10) | ((aH << 6) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += (bL ^ ((65535 - cL) | aL)) + tmpL7 + 0xff97;\r\n        // dH += (bH ^ ((65535 - cH) | aH)) + tmpH7 + 0x432a;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 6) | ((dL << 10) & 65535);\r\n        // dH = (dL >> 6) | ((dH << 10) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += (aL ^ ((65535 - bL) | dL)) + tmpLe + 0x23a7;\r\n        // cH += (aH ^ ((65535 - bH) | dH)) + tmpHe + 0xab94;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 1) | ((cL << 15) & 65535);\r\n        // cH = (cL >> 1) | ((cH << 15) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += (dL ^ ((65535 - aL) | cL)) + tmpL5 + 0xa039;\r\n        // bH += (dH ^ ((65535 - aH) | cH)) + tmpH5 + 0xfc93;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 11) | ((bH << 5) & 65535);\r\n        // bH = (bH >> 11) | ((bL << 5) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += (cL ^ ((65535 - dL) | bL)) + tmpLc + 0x59c3;\r\n        // aH += (cH ^ ((65535 - dH) | bH)) + tmpHc + 0x655b;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 10) | ((aL << 6) & 65535);\r\n        // aH = (aL >> 10) | ((aH << 6) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += (bL ^ ((65535 - cL) | aL)) + tmpL3 + 0xcc92;\r\n        // dH += (bH ^ ((65535 - cH) | aH)) + tmpH3 + 0x8f0c;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 6) | ((dL << 10) & 65535);\r\n        // dH = (dL >> 6) | ((dH << 10) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += (aL ^ ((65535 - bL) | dL)) + tmpLa + 0xf47d;\r\n        // cH += (aH ^ ((65535 - bH) | dH)) + tmpHa + 0xffef;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 1) | ((cL << 15) & 65535);\r\n        // cH = (cL >> 1) | ((cH << 15) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += (dL ^ ((65535 - aL) | cL)) + tmpL1 + 0x5dd1;\r\n        // bH += (dH ^ ((65535 - aH) | cH)) + tmpH1 + 0x8584;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 11) | ((bH << 5) & 65535);\r\n        // bH = (bH >> 11) | ((bL << 5) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += (cL ^ ((65535 - dL) | bL)) + tmpL8 + 0x7e4f;\r\n        // aH += (cH ^ ((65535 - dH) | bH)) + tmpH8 + 0x6fa8;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 10) | ((aL << 6) & 65535);\r\n        // aH = (aL >> 10) | ((aH << 6) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += (bL ^ ((65535 - cL) | aL)) + tmpLf + 0xe6e0;\r\n        // dH += (bH ^ ((65535 - cH) | aH)) + tmpHf + 0xfe2c;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 6) | ((dL << 10) & 65535);\r\n        // dH = (dL >> 6) | ((dH << 10) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += (aL ^ ((65535 - bL) | dL)) + tmpL6 + 0x4314;\r\n        // cH += (aH ^ ((65535 - bH) | dH)) + tmpH6 + 0xa301;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 1) | ((cL << 15) & 65535);\r\n        // cH = (cL >> 1) | ((cH << 15) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += (dL ^ ((65535 - aL) | cL)) + tmpLd + 0x11a1;\r\n        // bH += (dH ^ ((65535 - aH) | cH)) + tmpHd + 0x4e08;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 11) | ((bH << 5) & 65535);\r\n        // bH = (bH >> 11) | ((bL << 5) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // aL += (cL ^ ((65535 - dL) | bL)) + tmpL4 + 0x7e82;\r\n        // aH += (cH ^ ((65535 - dH) | bH)) + tmpH4 + 0xf753;\r\n        // aH += aL >> 16;\r\n        // aL &= 65535;\r\n        // aH &= 65535;\r\n        // t = (aH >> 10) | ((aL << 6) & 65535);\r\n        // aH = (aL >> 10) | ((aH << 6) & 65535);\r\n        // aL = t + bL;\r\n        // aH += bH;\r\n        // if (aL > 65535) {\r\n        //     aL &= 65535;\r\n        //     aH++;\r\n        // }\r\n        // aH &= 65535;\r\n        // dL += (bL ^ ((65535 - cL) | aL)) + tmpLb + 0xf235;\r\n        // dH += (bH ^ ((65535 - cH) | aH)) + tmpHb + 0xbd3a;\r\n        // dH += dL >> 16;\r\n        // dL &= 65535;\r\n        // dH &= 65535;\r\n        // t = (dH >> 6) | ((dL << 10) & 65535);\r\n        // dH = (dL >> 6) | ((dH << 10) & 65535);\r\n        // dL = t + aL;\r\n        // dH += aH;\r\n        // if (dL > 65535) {\r\n        //     dL &= 65535;\r\n        //     dH++;\r\n        // }\r\n        // dH &= 65535;\r\n        // cL += (aL ^ ((65535 - bL) | dL)) + tmpL2 + 0xd2bb;\r\n        // cH += (aH ^ ((65535 - bH) | dH)) + tmpH2 + 0x2ad7;\r\n        // cH += cL >> 16;\r\n        // cL &= 65535;\r\n        // cH &= 65535;\r\n        // t = (cH >> 1) | ((cL << 15) & 65535);\r\n        // cH = (cL >> 1) | ((cH << 15) & 65535);\r\n        // cL = t + dL;\r\n        // cH += dH;\r\n        // if (cL > 65535) {\r\n        //     cL &= 65535;\r\n        //     cH++;\r\n        // }\r\n        // cH &= 65535;\r\n        // bL += (dL ^ ((65535 - aL) | cL)) + tmpL9 + 0xd391;\r\n        // bH += (dH ^ ((65535 - aH) | cH)) + tmpH9 + 0xeb86;\r\n        // bH += bL >> 16;\r\n        // bL &= 65535;\r\n        // bH &= 65535;\r\n        // t = (bL >> 11) | ((bH << 5) & 65535);\r\n        // bH = (bH >> 11) | ((bL << 5) & 65535);\r\n        // bL = t + cL;\r\n        // bH += cH;\r\n        // if (bL > 65535) {\r\n        //     bL &= 65535;\r\n        //     bH++;\r\n        // }\r\n        // bH &= 65535;\r\n        // ///\r\n        // t = this.a_[0] += aL;\r\n        // this.a_[1] += aH;\r\n        // if (t > 65535) {\r\n        //     this.a_[0] -= 65536;\r\n        //     this.a_[1]++;\r\n        // }\r\n        // this.a_[1] &= 65535;\r\n        // t = this.b_[0] += bL;\r\n        // this.b_[1] += bH;\r\n        // if (t > 65535) {\r\n        //     this.b_[0] -= 65536;\r\n        //     this.b_[1]++;\r\n        // }\r\n        // this.b_[1] &= 65535;\r\n        // t = this.c_[0] += cL;\r\n        // this.c_[1] += cH;\r\n        // if (t > 65535) {\r\n        //     this.c_[0] -= 65536;\r\n        //     this.c_[1]++;\r\n        // }\r\n        // this.c_[1] &= 65535;\r\n        // t = this.d_[0] += dL;\r\n        // this.d_[1] += dH;\r\n        // if (t > 65535) {\r\n        //     this.d_[0] -= 65536;\r\n        //     this.d_[1]++;\r\n        // }\r\n        // this.d_[1] &= 65535;\r\n    },\r\n\r\n    /* sprintf(buf, \"%08x\", i32); */\r\n    int2hex8: function (i32) {\r\n        var i, c, ret = \"\";\r\n        var hex = \"0123456789abcdef\";\r\n        for (i = 0; i < 4; i++) {\r\n            c = i32 >>> (i * 8);\r\n            ret += hex.charAt((c >> 4) & 15);\r\n            ret += hex.charAt(c & 15);\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    update_std: function (buf, charSize) {\r\n        var a = this.a_,\r\n            b = this.b_,\r\n            c = this.c_,\r\n            d = this.d_;\r\n        var tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmpa, tmpb, tmpc, tmpd, tmpe, tmpf;\r\n        // if (charSize == 1) {\r\n        //     tmp0 = buf.charCodeAt(0) | (buf.charCodeAt(1) << 8) | (buf.charCodeAt(2) << 16) | (buf.charCodeAt(3) << 24);\r\n        //     tmp1 = buf.charCodeAt(4) | (buf.charCodeAt(5) << 8) | (buf.charCodeAt(6) << 16) | (buf.charCodeAt(7) << 24);\r\n        //     tmp2 = buf.charCodeAt(8) | (buf.charCodeAt(9) << 8) | (buf.charCodeAt(10) << 16) | (buf.charCodeAt(11) << 24);\r\n        //     tmp3 = buf.charCodeAt(12) | (buf.charCodeAt(13) << 8) | (buf.charCodeAt(14) << 16) | (buf.charCodeAt(15) << 24);\r\n        //     tmp4 = buf.charCodeAt(16) | (buf.charCodeAt(17) << 8) | (buf.charCodeAt(18) << 16) | (buf.charCodeAt(19) << 24);\r\n        //     tmp5 = buf.charCodeAt(20) | (buf.charCodeAt(21) << 8) | (buf.charCodeAt(22) << 16) | (buf.charCodeAt(23) << 24);\r\n        //     tmp6 = buf.charCodeAt(24) | (buf.charCodeAt(25) << 8) | (buf.charCodeAt(26) << 16) | (buf.charCodeAt(27) << 24);\r\n        //     tmp7 = buf.charCodeAt(28) | (buf.charCodeAt(29) << 8) | (buf.charCodeAt(30) << 16) | (buf.charCodeAt(31) << 24);\r\n        //     tmp8 = buf.charCodeAt(32) | (buf.charCodeAt(33) << 8) | (buf.charCodeAt(34) << 16) | (buf.charCodeAt(35) << 24);\r\n        //     tmp9 = buf.charCodeAt(36) | (buf.charCodeAt(37) << 8) | (buf.charCodeAt(38) << 16) | (buf.charCodeAt(39) << 24);\r\n        //     tmpa = buf.charCodeAt(40) | (buf.charCodeAt(41) << 8) | (buf.charCodeAt(42) << 16) | (buf.charCodeAt(43) << 24);\r\n        //     tmpb = buf.charCodeAt(44) | (buf.charCodeAt(45) << 8) | (buf.charCodeAt(46) << 16) | (buf.charCodeAt(47) << 24);\r\n        //     tmpc = buf.charCodeAt(48) | (buf.charCodeAt(49) << 8) | (buf.charCodeAt(50) << 16) | (buf.charCodeAt(51) << 24);\r\n        //     tmpd = buf.charCodeAt(52) | (buf.charCodeAt(53) << 8) | (buf.charCodeAt(54) << 16) | (buf.charCodeAt(55) << 24);\r\n        //     tmpe = buf.charCodeAt(56) | (buf.charCodeAt(57) << 8) | (buf.charCodeAt(58) << 16) | (buf.charCodeAt(59) << 24);\r\n        //     tmpf = buf.charCodeAt(60) | (buf.charCodeAt(61) << 8) | (buf.charCodeAt(62) << 16) | (buf.charCodeAt(63) << 24);\r\n        // } else {\r\n        //     tmp0 = buf.charCodeAt(0) | (buf.charCodeAt(1) << 16);\r\n        //     tmp1 = buf.charCodeAt(2) | (buf.charCodeAt(3) << 16);\r\n        //     tmp2 = buf.charCodeAt(4) | (buf.charCodeAt(5) << 16);\r\n        //     tmp3 = buf.charCodeAt(6) | (buf.charCodeAt(7) << 16);\r\n        //     tmp4 = buf.charCodeAt(8) | (buf.charCodeAt(9) << 16);\r\n        //     tmp5 = buf.charCodeAt(10) | (buf.charCodeAt(11) << 16);\r\n        //     tmp6 = buf.charCodeAt(12) | (buf.charCodeAt(13) << 16);\r\n        //     tmp7 = buf.charCodeAt(14) | (buf.charCodeAt(15) << 16);\r\n        //     tmp8 = buf.charCodeAt(16) | (buf.charCodeAt(17) << 16);\r\n        //     tmp9 = buf.charCodeAt(18) | (buf.charCodeAt(19) << 16);\r\n        //     tmpa = buf.charCodeAt(20) | (buf.charCodeAt(21) << 16);\r\n        //     tmpb = buf.charCodeAt(22) | (buf.charCodeAt(23) << 16);\r\n        //     tmpc = buf.charCodeAt(24) | (buf.charCodeAt(25) << 16);\r\n        //     tmpd = buf.charCodeAt(26) | (buf.charCodeAt(27) << 16);\r\n        //     tmpe = buf.charCodeAt(28) | (buf.charCodeAt(29) << 16);\r\n        //     tmpf = buf.charCodeAt(30) | (buf.charCodeAt(31) << 16);\r\n        // }\r\n\r\n        // a += tmp0 + 0xd76aa478 + ((b & c) | (~b & d));\r\n        // a = b + ((a << 7) | (a >>> 25));\r\n        // d += tmp1 + 0xe8c7b756 + ((a & b) | (~a & c));\r\n        // d = a + ((d << 12) | (d >>> 20));\r\n        // c += tmp2 + 0x242070db + ((d & a) | (~d & b));\r\n        // c = d + ((c << 17) | (c >>> 15));\r\n        // b += tmp3 + 0xc1bdceee + ((c & d) | (~c & a));\r\n        // b = c + ((b << 22) | (b >>> 10));\r\n        // a += tmp4 + 0xf57c0faf + ((b & c) | (~b & d));\r\n        // a = b + ((a << 7) | (a >>> 25));\r\n        // d += tmp5 + 0x4787c62a + ((a & b) | (~a & c));\r\n        // d = a + ((d << 12) | (d >>> 20));\r\n        // c += tmp6 + 0xa8304613 + ((d & a) | (~d & b));\r\n        // c = d + ((c << 17) | (c >>> 15));\r\n        // b += tmp7 + 0xfd469501 + ((c & d) | (~c & a));\r\n        // b = c + ((b << 22) | (b >>> 10));\r\n        // a += tmp8 + 0x698098d8 + ((b & c) | (~b & d));\r\n        // a = b + ((a << 7) | (a >>> 25));\r\n        // d += tmp9 + 0x8b44f7af + ((a & b) | (~a & c));\r\n        // d = a + ((d << 12) | (d >>> 20));\r\n        // c += tmpa + 0xffff5bb1 + ((d & a) | (~d & b));\r\n        // c = d + ((c << 17) | (c >>> 15));\r\n        // b += tmpb + 0x895cd7be + ((c & d) | (~c & a));\r\n        // b = c + ((b << 22) | (b >>> 10));\r\n        // a += tmpc + 0x6b901122 + ((b & c) | (~b & d));\r\n        // a = b + ((a << 7) | (a >>> 25));\r\n        // d += tmpd + 0xfd987193 + ((a & b) | (~a & c));\r\n        // d = a + ((d << 12) | (d >>> 20));\r\n        // c += tmpe + 0xa679438e + ((d & a) | (~d & b));\r\n        // c = d + ((c << 17) | (c >>> 15));\r\n        // b += tmpf + 0x49b40821 + ((c & d) | (~c & a));\r\n        // b = c + ((b << 22) | (b >>> 10));\r\n        // a += tmp1 + 0xf61e2562 + ((b & d) | (c & ~d));\r\n        // a = b + ((a << 5) | (a >>> 27));\r\n        // d += tmp6 + 0xc040b340 + ((a & c) | (b & ~c));\r\n        // d = a + ((d << 9) | (d >>> 23));\r\n        // c += tmpb + 0x265e5a51 + ((d & b) | (a & ~b));\r\n        // c = d + ((c << 14) | (c >>> 18));\r\n        // b += tmp0 + 0xe9b6c7aa + ((c & a) | (d & ~a));\r\n        // b = c + ((b << 20) | (b >>> 12));\r\n        // a += tmp5 + 0xd62f105d + ((b & d) | (c & ~d));\r\n        // a = b + ((a << 5) | (a >>> 27));\r\n        // d += tmpa + 0x02441453 + ((a & c) | (b & ~c));\r\n        // d = a + ((d << 9) | (d >>> 23));\r\n        // c += tmpf + 0xd8a1e681 + ((d & b) | (a & ~b));\r\n        // c = d + ((c << 14) | (c >>> 18));\r\n        // b += tmp4 + 0xe7d3fbc8 + ((c & a) | (d & ~a));\r\n        // b = c + ((b << 20) | (b >>> 12));\r\n        // a += tmp9 + 0x21e1cde6 + ((b & d) | (c & ~d));\r\n        // a = b + ((a << 5) | (a >>> 27));\r\n        // d += tmpe + 0xc33707d6 + ((a & c) | (b & ~c));\r\n        // d = a + ((d << 9) | (d >>> 23));\r\n        // c += tmp3 + 0xf4d50d87 + ((d & b) | (a & ~b));\r\n        // c = d + ((c << 14) | (c >>> 18));\r\n        // b += tmp8 + 0x455a14ed + ((c & a) | (d & ~a));\r\n        // b = c + ((b << 20) | (b >>> 12));\r\n        // a += tmpd + 0xa9e3e905 + ((b & d) | (c & ~d));\r\n        // a = b + ((a << 5) | (a >>> 27));\r\n        // d += tmp2 + 0xfcefa3f8 + ((a & c) | (b & ~c));\r\n        // d = a + ((d << 9) | (d >>> 23));\r\n        // c += tmp7 + 0x676f02d9 + ((d & b) | (a & ~b));\r\n        // c = d + ((c << 14) | (c >>> 18));\r\n        // b += tmpc + 0x8d2a4c8a + ((c & a) | (d & ~a));\r\n        // b = c + ((b << 20) | (b >>> 12));\r\n        // a += tmp5 + 0xfffa3942 + ((b ^ c) ^ d);\r\n        // a = b + ((a << 4) | (a >>> 28));\r\n        // d += tmp8 + 0x8771f681 + ((a ^ b) ^ c);\r\n        // d = a + ((d << 11) | (d >>> 21));\r\n        // c += tmpb + 0x6d9d6122 + ((d ^ a) ^ b);\r\n        // c = d + ((c << 16) | (c >>> 16));\r\n        // b += tmpe + 0xfde5380c + ((c ^ d) ^ a);\r\n        // b = c + ((b << 23) | (b >>> 9));\r\n        // a += tmp1 + 0xa4beea44 + ((b ^ c) ^ d);\r\n        // a = b + ((a << 4) | (a >>> 28));\r\n        // d += tmp4 + 0x4bdecfa9 + ((a ^ b) ^ c);\r\n        // d = a + ((d << 11) | (d >>> 21));\r\n        // c += tmp7 + 0xf6bb4b60 + ((d ^ a) ^ b);\r\n        // c = d + ((c << 16) | (c >>> 16));\r\n        // b += tmpa + 0xbebfbc70 + ((c ^ d) ^ a);\r\n        // b = c + ((b << 23) | (b >>> 9));\r\n        // a += tmpd + 0x289b7ec6 + ((b ^ c) ^ d);\r\n        // a = b + ((a << 4) | (a >>> 28));\r\n        // d += tmp0 + 0xeaa127fa + ((a ^ b) ^ c);\r\n        // d = a + ((d << 11) | (d >>> 21));\r\n        // c += tmp3 + 0xd4ef3085 + ((d ^ a) ^ b);\r\n        // c = d + ((c << 16) | (c >>> 16));\r\n        // b += tmp6 + 0x04881d05 + ((c ^ d) ^ a);\r\n        // b = c + ((b << 23) | (b >>> 9));\r\n        // a += tmp9 + 0xd9d4d039 + ((b ^ c) ^ d);\r\n        // a = b + ((a << 4) | (a >>> 28));\r\n        // d += tmpc + 0xe6db99e5 + ((a ^ b) ^ c);\r\n        // d = a + ((d << 11) | (d >>> 21));\r\n        // c += tmpf + 0x1fa27cf8 + ((d ^ a) ^ b);\r\n        // c = d + ((c << 16) | (c >>> 16));\r\n        // b += tmp2 + 0xc4ac5665 + ((c ^ d) ^ a);\r\n        // b = c + ((b << 23) | (b >>> 9));\r\n        // a += tmp0 + 0xf4292244 + (c ^ (~d | b));\r\n        // a = b + ((a << 6) | (a >>> 26));\r\n        // d += tmp7 + 0x432aff97 + (b ^ (~c | a));\r\n        // d = a + ((d << 10) | (d >>> 22));\r\n        // c += tmpe + 0xab9423a7 + (a ^ (~b | d));\r\n        // c = d + ((c << 15) | (c >>> 17));\r\n        // b += tmp5 + 0xfc93a039 + (d ^ (~a | c));\r\n        // b = c + ((b << 21) | (b >>> 11));\r\n        // a += tmpc + 0x655b59c3 + (c ^ (~d | b));\r\n        // a = b + ((a << 6) | (a >>> 26));\r\n        // d += tmp3 + 0x8f0ccc92 + (b ^ (~c | a));\r\n        // d = a + ((d << 10) | (d >>> 22));\r\n        // c += tmpa + 0xffeff47d + (a ^ (~b | d));\r\n        // c = d + ((c << 15) | (c >>> 17));\r\n        // b += tmp1 + 0x85845dd1 + (d ^ (~a | c));\r\n        // b = c + ((b << 21) | (b >>> 11));\r\n        // a += tmp8 + 0x6fa87e4f + (c ^ (~d | b));\r\n        // a = b + ((a << 6) | (a >>> 26));\r\n        // d += tmpf + 0xfe2ce6e0 + (b ^ (~c | a));\r\n        // d = a + ((d << 10) | (d >>> 22));\r\n        // c += tmp6 + 0xa3014314 + (a ^ (~b | d));\r\n        // c = d + ((c << 15) | (c >>> 17));\r\n        // b += tmpd + 0x4e0811a1 + (d ^ (~a | c));\r\n        // b = c + ((b << 21) | (b >>> 11));\r\n        // a += tmp4 + 0xf7537e82 + (c ^ (~d | b));\r\n        // a = b + ((a << 6) | (a >>> 26));\r\n        // d += tmpb + 0xbd3af235 + (b ^ (~c | a));\r\n        // d = a + ((d << 10) | (d >>> 22));\r\n        // c += tmp2 + 0x2ad7d2bb + (a ^ (~b | d));\r\n        // c = d + ((c << 15) | (c >>> 17));\r\n        // b += tmp9 + 0xeb86d391 + (d ^ (~a | c));\r\n        // b = c + ((b << 21) | (b >>> 11));\r\n\r\n        // this.a_ = (this.a_ + a) & 0xffffffff;\r\n        // this.b_ = (this.b_ + b) & 0xffffffff;\r\n        // this.c_ = (this.c_ + c) & 0xffffffff;\r\n        // this.d_ = (this.d_ + d) & 0xffffffff;\r\n    },\r\n\r\n    fillzero(size) {\r\n        var buf = \"\";\r\n        for (var i = 0; i < size; i++) {\r\n            buf += \"\\x00\";\r\n        }\r\n        return buf;\r\n    },\r\n    main(buf=\"\", bufSize=buf.length, update=\"update_std\", self, charSize) {\r\n        if (charSize == 1) {\r\n            var totalBitSize = bufSize * 8;\r\n            while (bufSize >= 64) {\r\n                self[update](buf, charSize);\r\n                buf = buf.substr(64);\r\n                bufSize -= 64;\r\n            }\r\n            buf += \"\\x80\";\r\n            if (bufSize >= 56) {\r\n                buf += this.fillzero(63 - bufSize);\r\n                self[update](buf, charSize);\r\n                buf = this.fillzero(56);\r\n            } else {\r\n                buf += this.fillzero(55 - bufSize);\r\n            }\r\n            buf += String.fromCharCode(totalBitSize & 0xff, (totalBitSize >>> 8) & 0xff, (totalBitSize >>> 16) & 0xff, totalBitSize >>> 24);\r\n            buf += \"\\x00\\x00\\x00\\x00\"; // in stead of (totalBitSize) >> 32\r\n            self[update](buf, charSize);\r\n        } else {\r\n            /* charSize == 2 */\r\n            var totalBitSize = bufSize * 16;\r\n            while (bufSize >= 32) {\r\n                self[update](buf, charSize);\r\n                buf = buf.substr(32);\r\n                bufSize -= 32;\r\n            }\r\n            buf += \"\\x80\";\r\n            if (bufSize >= 28) {\r\n                buf += this.fillzero(31 - bufSize);\r\n                self[update](buf, charSize);\r\n                buf = this.fillzero(28);\r\n            } else {\r\n                buf += this.fillzero(27 - bufSize);\r\n            }\r\n            buf += String.fromCharCode(totalBitSize & 0xffff, totalBitSize >>> 16);\r\n            buf += \"\\x00\\x00\"; // in stead of (totalBitSize) >> 32\r\n            self[update](buf, charSize);\r\n        }\r\n    },\r\n\r\n    VERSION: \"1.0\",\r\n    BY_ASCII: 0,\r\n    BY_UTF16: 1,\r\n\r\n    calc_Fx(msg, mode) {\r\n        var charSize = (arguments.length == 2 && mode == this.BY_UTF16) ? 2 : 1;\r\n        this.a_ = [0x2301, 0x6745];\r\n        this.b_ = [0xab89, 0xefcd];\r\n        this.c_ = [0xdcfe, 0x98ba];\r\n        this.d_ = [0x5476, 0x1032];\r\n        this.main(msg, msg.length, \"update_Fx\", this, charSize);\r\n        return this.int2hex8_Fx(this.a_) + this.int2hex8_Fx(this.b_) + this.int2hex8_Fx(this.c_) + this.int2hex8_Fx(this.d_);\r\n    },\r\n\r\n    calc_std(msg, mode) {\r\n        var charSize = (arguments.length == 2 && mode == this.BY_UTF16) ? 2 : 1;\r\n        this.a_ = 0x67452301;\r\n        this.b_ = 0xefcdab89;\r\n        this.c_ = 0x98badcfe;\r\n        this.d_ = 0x10325476;\r\n        this.main(msg, msg.length, \"update_std\", this, charSize);\r\n        return this.int2hex8(this.a_) + this.int2hex8(this.b_) + this.int2hex8(this.c_) + this.int2hex8(this.d_);\r\n    }\r\n}; // end of MD5\r\n\r\nnew function () {\r\n    CybozuLabs.MD5.calc = navigator.userAgent.match(/Firefox/) ?\r\n        CybozuLabs.MD5.calc_Fx : CybozuLabs.MD5.calc_std;\r\n};",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/md5_$.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 536,
    "kind": "variable",
    "name": "MD5",
    "memberof": "src/util/string/hash/md5_$.js",
    "static": true,
    "longname": "src/util/string/hash/md5_$.js~MD5",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{\"int2hex8_Fx\": *, \"update_Fx\": *, \"int2hex8\": *, \"update_std\": *, \"fillzero\": function, \"main\": function, \"VERSION\": string, \"BY_ASCII\": *, \"BY_UTF16\": number, \"calc_Fx\": function, \"calc_std\": function}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 537,
    "kind": "file",
    "name": "src/util/string/hash/md5_dev_wip.js",
    "content": "\r\nconst $=(buf, charSize, state)=>{\r\n    const tmp = new Array(16);\r\n    if(charSize === 1) {\r\n        let n = 0, j = 0;\r\n        for(let i = 16;i--;) {\r\n            tmp[j++] = buf.charCodeAt(n++) | (buf.charCodeAt(n++) << 8)\r\n                | (buf.charCodeAt(n++) << 16) | (buf.charCodeAt(n++) << 24);\r\n        }\r\n    }else {\r\n        let n = 0, j = 0;\r\n        for(let i = 16;i--;) {\r\n            tmp[j++] = buf.charCodeAt(n++) | (buf.charCodeAt(n++) << 16);\r\n        }\r\n    }\r\n\r\n    const K = [\r\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n        1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\r\n        5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\r\n        0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9,\r\n    ];\r\n    const S = [\r\n        7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\r\n        5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\r\n        4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\r\n        6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21,\r\n    ];\r\n    const T = [\r\n        0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\r\n        0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\r\n        0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa, 0xd62f105d, 0x2441453, 0xd8a1e681, 0xe7d3fbc8,\r\n        0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\r\n        0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\r\n        0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x4881d05, 0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\r\n        0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\r\n        0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391,\r\n    ];\r\n    forIndex(64, (index)=>{\r\n        const [s0, s1, s2, s3] = state;\r\n        const _1\r\n            = index < 16 ? (s1 & s2) | (~s1 & s3)\r\n            : index < 32 ? (s1 & s3) | (s2 & ~s3)\r\n            : index < 48 ? xor3(state)\r\n            : s2 ^ (s1 | ~s3);\r\n        const _2 = _1 + s0 + T[index] + x_[K[index]];\r\n        const _s = S[index];\r\n        const _3 = (_2 << _s) | (_2 >>> (32 - _s));\r\n        state[0] = _3 + s1;\r\n        state.unshift(state.pop());\r\n    });\r\n    // a += tmp0 + 0xd76aa478 + ((b & c) | (~b & d));\r\n    // a = b + ((a << 7) | (a >>> 25));\r\n    // d += tmp1 + 0xe8c7b756 + ((a & b) | (~a & c));\r\n    // d = a + ((d << 12) | (d >>> 20));\r\n    // c += tmp2 + 0x242070db + ((d & a) | (~d & b));\r\n    // c = d + ((c << 17) | (c >>> 15));\r\n    // b += tmp3 + 0xc1bdceee + ((c & d) | (~c & a));\r\n    // b = c + ((b << 22) | (b >>> 10));\r\n    // a += tmp4 + 0xf57c0faf + ((b & c) | (~b & d));\r\n    // a = b + ((a << 7) | (a >>> 25));\r\n    // d += tmp5 + 0x4787c62a + ((a & b) | (~a & c));\r\n    // d = a + ((d << 12) | (d >>> 20));\r\n    // c += tmp6 + 0xa8304613 + ((d & a) | (~d & b));\r\n    // c = d + ((c << 17) | (c >>> 15));\r\n    // b += tmp7 + 0xfd469501 + ((c & d) | (~c & a));\r\n    // b = c + ((b << 22) | (b >>> 10));\r\n    // a += tmp8 + 0x698098d8 + ((b & c) | (~b & d));\r\n    // a = b + ((a << 7) | (a >>> 25));\r\n    // d += tmp9 + 0x8b44f7af + ((a & b) | (~a & c));\r\n    // d = a + ((d << 12) | (d >>> 20));\r\n    // c += tmpa + 0xffff5bb1 + ((d & a) | (~d & b));\r\n    // c = d + ((c << 17) | (c >>> 15));\r\n    // b += tmpb + 0x895cd7be + ((c & d) | (~c & a));\r\n    // b = c + ((b << 22) | (b >>> 10));\r\n    // a += tmpc + 0x6b901122 + ((b & c) | (~b & d));\r\n    // a = b + ((a << 7) | (a >>> 25));\r\n    // d += tmpd + 0xfd987193 + ((a & b) | (~a & c));\r\n    // d = a + ((d << 12) | (d >>> 20));\r\n    // c += tmpe + 0xa679438e + ((d & a) | (~d & b));\r\n    // c = d + ((c << 17) | (c >>> 15));\r\n    // b += tmpf + 0x49b40821 + ((c & d) | (~c & a));\r\n    // b = c + ((b << 22) | (b >>> 10));\r\n    // a += tmp1 + 0xf61e2562 + ((b & d) | (c & ~d));\r\n    // a = b + ((a << 5) | (a >>> 27));\r\n    // d += tmp6 + 0xc040b340 + ((a & c) | (b & ~c));\r\n    // d = a + ((d << 9) | (d >>> 23));\r\n    // c += tmpb + 0x265e5a51 + ((d & b) | (a & ~b));\r\n    // c = d + ((c << 14) | (c >>> 18));\r\n    // b += tmp0 + 0xe9b6c7aa + ((c & a) | (d & ~a));\r\n    // b = c + ((b << 20) | (b >>> 12));\r\n    // a += tmp5 + 0xd62f105d + ((b & d) | (c & ~d));\r\n    // a = b + ((a << 5) | (a >>> 27));\r\n    // d += tmpa + 0x02441453 + ((a & c) | (b & ~c));\r\n    // d = a + ((d << 9) | (d >>> 23));\r\n    // c += tmpf + 0xd8a1e681 + ((d & b) | (a & ~b));\r\n    // c = d + ((c << 14) | (c >>> 18));\r\n    // b += tmp4 + 0xe7d3fbc8 + ((c & a) | (d & ~a));\r\n    // b = c + ((b << 20) | (b >>> 12));\r\n    // a += tmp9 + 0x21e1cde6 + ((b & d) | (c & ~d));\r\n    // a = b + ((a << 5) | (a >>> 27));\r\n    // d += tmpe + 0xc33707d6 + ((a & c) | (b & ~c));\r\n    // d = a + ((d << 9) | (d >>> 23));\r\n    // c += tmp3 + 0xf4d50d87 + ((d & b) | (a & ~b));\r\n    // c = d + ((c << 14) | (c >>> 18));\r\n    // b += tmp8 + 0x455a14ed + ((c & a) | (d & ~a));\r\n    // b = c + ((b << 20) | (b >>> 12));\r\n    // a += tmpd + 0xa9e3e905 + ((b & d) | (c & ~d));\r\n    // a = b + ((a << 5) | (a >>> 27));\r\n    // d += tmp2 + 0xfcefa3f8 + ((a & c) | (b & ~c));\r\n    // d = a + ((d << 9) | (d >>> 23));\r\n    // c += tmp7 + 0x676f02d9 + ((d & b) | (a & ~b));\r\n    // c = d + ((c << 14) | (c >>> 18));\r\n    // b += tmpc + 0x8d2a4c8a + ((c & a) | (d & ~a));\r\n    // b = c + ((b << 20) | (b >>> 12));\r\n    // a += tmp5 + 0xfffa3942 + ((b ^ c) ^ d);\r\n    // a = b + ((a << 4) | (a >>> 28));\r\n    // d += tmp8 + 0x8771f681 + ((a ^ b) ^ c);\r\n    // d = a + ((d << 11) | (d >>> 21));\r\n    // c += tmpb + 0x6d9d6122 + ((d ^ a) ^ b);\r\n    // c = d + ((c << 16) | (c >>> 16));\r\n    // b += tmpe + 0xfde5380c + ((c ^ d) ^ a);\r\n    // b = c + ((b << 23) | (b >>> 9));\r\n    // a += tmp1 + 0xa4beea44 + ((b ^ c) ^ d);\r\n    // a = b + ((a << 4) | (a >>> 28));\r\n    // d += tmp4 + 0x4bdecfa9 + ((a ^ b) ^ c);\r\n    // d = a + ((d << 11) | (d >>> 21));\r\n    // c += tmp7 + 0xf6bb4b60 + ((d ^ a) ^ b);\r\n    // c = d + ((c << 16) | (c >>> 16));\r\n    // b += tmpa + 0xbebfbc70 + ((c ^ d) ^ a);\r\n    // b = c + ((b << 23) | (b >>> 9));\r\n    // a += tmpd + 0x289b7ec6 + ((b ^ c) ^ d);\r\n    // a = b + ((a << 4) | (a >>> 28));\r\n    // d += tmp0 + 0xeaa127fa + ((a ^ b) ^ c);\r\n    // d = a + ((d << 11) | (d >>> 21));\r\n    // c += tmp3 + 0xd4ef3085 + ((d ^ a) ^ b);\r\n    // c = d + ((c << 16) | (c >>> 16));\r\n    // b += tmp6 + 0x04881d05 + ((c ^ d) ^ a);\r\n    // b = c + ((b << 23) | (b >>> 9));\r\n    // a += tmp9 + 0xd9d4d039 + ((b ^ c) ^ d);\r\n    // a = b + ((a << 4) | (a >>> 28));\r\n    // d += tmpc + 0xe6db99e5 + ((a ^ b) ^ c);\r\n    // d = a + ((d << 11) | (d >>> 21));\r\n    // c += tmpf + 0x1fa27cf8 + ((d ^ a) ^ b);\r\n    // c = d + ((c << 16) | (c >>> 16));\r\n    // b += tmp2 + 0xc4ac5665 + ((c ^ d) ^ a);\r\n    // b = c + ((b << 23) | (b >>> 9));\r\n    // a += tmp0 + 0xf4292244 + (c ^ (~d | b));\r\n    // a = b + ((a << 6) | (a >>> 26));\r\n    // d += tmp7 + 0x432aff97 + (b ^ (~c | a));\r\n    // d = a + ((d << 10) | (d >>> 22));\r\n    // c += tmpe + 0xab9423a7 + (a ^ (~b | d));\r\n    // c = d + ((c << 15) | (c >>> 17));\r\n    // b += tmp5 + 0xfc93a039 + (d ^ (~a | c));\r\n    // b = c + ((b << 21) | (b >>> 11));\r\n    // a += tmpc + 0x655b59c3 + (c ^ (~d | b));\r\n    // a = b + ((a << 6) | (a >>> 26));\r\n    // d += tmp3 + 0x8f0ccc92 + (b ^ (~c | a));\r\n    // d = a + ((d << 10) | (d >>> 22));\r\n    // c += tmpa + 0xffeff47d + (a ^ (~b | d));\r\n    // c = d + ((c << 15) | (c >>> 17));\r\n    // b += tmp1 + 0x85845dd1 + (d ^ (~a | c));\r\n    // b = c + ((b << 21) | (b >>> 11));\r\n    // a += tmp8 + 0x6fa87e4f + (c ^ (~d | b));\r\n    // a = b + ((a << 6) | (a >>> 26));\r\n    // d += tmpf + 0xfe2ce6e0 + (b ^ (~c | a));\r\n    // d = a + ((d << 10) | (d >>> 22));\r\n    // c += tmp6 + 0xa3014314 + (a ^ (~b | d));\r\n    // c = d + ((c << 15) | (c >>> 17));\r\n    // b += tmpd + 0x4e0811a1 + (d ^ (~a | c));\r\n    // b = c + ((b << 21) | (b >>> 11));\r\n    // a += tmp4 + 0xf7537e82 + (c ^ (~d | b));\r\n    // a = b + ((a << 6) | (a >>> 26));\r\n    // d += tmpb + 0xbd3af235 + (b ^ (~c | a));\r\n    // d = a + ((d << 10) | (d >>> 22));\r\n    // c += tmp2 + 0x2ad7d2bb + (a ^ (~b | d));\r\n    // c = d + ((c << 15) | (c >>> 17));\r\n    // b += tmp9 + 0xeb86d391 + (d ^ (~a | c));\r\n    // b = c + ((b << 21) | (b >>> 11));\r\n\r\n    // this.a_ = (this.a_ + a) & 0xffffffff;\r\n    // this.b_ = (this.b_ + b) & 0xffffffff;\r\n    // this.c_ = (this.c_ + c) & 0xffffffff;\r\n    // this.d_ = (this.d_ + d) & 0xffffffff;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/md5_dev_wip.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 538,
    "kind": "function",
    "name": "$",
    "memberof": "src/util/string/hash/md5_dev_wip.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/md5_dev_wip.js~$",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/md5_dev_wip.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      },
      {
        "name": "charSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 539,
    "kind": "file",
    "name": "src/util/string/hash/sha1.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { hashCore } from \"./core\";\r\nimport { fromBigEndian32, toBigEndian32, paddingData, ch, maj, xor3 } from \"./lib\";\r\nimport { forIndex } from \"../../../utility/loop/index\";\r\n\r\nconst K = [0x5a827999 , 0x6ed9eba1 , 0x8f1bbcdc , 0xca62c1d6];\r\nconst blockLen = 64;\r\nconst initState_ = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\r\nconst initState = [0x67452301, -271733879, -1732584194, 0x10325476, -1009589776];\r\nconst sttLen = initState.length;\r\n\r\nconst rotl = (_v, _s) => (\r\n    (_v << _s) | (_v >>> (32 - _s))\r\n);\r\n\r\nconst round = (_block) => {\r\n    _block = paddingData(_block);\r\n    const state = [...initState_];\r\n    for (let i = 0;i < _block.length;i += blockLen) {\r\n        const stateRef = [...state];\r\n        const x = toBigEndian32(_block.slice(i, i + blockLen));\r\n        for(let j = 16;j < 80;j++)\r\n            x[j] = rotl(x[j-3] ^ x[j-8] ^ x[j-14] ^ x[j-16], 1);\r\n        forIndex(80, (index)=>{\r\n            const state1_3 = state.slice(1, 4);\r\n            const tmp\r\n                = index < 20 ? ch(...state1_3) + K[0]\r\n                : index < 40 ? xor3(state) + K[1]\r\n                : index < 60 ? maj(...state1_3) + K[2]\r\n                : xor3(state) + K[3];\r\n            const temp = tmp + rotl(state[0], 5) + x[index] + state[4];\r\n            state[1] = rotl(state[1], 30);\r\n            state.unshift(temp);\r\n            state.pop();\r\n        });\r\n        forIndex(sttLen, (index)=>{\r\n            state[index] += stateRef[index];\r\n        });\r\n    }\r\n    return fromBigEndian32(state);\r\n};\r\n\r\n/**\r\n * SHA-1\r\n * @param {string} data\r\n * @param {{format?: \"hex\" | \"binary\" | \"dec\"}} [props]\r\n */\r\nexport const sha1 = (data, props={}) => hashCore(round, data, props);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/sha1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 540,
    "kind": "variable",
    "name": "K",
    "memberof": "src/util/string/hash/sha1.js",
    "static": true,
    "longname": "src/util/string/hash/sha1.js~K",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 541,
    "kind": "variable",
    "name": "blockLen",
    "memberof": "src/util/string/hash/sha1.js",
    "static": true,
    "longname": "src/util/string/hash/sha1.js~blockLen",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 542,
    "kind": "variable",
    "name": "initState_",
    "memberof": "src/util/string/hash/sha1.js",
    "static": true,
    "longname": "src/util/string/hash/sha1.js~initState_",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 543,
    "kind": "variable",
    "name": "initState",
    "memberof": "src/util/string/hash/sha1.js",
    "static": true,
    "longname": "src/util/string/hash/sha1.js~initState",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 544,
    "kind": "variable",
    "name": "sttLen",
    "memberof": "src/util/string/hash/sha1.js",
    "static": true,
    "longname": "src/util/string/hash/sha1.js~sttLen",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 545,
    "kind": "function",
    "name": "rotl",
    "memberof": "src/util/string/hash/sha1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha1.js~rotl",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "_v",
        "types": [
          "*"
        ]
      },
      {
        "name": "_s",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 546,
    "kind": "function",
    "name": "round",
    "memberof": "src/util/string/hash/sha1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha1.js~round",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "_block",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 547,
    "kind": "function",
    "name": "sha1",
    "memberof": "src/util/string/hash/sha1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha1.js~sha1",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1.js",
    "importStyle": "{sha1}",
    "description": "SHA-1",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{format?: \"hex\" | \"binary\" | \"dec\"}"
        ],
        "spread": false,
        "optional": true,
        "name": "props",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 548,
    "kind": "file",
    "name": "src/util/string/hash/sha1_$.js",
    "content": "/*\r\n\tSHA-1\r\n\tCopyright (C) 2007 MITSUNARI Shigeo at Cybozu Labs, Inc.\r\n\tlicense:new BSD license\r\n\thow to use\r\n\tCybozuLabs.SHA1.calc(<ascii string>);\r\n\tCybozuLabs.SHA1.calc(<unicode(UTF16) string>, CybozuLabs.SHA1.BY_UTF16);\r\n\r\n\tex. CybozuLabs.SHA1.calc(\"abc\") == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\r\n*/\r\nvar CybozuLabs = {\r\n\tSHA1 : {\r\n\t\tint16toBE : function(i16) {\r\n\t\t\ti16 &= 65535;\r\n\t\t\tif (i16 < 0) i16 += 65536;\r\n\t\t\tvar ret = Number(i16).toString(16);\r\n\t\t\treturn new Array(5 - ret.length).join(\"0\") + ret;\r\n\t\t},\r\n\t\tint32toBE : function(i32) {\r\n\t\t\treturn this.int16toBE(i32 >>> 16) + this.int16toBE(i32 & 65535);\r\n\t\t},\r\n\t\tswap32 : function(i32) {\r\n\t\t\treturn (i32 << 24) | ((i32 << 8) & 0xff0000) | ((i32 >> 8) & 0xff00) | (i32 >>> 24);\r\n\t\t},\r\n\t\tswap16 : function(i16) {\r\n\t\t\treturn (i16 >> 8) | ((i16 << 8) & 0xff00);\r\n\t\t},\r\n\t\tput : function(x) {\r\n\t\t\tx |= 0;\r\n\t\t\tdocument.write(\"0x\" + Number(x < 0 ? x + 4294967296 : x).toString(16) + \"<br>\");\r\n\t\t},\r\n\t\tupdate_Fx : function(buf, charSize) {\r\n\t\t\tvar WL = [];\r\n\t\t\tvar WH = [];\r\n\t\t\tif (charSize == 1) {\r\n\t\t\t\tfor (var i = 0; i < 16; i++) {\r\n\t\t\t\t\tvar t = buf.charCodeAt(i * 4 + 0);\r\n\t\t\t\t\tWL[i] = buf.charCodeAt(i * 4 + 3) | (buf.charCodeAt(i * 4 + 2) << 8) | (buf.charCodeAt(i * 4 + 1) << 16) | ((t & 0x7) << 24);\r\n\t\t\t\t\tWH[i] = t >>> 3;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (var i = 0; i < 16; i++) {\r\n\t\t\t\t\tvar t = this.swap16(buf.charCodeAt(i * 2 + 0));\r\n\t\t\t\t\tWL[i] = this.swap16(buf.charCodeAt(i * 2 + 1)) | (( t & 0x7ff) << 16);\r\n\t\t\t\t\tWH[i] = t >>> 11;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = 16; i < 80; i++) {\r\n\t\t\t\tvar tL = WL[i - 3] ^ WL[i - 8] ^ WL[i - 14] ^ WL[i - 16];\r\n\t\t\t\tvar tH = WH[i - 3] ^ WH[i - 8] ^ WH[i - 14] ^ WH[i - 16];\r\n\t\t\t\tWL[i] = (tH >>> 4) | ((tL << 1) & 0x7ffffff);\r\n\t\t\t\tWH[i] = (tL >>> 26) | ((tH << 1) & 31);\r\n\t\t\t}\r\n\t\t\tvar aL = this.H_[0];\r\n\t\t\tvar aH = this.H_[1];\r\n\t\t\tvar bL = this.H_[2];\r\n\t\t\tvar bH = this.H_[3];\r\n\t\t\tvar cL = this.H_[4];\r\n\t\t\tvar cH = this.H_[5];\r\n\t\t\tvar dL = this.H_[6];\r\n\t\t\tvar dH = this.H_[7];\r\n\t\t\tvar eL = this.H_[8];\r\n\t\t\tvar eH = this.H_[9];\r\n\r\n\t\t\tvar t;\r\n\t\t\tfor (var i = 0; i < 20; i += 5) {\r\n\t\t\t\teL += ((bL & cL) | (~bL & dL)) + WL[i] + (((aL & 0x3fffff) << 5) | aH) + 0x02827999;\r\n\t\t\t\teH += ((bH & cH) | (~bH & dH)) + WH[i] + (aL >>> 22) + 0x0b + (eL >>> 27);\r\n\t\t\t\teL &= 0x7ffffff; eH &= 31;\r\n\t\t\t\tt = (bL >>> 2) | ((bH & 3) << 25); bH = (bH >>> 2) | ((bL & 3) << 3); bL = t;\r\n\r\n\t\t\t\tdL += ((aL & bL) | (~aL & cL)) + WL[i + 1] + (((eL & 0x3fffff) << 5) | eH) + 0x02827999;\r\n\t\t\t\tdH += ((aH & bH) | (~aH & cH)) + WH[i + 1] + (eL >>> 22) + 0x0b + (dL >>> 27);\r\n\t\t\t\tdL &= 0x7ffffff; dH &= 31;\r\n\t\t\t\tt = (aL >>> 2) | ((aH & 3) << 25); aH = (aH >>> 2) | ((aL & 3) << 3); aL = t;\r\n\r\n\t\t\t\tcL += ((eL & aL) | (~eL & bL)) + WL[i + 2] + (((dL & 0x3fffff) << 5) | dH) + 0x02827999;\r\n\t\t\t\tcH += ((eH & aH) | (~eH & bH)) + WH[i + 2] + (dL >>> 22) + 0x0b + (cL >>> 27);\r\n\t\t\t\tcL &= 0x7ffffff; cH &= 31;\r\n\t\t\t\tt = (eL >>> 2) | ((eH & 3) << 25); eH = (eH >>> 2) | ((eL & 3) << 3); eL = t;\r\n\r\n\t\t\t\tbL += ((dL & eL) | (~dL & aL)) + WL[i + 3] + (((cL & 0x3fffff) << 5) | cH) + 0x02827999;\r\n\t\t\t\tbH += ((dH & eH) | (~dH & aH)) + WH[i + 3] + (cL >>> 22) + 0x0b + (bL >>> 27);\r\n\t\t\t\tbL &= 0x7ffffff; bH &= 31;\r\n\t\t\t\tt = (dL >>> 2) | ((dH & 3) << 25); dH = (dH >>> 2) | ((dL & 3) << 3); dL = t;\r\n\r\n\t\t\t\taL += ((cL & dL) | (~cL & eL)) + WL[i + 4] + (((bL & 0x3fffff) << 5) | bH) + 0x02827999;\r\n\t\t\t\taH += ((cH & dH) | (~cH & eH)) + WH[i + 4] + (bL >>> 22) + 0x0b + (aL >>> 27);\r\n\t\t\t\taL &= 0x7ffffff; aH &= 31;\r\n\t\t\t\tt = (cL >>> 2) | ((cH & 3) << 25); cH = (cH >>> 2) | ((cL & 3) << 3); cL = t;\r\n\t\t\t}\r\n\t\t\tfor (var i = 20; i < 40; i += 5) {\r\n\t\t\t\teL += (bL ^ cL ^ dL) + WL[i] + (((aL & 0x3fffff) << 5) | aH) + 0x06d9eba1;\r\n\t\t\t\teH += (bH ^ cH ^ dH) + WH[i] + (aL >>> 22) + 0x0d + (eL >>> 27);\r\n\t\t\t\teL &= 0x7ffffff; eH &= 31;\r\n\t\t\t\tt = (bL >>> 2) | ((bH & 3) << 25); bH = (bH >>> 2) | ((bL & 3) << 3); bL = t;\r\n\r\n\t\t\t\tdL += (aL ^ bL ^ cL) + WL[i + 1] + (((eL & 0x3fffff) << 5) | eH) + 0x06d9eba1;\r\n\t\t\t\tdH += (aH ^ bH ^ cH) + WH[i + 1] + (eL >>> 22) + 0x0d + (dL >>> 27);\r\n\t\t\t\tdL &= 0x7ffffff; dH &= 31;\r\n\t\t\t\tt = (aL >>> 2) | ((aH & 3) << 25); aH = (aH >>> 2) | ((aL & 3) << 3); aL = t;\r\n\r\n\t\t\t\tcL += (eL ^ aL ^ bL) + WL[i + 2] + (((dL & 0x3fffff) << 5) | dH) + 0x06d9eba1;\r\n\t\t\t\tcH += (eH ^ aH ^ bH) + WH[i + 2] + (dL >>> 22) + 0x0d + (cL >>> 27);\r\n\t\t\t\tcL &= 0x7ffffff; cH &= 31;\r\n\t\t\t\tt = (eL >>> 2) | ((eH & 3) << 25); eH = (eH >>> 2) | ((eL & 3) << 3); eL = t;\r\n\r\n\t\t\t\tbL += (dL ^ eL ^ aL) + WL[i + 3] + (((cL & 0x3fffff) << 5) | cH) + 0x06d9eba1;\r\n\t\t\t\tbH += (dH ^ eH ^ aH) + WH[i + 3] + (cL >>> 22) + 0x0d + (bL >>> 27);\r\n\t\t\t\tbL &= 0x7ffffff; bH &= 31;\r\n\t\t\t\tt = (dL >>> 2) | ((dH & 3) << 25); dH = (dH >>> 2) | ((dL & 3) << 3); dL = t;\r\n\r\n\t\t\t\taL += (cL ^ dL ^ eL) + WL[i + 4] + (((bL & 0x3fffff) << 5) | bH) + 0x06d9eba1;\r\n\t\t\t\taH += (cH ^ dH ^ eH) + WH[i + 4] + (bL >>> 22) + 0x0d + (aL >>> 27);\r\n\t\t\t\taL &= 0x7ffffff; aH &= 31;\r\n\t\t\t\tt = (cL >>> 2) | ((cH & 3) << 25); cH = (cH >>> 2) | ((cL & 3) << 3); cL = t;\r\n\t\t\t}\r\n\t\t\tfor (var i = 40; i < 60; i += 5) {\r\n\t\t\t\teL += ((bL & (cL | dL)) | (cL & dL)) + WL[i] + (((aL & 0x3fffff) << 5) | aH) + 0x071bbcdc;\r\n\t\t\t\teH += ((bH & (cH | dH)) | (cH & dH)) + WH[i] + (aL >>> 22) + 0x11 + (eL >>> 27);\r\n\t\t\t\teL &= 0x7ffffff; eH &= 31;\r\n\t\t\t\tt = (bL >>> 2) | ((bH & 3) << 25); bH = (bH >>> 2) | ((bL & 3) << 3); bL = t;\r\n\r\n\t\t\t\tdL += ((aL & (bL | cL)) | (bL & cL)) + WL[i + 1] + (((eL & 0x3fffff) << 5) | eH) + 0x071bbcdc;\r\n\t\t\t\tdH += ((aH & (bH | cH)) | (bH & cH)) + WH[i + 1] + (eL >>> 22) + 0x11 + (dL >>> 27);\r\n\t\t\t\tdL &= 0x7ffffff; dH &= 31;\r\n\t\t\t\tt = (aL >>> 2) | ((aH & 3) << 25); aH = (aH >>> 2) | ((aL & 3) << 3); aL = t;\r\n\r\n\t\t\t\tcL += ((eL & (aL | bL)) | (aL & bL)) + WL[i + 2] + (((dL & 0x3fffff) << 5) | dH) + 0x071bbcdc;\r\n\t\t\t\tcH += ((eH & (aH | bH)) | (aH & bH)) + WH[i + 2] + (dL >>> 22) + 0x11 + (cL >>> 27);\r\n\t\t\t\tcL &= 0x7ffffff; cH &= 31;\r\n\t\t\t\tt = (eL >>> 2) | ((eH & 3) << 25); eH = (eH >>> 2) | ((eL & 3) << 3); eL = t;\r\n\r\n\t\t\t\tbL += ((dL & (eL | aL)) | (eL & aL)) + WL[i + 3] + (((cL & 0x3fffff) << 5) | cH) + 0x071bbcdc;\r\n\t\t\t\tbH += ((dH & (eH | aH)) | (eH & aH)) + WH[i + 3] + (cL >>> 22) + 0x11 + (bL >>> 27);\r\n\t\t\t\tbL &= 0x7ffffff; bH &= 31;\r\n\t\t\t\tt = (dL >>> 2) | ((dH & 3) << 25); dH = (dH >>> 2) | ((dL & 3) << 3); dL = t;\r\n\r\n\t\t\t\taL += ((cL & (dL | eL)) | (dL & eL)) + WL[i + 4] + (((bL & 0x3fffff) << 5) | bH) + 0x071bbcdc;\r\n\t\t\t\taH += ((cH & (dH | eH)) | (dH & eH)) + WH[i + 4] + (bL >>> 22) + 0x11 + (aL >>> 27);\r\n\t\t\t\taL &= 0x7ffffff; aH &= 31;\r\n\t\t\t\tt = (cL >>> 2) | ((cH & 3) << 25); cH = (cH >>> 2) | ((cL & 3) << 3); cL = t;\r\n\t\t\t}\r\n\t\t\tfor (var i = 60; i < 80; i += 5) {\r\n\t\t\t\teL += (bL ^ cL ^ dL) + WL[i] + (((aL & 0x3fffff) << 5) | aH) + 0x0262c1d6;\r\n\t\t\t\teH += (bH ^ cH ^ dH) + WH[i] + (aL >>> 22) + 0x19 + (eL >>> 27);\r\n\t\t\t\teL &= 0x7ffffff; eH &= 31;\r\n\t\t\t\tt = (bL >>> 2) | ((bH & 3) << 25); bH = (bH >>> 2) | ((bL & 3) << 3); bL = t;\r\n\r\n\t\t\t\tdL += (aL ^ bL ^ cL) + WL[i + 1] + (((eL & 0x3fffff) << 5) | eH) + 0x0262c1d6;\r\n\t\t\t\tdH += (aH ^ bH ^ cH) + WH[i + 1] + (eL >>> 22) + 0x19 + (dL >>> 27);\r\n\t\t\t\tdL &= 0x7ffffff; dH &= 31;\r\n\t\t\t\tt = (aL >>> 2) | ((aH & 3) << 25); aH = (aH >>> 2) | ((aL & 3) << 3); aL = t;\r\n\r\n\t\t\t\tcL += (eL ^ aL ^ bL) + WL[i + 2] + (((dL & 0x3fffff) << 5) | dH) + 0x0262c1d6;\r\n\t\t\t\tcH += (eH ^ aH ^ bH) + WH[i + 2] + (dL >>> 22) + 0x19 + (cL >>> 27);\r\n\t\t\t\tcL &= 0x7ffffff; cH &= 31;\r\n\t\t\t\tt = (eL >>> 2) | ((eH & 3) << 25); eH = (eH >>> 2) | ((eL & 3) << 3); eL = t;\r\n\r\n\t\t\t\tbL += (dL ^ eL ^ aL) + WL[i + 3] + (((cL & 0x3fffff) << 5) | cH) + 0x0262c1d6;\r\n\t\t\t\tbH += (dH ^ eH ^ aH) + WH[i + 3] + (cL >>> 22) + 0x19 + (bL >>> 27);\r\n\t\t\t\tbL &= 0x7ffffff; bH &= 31;\r\n\t\t\t\tt = (dL >>> 2) | ((dH & 3) << 25); dH = (dH >>> 2) | ((dL & 3) << 3); dL = t;\r\n\r\n\t\t\t\taL += (cL ^ dL ^ eL) + WL[i + 4] + (((bL & 0x3fffff) << 5) | bH) + 0x0262c1d6;\r\n\t\t\t\taH += (cH ^ dH ^ eH) + WH[i + 4] + (bL >>> 22) + 0x19 + (aL >>> 27);\r\n\t\t\t\taL &= 0x7ffffff; aH &= 31;\r\n\t\t\t\tt = (cL >>> 2) | ((cH & 3) << 25); cH = (cH >>> 2) | ((cL & 3) << 3); cL = t;\r\n\t\t\t}\r\n\t\t\tt = this.H_[0] + aL; this.H_[1] = (this.H_[1] + aH + (t >>> 27)) & 31; this.H_[0] = t & 0x7ffffff;\r\n\t\t\tt = this.H_[2] + bL; this.H_[3] = (this.H_[3] + bH + (t >>> 27)) & 31; this.H_[2] = t & 0x7ffffff;\r\n\t\t\tt = this.H_[4] + cL; this.H_[5] = (this.H_[5] + cH + (t >>> 27)) & 31; this.H_[4] = t & 0x7ffffff;\r\n\t\t\tt = this.H_[6] + dL; this.H_[7] = (this.H_[7] + dH + (t >>> 27)) & 31; this.H_[6] = t & 0x7ffffff;\r\n\t\t\tt = this.H_[8] + eL; this.H_[9] = (this.H_[9] + eH + (t >>> 27)) & 31; this.H_[8] = t & 0x7ffffff;\r\n\t\t},\r\n\t\tupdate_std : function(buf, charSize) {\r\n\t\t\tvar tmp00, tmp01, tmp02, tmp03, tmp04, tmp05, tmp06, tmp07, tmp08, tmp09;\r\n\t\t\tvar tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19;\r\n\t\t\tvar tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29;\r\n\t\t\tvar tmp30, tmp31, tmp32, tmp33, tmp34, tmp35;\r\n\t\t\tif (charSize == 1) {\r\n\t\t\t\ttmp00 = buf.charCodeAt( 3) | (buf.charCodeAt( 2) << 8) | (buf.charCodeAt( 1) << 16) | (buf.charCodeAt( 0) << 24);\r\n\t\t\t\ttmp01 = buf.charCodeAt( 7) | (buf.charCodeAt( 6) << 8) | (buf.charCodeAt( 5) << 16) | (buf.charCodeAt( 4) << 24);\r\n\t\t\t\ttmp02 = buf.charCodeAt(11) | (buf.charCodeAt(10) << 8) | (buf.charCodeAt( 9) << 16) | (buf.charCodeAt( 8) << 24);\r\n\t\t\t\ttmp03 = buf.charCodeAt(15) | (buf.charCodeAt(14) << 8) | (buf.charCodeAt(13) << 16) | (buf.charCodeAt(12) << 24);\r\n\t\t\t\ttmp04 = buf.charCodeAt(19) | (buf.charCodeAt(18) << 8) | (buf.charCodeAt(17) << 16) | (buf.charCodeAt(16) << 24);\r\n\t\t\t\ttmp05 = buf.charCodeAt(23) | (buf.charCodeAt(22) << 8) | (buf.charCodeAt(21) << 16) | (buf.charCodeAt(20) << 24);\r\n\t\t\t\ttmp06 = buf.charCodeAt(27) | (buf.charCodeAt(26) << 8) | (buf.charCodeAt(25) << 16) | (buf.charCodeAt(24) << 24);\r\n\t\t\t\ttmp07 = buf.charCodeAt(31) | (buf.charCodeAt(30) << 8) | (buf.charCodeAt(29) << 16) | (buf.charCodeAt(28) << 24);\r\n\t\t\t\ttmp08 = buf.charCodeAt(35) | (buf.charCodeAt(34) << 8) | (buf.charCodeAt(33) << 16) | (buf.charCodeAt(32) << 24);\r\n\t\t\t\ttmp09 = buf.charCodeAt(39) | (buf.charCodeAt(38) << 8) | (buf.charCodeAt(37) << 16) | (buf.charCodeAt(36) << 24);\r\n\t\t\t\ttmp10 = buf.charCodeAt(43) | (buf.charCodeAt(42) << 8) | (buf.charCodeAt(41) << 16) | (buf.charCodeAt(40) << 24);\r\n\t\t\t\ttmp11 = buf.charCodeAt(47) | (buf.charCodeAt(46) << 8) | (buf.charCodeAt(45) << 16) | (buf.charCodeAt(44) << 24);\r\n\t\t\t\ttmp12 = buf.charCodeAt(51) | (buf.charCodeAt(50) << 8) | (buf.charCodeAt(49) << 16) | (buf.charCodeAt(48) << 24);\r\n\t\t\t\ttmp13 = buf.charCodeAt(55) | (buf.charCodeAt(54) << 8) | (buf.charCodeAt(53) << 16) | (buf.charCodeAt(52) << 24);\r\n\t\t\t\ttmp14 = buf.charCodeAt(59) | (buf.charCodeAt(58) << 8) | (buf.charCodeAt(57) << 16) | (buf.charCodeAt(56) << 24);\r\n\t\t\t\ttmp15 = buf.charCodeAt(63) | (buf.charCodeAt(62) << 8) | (buf.charCodeAt(61) << 16) | (buf.charCodeAt(60) << 24);\r\n\t\t\t} else {\r\n\t\t\t\ttmp00 = this.swap32(buf.charCodeAt( 0) | (buf.charCodeAt( 1) << 16));\r\n\t\t\t\ttmp01 = this.swap32(buf.charCodeAt( 2) | (buf.charCodeAt( 3) << 16));\r\n\t\t\t\ttmp02 = this.swap32(buf.charCodeAt( 4) | (buf.charCodeAt( 5) << 16));\r\n\t\t\t\ttmp03 = this.swap32(buf.charCodeAt( 6) | (buf.charCodeAt( 7) << 16));\r\n\t\t\t\ttmp04 = this.swap32(buf.charCodeAt( 8) | (buf.charCodeAt( 9) << 16));\r\n\t\t\t\ttmp05 = this.swap32(buf.charCodeAt(10) | (buf.charCodeAt(11) << 16));\r\n\t\t\t\ttmp06 = this.swap32(buf.charCodeAt(12) | (buf.charCodeAt(13) << 16));\r\n\t\t\t\ttmp07 = this.swap32(buf.charCodeAt(14) | (buf.charCodeAt(15) << 16));\r\n\t\t\t\ttmp08 = this.swap32(buf.charCodeAt(16) | (buf.charCodeAt(17) << 16));\r\n\t\t\t\ttmp09 = this.swap32(buf.charCodeAt(18) | (buf.charCodeAt(19) << 16));\r\n\t\t\t\ttmp10 = this.swap32(buf.charCodeAt(20) | (buf.charCodeAt(21) << 16));\r\n\t\t\t\ttmp11 = this.swap32(buf.charCodeAt(22) | (buf.charCodeAt(23) << 16));\r\n\t\t\t\ttmp12 = this.swap32(buf.charCodeAt(24) | (buf.charCodeAt(25) << 16));\r\n\t\t\t\ttmp13 = this.swap32(buf.charCodeAt(26) | (buf.charCodeAt(27) << 16));\r\n\t\t\t\ttmp14 = this.swap32(buf.charCodeAt(28) | (buf.charCodeAt(29) << 16));\r\n\t\t\t\ttmp15 = this.swap32(buf.charCodeAt(30) | (buf.charCodeAt(31) << 16));\r\n\t\t\t}\r\n\t\t\tvar a = this.H_[0];\r\n\t\t\tvar b = this.H_[1];\r\n\t\t\tvar c = this.H_[2];\r\n\t\t\tvar d = this.H_[3];\r\n\t\t\tvar e = this.H_[4];\r\n\t\t\tvar const0 = 0x5a827999;\r\n\t\t\tvar const1 = 0x6ed9eba1;\r\n\t\t\tvar const2 = 0x8f1bbcdc;\r\n\t\t\tvar const3 = 0xca62c1d6;\r\n\r\n\t\t\tvar t;\r\n\r\n\t\t\tt = tmp13 ^ tmp08 ^ tmp02 ^ tmp00; tmp16 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp14 ^ tmp09 ^ tmp03 ^ tmp01; tmp17 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp15 ^ tmp10 ^ tmp04 ^ tmp02; tmp18 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp16 ^ tmp11 ^ tmp05 ^ tmp03; tmp19 = (t << 1) | (t >>> 31);\r\n\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & c) | (~b & d)) + tmp00 + const0; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & b) | (~a & c)) + tmp01 + const0; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & a) | (~e & b)) + tmp02 + const0; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & e) | (~d & a)) + tmp03 + const0; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & d) | (~c & e)) + tmp04 + const0; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & c) | (~b & d)) + tmp05 + const0; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & b) | (~a & c)) + tmp06 + const0; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & a) | (~e & b)) + tmp07 + const0; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & e) | (~d & a)) + tmp08 + const0; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & d) | (~c & e)) + tmp09 + const0; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & c) | (~b & d)) + tmp10 + const0; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & b) | (~a & c)) + tmp11 + const0; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & a) | (~e & b)) + tmp12 + const0; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & e) | (~d & a)) + tmp13 + const0; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & d) | (~c & e)) + tmp14 + const0; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & c) | (~b & d)) + tmp15 + const0; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & b) | (~a & c)) + tmp16 + const0; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & a) | (~e & b)) + tmp17 + const0; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & e) | (~d & a)) + tmp18 + const0; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & d) | (~c & e)) + tmp19 + const0; c = (c << 30) | (c >>> 2);\r\n\r\n\t\t\tt = tmp17 ^ tmp12 ^ tmp06 ^ tmp04; tmp20 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp18 ^ tmp13 ^ tmp07 ^ tmp05; tmp21 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp19 ^ tmp14 ^ tmp08 ^ tmp06; tmp22 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp20 ^ tmp15 ^ tmp09 ^ tmp07; tmp23 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp21 ^ tmp16 ^ tmp10 ^ tmp08; tmp24 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp22 ^ tmp17 ^ tmp11 ^ tmp09; tmp25 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp23 ^ tmp18 ^ tmp12 ^ tmp10; tmp26 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp24 ^ tmp19 ^ tmp13 ^ tmp11; tmp27 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp25 ^ tmp20 ^ tmp14 ^ tmp12; tmp28 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp26 ^ tmp21 ^ tmp15 ^ tmp13; tmp29 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp27 ^ tmp22 ^ tmp16 ^ tmp14; tmp30 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp28 ^ tmp23 ^ tmp17 ^ tmp15; tmp31 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp29 ^ tmp24 ^ tmp18 ^ tmp16; tmp32 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp30 ^ tmp25 ^ tmp19 ^ tmp17; tmp33 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp31 ^ tmp26 ^ tmp20 ^ tmp18; tmp34 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp32 ^ tmp27 ^ tmp21 ^ tmp19; tmp35 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp33 ^ tmp28 ^ tmp22 ^ tmp20; tmp00 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp34 ^ tmp29 ^ tmp23 ^ tmp21; tmp01 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp35 ^ tmp30 ^ tmp24 ^ tmp22; tmp02 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp00 ^ tmp31 ^ tmp25 ^ tmp23; tmp03 = (t << 1) | (t >>> 31);\r\n\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp20 + const1; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp21 + const1; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp22 + const1; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp23 + const1; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp24 + const1; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp25 + const1; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp26 + const1; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp27 + const1; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp28 + const1; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp29 + const1; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp30 + const1; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp31 + const1; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp32 + const1; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp33 + const1; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp34 + const1; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp35 + const1; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp00 + const1; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp01 + const1; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp02 + const1; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp03 + const1; c = (c << 30) | (c >>> 2);\r\n                                                         \r\n\t\t\tt = tmp01 ^ tmp32 ^ tmp26 ^ tmp24; tmp04 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp02 ^ tmp33 ^ tmp27 ^ tmp25; tmp05 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp03 ^ tmp34 ^ tmp28 ^ tmp26; tmp06 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp04 ^ tmp35 ^ tmp29 ^ tmp27; tmp07 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp05 ^ tmp00 ^ tmp30 ^ tmp28; tmp08 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp06 ^ tmp01 ^ tmp31 ^ tmp29; tmp09 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp07 ^ tmp02 ^ tmp32 ^ tmp30; tmp10 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp08 ^ tmp03 ^ tmp33 ^ tmp31; tmp11 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp09 ^ tmp04 ^ tmp34 ^ tmp32; tmp12 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp10 ^ tmp05 ^ tmp35 ^ tmp33; tmp13 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp11 ^ tmp06 ^ tmp00 ^ tmp34; tmp14 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp12 ^ tmp07 ^ tmp01 ^ tmp35; tmp15 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp13 ^ tmp08 ^ tmp02 ^ tmp00; tmp16 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp14 ^ tmp09 ^ tmp03 ^ tmp01; tmp17 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp15 ^ tmp10 ^ tmp04 ^ tmp02; tmp18 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp16 ^ tmp11 ^ tmp05 ^ tmp03; tmp19 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp17 ^ tmp12 ^ tmp06 ^ tmp04; tmp20 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp18 ^ tmp13 ^ tmp07 ^ tmp05; tmp21 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp19 ^ tmp14 ^ tmp08 ^ tmp06; tmp22 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp20 ^ tmp15 ^ tmp09 ^ tmp07; tmp23 = (t << 1) | (t >>> 31);\r\n\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & (c | d)) | (c & d)) + tmp04 + const2; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & (b | c)) | (b & c)) + tmp05 + const2; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & (a | b)) | (a & b)) + tmp06 + const2; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & (e | a)) | (e & a)) + tmp07 + const2; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & (d | e)) | (d & e)) + tmp08 + const2; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & (c | d)) | (c & d)) + tmp09 + const2; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & (b | c)) | (b & c)) + tmp10 + const2; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & (a | b)) | (a & b)) + tmp11 + const2; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & (e | a)) | (e & a)) + tmp12 + const2; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & (d | e)) | (d & e)) + tmp13 + const2; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & (c | d)) | (c & d)) + tmp14 + const2; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & (b | c)) | (b & c)) + tmp15 + const2; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & (a | b)) | (a & b)) + tmp16 + const2; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & (e | a)) | (e & a)) + tmp17 + const2; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & (d | e)) | (d & e)) + tmp18 + const2; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + ((b & (c | d)) | (c & d)) + tmp19 + const2; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + ((a & (b | c)) | (b & c)) + tmp20 + const2; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + ((e & (a | b)) | (a & b)) + tmp21 + const2; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + ((d & (e | a)) | (e & a)) + tmp22 + const2; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + ((c & (d | e)) | (d & e)) + tmp23 + const2; c = (c << 30) | (c >>> 2);\r\n\r\n\t\t\tt = tmp21 ^ tmp16 ^ tmp10 ^ tmp08; tmp24 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp22 ^ tmp17 ^ tmp11 ^ tmp09; tmp25 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp23 ^ tmp18 ^ tmp12 ^ tmp10; tmp26 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp24 ^ tmp19 ^ tmp13 ^ tmp11; tmp27 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp25 ^ tmp20 ^ tmp14 ^ tmp12; tmp28 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp26 ^ tmp21 ^ tmp15 ^ tmp13; tmp29 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp27 ^ tmp22 ^ tmp16 ^ tmp14; tmp30 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp28 ^ tmp23 ^ tmp17 ^ tmp15; tmp31 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp29 ^ tmp24 ^ tmp18 ^ tmp16; tmp32 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp30 ^ tmp25 ^ tmp19 ^ tmp17; tmp33 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp31 ^ tmp26 ^ tmp20 ^ tmp18; tmp34 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp32 ^ tmp27 ^ tmp21 ^ tmp19; tmp35 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp33 ^ tmp28 ^ tmp22 ^ tmp20; tmp00 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp34 ^ tmp29 ^ tmp23 ^ tmp21; tmp01 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp35 ^ tmp30 ^ tmp24 ^ tmp22; tmp02 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp00 ^ tmp31 ^ tmp25 ^ tmp23; tmp03 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp01 ^ tmp32 ^ tmp26 ^ tmp24; tmp04 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp02 ^ tmp33 ^ tmp27 ^ tmp25; tmp05 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp03 ^ tmp34 ^ tmp28 ^ tmp26; tmp06 = (t << 1) | (t >>> 31);\r\n\t\t\tt = tmp04 ^ tmp35 ^ tmp29 ^ tmp27; tmp07 = (t << 1) | (t >>> 31);\r\n\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp24 + const3; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp25 + const3; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp26 + const3; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp27 + const3; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp28 + const3; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp29 + const3; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp30 + const3; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp31 + const3; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp32 + const3; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp33 + const3; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp34 + const3; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp35 + const3; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp00 + const3; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp01 + const3; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp02 + const3; c = (c << 30) | (c >>> 2);\r\n\t\t\te += ((a << 5) | (a >>> 27)) + (b ^ c ^ d) + tmp03 + const3; b = (b << 30) | (b >>> 2);\r\n\t\t\td += ((e << 5) | (e >>> 27)) + (a ^ b ^ c) + tmp04 + const3; a = (a << 30) | (a >>> 2);\r\n\t\t\tc += ((d << 5) | (d >>> 27)) + (e ^ a ^ b) + tmp05 + const3; e = (e << 30) | (e >>> 2);\r\n\t\t\tb += ((c << 5) | (c >>> 27)) + (d ^ e ^ a) + tmp06 + const3; d = (d << 30) | (d >>> 2);\r\n\t\t\ta += ((b << 5) | (b >>> 27)) + (c ^ d ^ e) + tmp07 + const3; c = (c << 30) | (c >>> 2);\r\n\r\n\t\t\tthis.H_[0] = (this.H_[0] + a) & 0xffffffff;\r\n\t\t\tthis.H_[1] = (this.H_[1] + b) & 0xffffffff;\r\n\t\t\tthis.H_[2] = (this.H_[2] + c) & 0xffffffff;\r\n\t\t\tthis.H_[3] = (this.H_[3] + d) & 0xffffffff;\r\n\t\t\tthis.H_[4] = (this.H_[4] + e) & 0xffffffff;\r\n\t\t},\r\n\r\n\t\tfillzero : function(size) {\r\n\t\t\tvar buf = \"\";\r\n\t\t\tfor (var i = 0; i < size; i++) {\r\n\t\t\t\tbuf += \"\\x00\";\r\n\t\t\t}\r\n\t\t\treturn buf;\r\n\t\t},\r\n\r\n\t\tmain : function(buf, bufSize, update, self, charSize) {\r\n\t\t\tif (charSize == 1) {\r\n\t\t\t\tvar totalBitSize = bufSize * 8;\r\n\t\t\t\twhile (bufSize >= 64) {\r\n\t\t\t\t\tself[update](buf, charSize);\r\n\t\t\t\t\tbuf = buf.substr(64);\r\n\t\t\t\t\tbufSize -= 64;\r\n\t\t\t\t}\r\n\t\t\t\tbuf +=\"\\x80\";\r\n\t\t\t\tif (bufSize >= 56) {\r\n\t\t\t\t\tbuf += this.fillzero(63 - bufSize);\r\n\t\t\t\t\tself[update](buf, charSize);\r\n\t\t\t\t\tbuf = this.fillzero(56);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += this.fillzero(55 - bufSize);\r\n\t\t\t\t}\r\n\t\t\t\tbuf += \"\\x00\\x00\\x00\\x00\"; // in stead of (totalBitSize) >> 32\r\n\t\t\t\tbuf += String.fromCharCode(totalBitSize >>> 24, (totalBitSize >>> 16) & 0xff, (totalBitSize >>> 8) & 0xff, totalBitSize & 0xff);\r\n\t\t\t\tself[update](buf, charSize);\r\n\t\t\t} else {\r\n\t\t\t\t/* charSize == 2 */\r\n\t\t\t\tvar totalBitSize = bufSize * 16;\r\n\t\t\t\twhile (bufSize >= 32) {\r\n\t\t\t\t\tself[update](buf, charSize);\r\n\t\t\t\t\tbuf = buf.substr(32);\r\n\t\t\t\t\tbufSize -= 32;\r\n\t\t\t\t}\r\n\t\t\t\tbuf +=\"\\x80\";\r\n\t\t\t\tif (bufSize >= 28) {\r\n\t\t\t\t\tbuf += this.fillzero(31 - bufSize);\r\n\t\t\t\t\tself[update](buf, charSize);\r\n\t\t\t\t\tbuf = this.fillzero(28);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuf += this.fillzero(27 - bufSize);\r\n\t\t\t\t}\r\n\t\t\t\tbuf += \"\\x00\\x00\"; // in stead of (totalBitSize) >> 32\r\n\t\t\t\ttotalBitSize = this.swap32(totalBitSize);\r\n\t\t\t\tbuf += String.fromCharCode(totalBitSize & 65535, totalBitSize >>> 16);\r\n\t\t\t\tself[update](buf, charSize);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tVERSION : \"1.0\",\r\n\t\tBY_ASCII : 0,\r\n\t\tBY_UTF16 : 1,\r\n\r\n\t\tcalc_Fx : function(msg, mode) {\r\n\t\t\tvar charSize = (arguments.length == 2 && mode == this.BY_UTF16) ? 2 : 1;\r\n\t\t\tthis.H_ = [0x07452301, 0x0c, 0x07cdab89, 0x1d, 0x00badcfe, 0x13, 0x00325476, 0x02, 0x03d2e1f0, 0x18];\r\n\t\t\tthis.main(msg, msg.length, \"update_Fx\", this, charSize);\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i = 0; i < 5; i++) {\r\n\t\t\t\tret += this.int32toBE((this.H_[2 * i + 1] << 27) + this.H_[2 * i]);\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\tcalc_std : function(msg, mode) {\r\n\t\t\tvar charSize = (arguments.length == 2 && mode == this.BY_UTF16) ? 2 : 1;\r\n\t\t\tthis.H_ = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\r\n\t\t\tthis.main(msg, msg.length, \"update_std\", this, charSize);\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i = 0; i < 5; i++) {\r\n\t\t\t\tret += this.int32toBE(this.H_[i]);\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t} // end of SHA1\r\n}; // end of CybozuLabs\r\n\r\nnew function() {\r\n\tCybozuLabs.SHA1.calc = navigator.userAgent.match(/Firefox/) ? CybozuLabs.SHA1.calc_Fx : CybozuLabs.SHA1.calc_std;\r\n};",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/sha1_$.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 549,
    "kind": "variable",
    "name": "CybozuLabs",
    "memberof": "src/util/string/hash/sha1_$.js",
    "static": true,
    "longname": "src/util/string/hash/sha1_$.js~CybozuLabs",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha1_$.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"SHA1\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 550,
    "kind": "file",
    "name": "src/util/string/hash/sha256.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { hashCore } from \"./core\";\r\nimport { fromBigEndian32, toBigEndian32, paddingData, ch, maj } from \"./lib\";\r\nimport { forIndex } from \"../../../utility/loop/index\";\r\n\r\nconst K = [\r\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\r\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\r\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n\r\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\r\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\r\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n\r\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\r\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\r\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n\r\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\r\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\r\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\r\n];\r\nconst blockLen = 64;\r\nconst initState = [\r\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\r\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\r\n];\r\nconst sttLen = initState.length;\r\n\r\nconst rotr = (_v, _s) => (\r\n    (_v >>> _s) | (_v << (32 - _s))\r\n);\r\n\r\nconst s0 = (value) => (\r\n    rotr(value, 7) ^ rotr(value, 18) ^ (value >>> 3)\r\n);\r\nconst s1 = (value) => (\r\n    rotr(value, 17) ^ rotr(value, 19) ^ (value >>> 10)\r\n);\r\nconst S0 = (value) => (\r\n    rotr(value, 2) ^ rotr(value, 13) ^ rotr(value, 22)\r\n);\r\nconst S1 = (value) => (\r\n    rotr(value, 6) ^ rotr(value, 11) ^ rotr(value, 25)\r\n);\r\n\r\nconst round = (_block) => {\r\n    const state = [...initState];\r\n    for(let i = 0;i < _block.length;i += blockLen){\r\n        const stateRef = [...state];\r\n        const x = toBigEndian32(_block.slice(i, i + blockLen));\r\n        for(let j = 16;j < 64;j++)\r\n            x[j] = s1(x[j - 2]) + x[j - 7] + s0(x[j - 15]) + x[j - 16];\r\n        forIndex(64, (index)=>{\r\n            const chTemp = ch(...state.slice(4, 7));\r\n            const temp1 = state[7] + S1(state[4]) + chTemp + K[index] + x[index];\r\n            const temp2 = S0(state[0]) + maj(...state.slice(0, 3));\r\n            state[3] += temp1;\r\n            state.unshift(temp1 + temp2);\r\n            state.pop();\r\n        });\r\n        forIndex(sttLen, (index)=>{\r\n            state[index] += stateRef[index];\r\n        });\r\n    }\r\n    return fromBigEndian32(state);\r\n};\r\n\r\n/**\r\n * SHA-256\r\n * @param {string} text\r\n * @param {\"hex\" | \"binary\" | \"dec\"} [format]\r\n */\r\nexport const SHA256 = (text, format) => (\r\n    hashCore(text, format, round, paddingData)\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/hash/sha256.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 551,
    "kind": "variable",
    "name": "K",
    "memberof": "src/util/string/hash/sha256.js",
    "static": true,
    "longname": "src/util/string/hash/sha256.js~K",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 552,
    "kind": "variable",
    "name": "blockLen",
    "memberof": "src/util/string/hash/sha256.js",
    "static": true,
    "longname": "src/util/string/hash/sha256.js~blockLen",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 553,
    "kind": "variable",
    "name": "initState",
    "memberof": "src/util/string/hash/sha256.js",
    "static": true,
    "longname": "src/util/string/hash/sha256.js~initState",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 554,
    "kind": "variable",
    "name": "sttLen",
    "memberof": "src/util/string/hash/sha256.js",
    "static": true,
    "longname": "src/util/string/hash/sha256.js~sttLen",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 555,
    "kind": "function",
    "name": "rotr",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~rotr",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "_v",
        "types": [
          "*"
        ]
      },
      {
        "name": "_s",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 556,
    "kind": "function",
    "name": "s0",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~s0",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 557,
    "kind": "function",
    "name": "s1",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~s1",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 558,
    "kind": "function",
    "name": "S0",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~S0",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 559,
    "kind": "function",
    "name": "S1",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~S1",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 560,
    "kind": "function",
    "name": "round",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~round",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "_block",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "SHA256",
    "memberof": "src/util/string/hash/sha256.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/string/hash/sha256.js~SHA256",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/string/hash/sha256.js",
    "importStyle": "{SHA256}",
    "description": "SHA-256",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "\"hex\" ",
          " \"binary\" ",
          " \"dec\""
        ],
        "spread": false,
        "optional": true,
        "name": "format",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 562,
    "kind": "file",
    "name": "src/util/string/index.js",
    "content": "\r\nexport * from \"./hash/index.js\";\r\nexport * from \"./diff/index.js\";\r\nexport * from \"./format.js\";\r\nexport * from \"./base64\";\r\nexport * from \"./enigma\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/string/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 563,
    "kind": "file",
    "name": "src/util/typeof.js",
    "content": "\r\n/**\r\n * @typedef {\"Int8Array\"|\r\n * \"Uint8Array\"|\r\n * \"Uint8ClampedArray\"|\r\n * \"Int16Array\"|\r\n * \"Uint16Array\"|\r\n * \"Int32Array\"|\r\n * \"Uint32Array\"|\r\n * \"Float32Array\"|\r\n * \"Float64Array\"} TypedArray\r\n */\r\n\r\n/**\r\n * @typedef {\"Map\" | \"Set\" | \"WeakMap\" | \"WeakSet\"} MapSet\r\n */\r\n\r\n/**\r\n * デフォルトで`Object.prototype.toString.call`の返り値として考えられるすべてのパターンです。\r\n * たぶん。\r\n *\r\n * @typedef {\"Null\"|\r\n * \"Undefined\"|\r\n * \"Number\"|\r\n * \"String\"|\r\n * \"Boolean\"|\r\n * \"Symbol\"|\r\n * \"Function\"|\r\n * \"Object\"|\r\n * \"Array\"|\r\n * \"Arguments\"|\r\n * \"RegExp\"|\r\n * \"Date\"|\r\n * \"Math\"|\r\n * \"JSON\"|\r\n * \"Error\"|\r\n * \"Promise\"|\r\n * \"GeneratorFunction\" | \"Generator\"|\r\n * MapSet |\r\n * TypedArray | \"ArrayBuffer\" |\r\n * \"DataView\"}\r\n * ObjectToStringTypes\r\n */\r\n\r\n/**\r\n * You can add the type by changing the \"Symbol.toStringTag\" property of the object.\r\n * オブジェクトの\"Symbol.toStringTag\"プロパティーを変更することで、型を追加できます。\r\n *\r\n * thinking: 返り値はSymbol.toStringTagを考慮してstring型にすべきか？\r\n * @param {*} value An object that determines the type\r\n * @return {ObjectToStringTypes & string} object type\r\n */\r\nexport const typeOf = (value)=>(\r\n    Object.prototype.toString.call(value).slice(8, -1)\r\n);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/util/typeof.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 564,
    "kind": "typedef",
    "name": "TypedArray",
    "memberof": "src/util/typeof.js",
    "static": true,
    "longname": "src/util/typeof.js~TypedArray",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "\"Int8Array\"",
        "\n\"Uint8Array\"",
        "\n\"Uint8ClampedArray\"",
        "\n\"Int16Array\"",
        "\n\"Uint16Array\"",
        "\n\"Int32Array\"",
        "\n\"Uint32Array\"",
        "\n\"Float32Array\"",
        "\n\"Float64Array\""
      ],
      "optional": false,
      "name": "TypedArray"
    }
  },
  {
    "__docId__": 565,
    "kind": "typedef",
    "name": "MapSet",
    "memberof": "src/util/typeof.js",
    "static": true,
    "longname": "src/util/typeof.js~MapSet",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "\"Map\" ",
        " \"Set\" ",
        " \"WeakMap\" ",
        " \"WeakSet\""
      ],
      "optional": false,
      "name": "MapSet"
    }
  },
  {
    "__docId__": 566,
    "kind": "typedef",
    "name": "ObjectToStringTypes",
    "memberof": "src/util/typeof.js",
    "static": true,
    "longname": "src/util/typeof.js~ObjectToStringTypes",
    "access": "public",
    "description": "デフォルトで`Object.prototype.toString.call`の返り値として考えられるすべてのパターンです。\nたぶん。",
    "type": {
      "types": [
        "\"Null\"",
        "\n\"Undefined\"",
        "\n\"Number\"",
        "\n\"String\"",
        "\n\"Boolean\"",
        "\n\"Symbol\"",
        "\n\"Function\"",
        "\n\"Object\"",
        "\n\"Array\"",
        "\n\"Arguments\"",
        "\n\"RegExp\"",
        "\n\"Date\"",
        "\n\"Math\"",
        "\n\"JSON\"",
        "\n\"Error\"",
        "\n\"Promise\"",
        "\n\"GeneratorFunction\" ",
        " \"Generator\"",
        "\nMapSet ",
        "\nTypedArray ",
        " \"ArrayBuffer\" ",
        "\n\"DataView\""
      ],
      "optional": false,
      "name": "ObjectToStringTypes"
    }
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "typeOf",
    "memberof": "src/util/typeof.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/typeof.js~typeOf",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/util/typeof.js",
    "importStyle": "{typeOf}",
    "description": "You can add the type by changing the \"Symbol.toStringTag\" property of the object.\nオブジェクトの\"Symbol.toStringTag\"プロパティーを変更することで、型を追加できます。\n\nthinking: 返り値はSymbol.toStringTagを考慮してstring型にすべきか？",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "An object that determines the type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ObjectToStringTypes & string"
      ],
      "spread": false,
      "description": "object type"
    }
  },
  {
    "__docId__": 568,
    "kind": "file",
    "name": "src/utility/condition/assert-type.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isArray, isFunction } from \"../../util/is/type.js\";\r\nimport { typeOf } from \"../../util/typeof.js\";\r\nimport { callOrElse } from \"./call-or-else.js\";\r\n\r\n/**\r\n * @param {*} value\r\n * @param {string | function | (string | function)[]} types\r\n * @param {function} typeGetter\r\n */\r\nexport const assertType = (value, types, typeGetter=typeOf)=>{\r\n    if(!isArray(types))types = [types];\r\n    const some = types.some((type) => callOrElse(type, false, value));\r\n    const type = typeGetter(value);\r\n    if(some || types.includes(type))\r\n        return;\r\n    throw new TypeError(`Type \"${type}\" is not included in ${types.map((type)=>(\r\n        isFunction(type) ? type.name : type\r\n    ))}`);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/condition/assert-type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 569,
    "kind": "function",
    "name": "assertType",
    "memberof": "src/utility/condition/assert-type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/condition/assert-type.js~assertType",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/condition/assert-type.js",
    "importStyle": "{assertType}",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function ",
          " (string ",
          " function)[]"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "typeGetter",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 570,
    "kind": "file",
    "name": "src/utility/condition/call-or-else.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isFunction } from \"../../util/is/type.js\";\r\n\r\n/**\r\n * NOTE: tryCall\r\n * @param {*} value\r\n * @param {*} subValue valueが関数ではなかった場合に返される値。\r\n * 指定されなかった場合はvalueが指定される。\r\n * @param  {...any} args valueが関数だった場合の引数\r\n */\r\nexport const callOrElse = function(value, subValue=value, ...args){\r\n    return isFunction(value)\r\n        ? value.apply(this, args)\r\n        : subValue;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/condition/call-or-else.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 571,
    "kind": "function",
    "name": "callOrElse",
    "memberof": "src/utility/condition/call-or-else.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/condition/call-or-else.js~callOrElse",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/condition/call-or-else.js",
    "importStyle": "{callOrElse}",
    "description": "NOTE: tryCall",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "subValue",
        "description": "valueが関数ではなかった場合に返される値。\n指定されなかった場合はvalueが指定される。"
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "valueが関数だった場合の引数"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "file",
    "name": "src/utility/condition/index.js",
    "content": "\r\nexport * from \"./assert-type.js\";\r\nexport * from \"./call-or-else.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/condition/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 573,
    "kind": "file",
    "name": "src/utility/condition.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isNullLike, isArray } from \"../util/is/type.js\";\r\nimport { typeOf } from \"../util/typeof.js\";\r\nimport { forOf } from \"./loop/for-of.js\";\r\nimport { has } from \"../object/property/has.js\";\r\n\r\n// TODO: コールバック関数のthisを指定できる高階関数のthatの指定の仕方を変更。\r\n// 高階関数自体のthisを継承する。\r\n// f(cbFunc, that) => f.call(that, cbFunc)\r\n\r\n/**\r\n * Returns the first found value. If not found, it returns the last value.\r\n *\r\n * 値の中で最初に見つかった値を返します。見つからない場合、最後の値を返します。\r\n *\r\n * @param {*[]} values Value and alternate value. Higher priority to the left\r\n * @param {function(any): boolean} evalFunc\r\n * A function that evaluates a value. Returning a true value is considered an invalid value.\r\n * 値を評価する関数。trulyな値を返すと無効な値とみなされる\r\n */\r\nexport const substitute = (values, evalFunc=isNullLike)=>(\r\n    values.reduce((value, subValue)=>(\r\n        evalFunc(value) ? subValue : value\r\n    ), values.shift())\r\n);\r\n\r\n/**\r\n * Beta:\r\n * @param {*} value\r\n * @param {*} types\r\n * @param {*} sub\r\n * @param {*} typeGetter\r\n */\r\nexport const typeCheck = (value, types, sub, typeGetter=typeOf)=>{\r\n    const type = typeGetter(value);\r\n    if(types.includes(type))\r\n        return value;\r\n    return callOrElse(sub, [type]);\r\n};\r\n\r\n// IDEA: foldは参照型のオブジェクトはreturnいらず。\r\n/**\r\n * Beta:\r\n * @param {*} origin\r\n * @param {*} patchObject\r\n * @param {boolean} toOrigin\r\n * @param {function(any): boolean} [subFunc]\r\n */\r\nexport const patch = (origin, patchObject, toOrigin=true, subFunc)=>{\r\n    const target = toOrigin ? origin : {};\r\n    forOf(Object.entries(patchObject), ([key, value])=>{\r\n        target[key] = has(origin, key)\r\n            ? substitute([origin[key], value], subFunc)\r\n            : patchObject[key];\r\n    });\r\n    return target;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/condition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 574,
    "kind": "function",
    "name": "substitute",
    "memberof": "src/utility/condition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/condition.js~substitute",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/condition.js",
    "importStyle": "{substitute}",
    "description": "Returns the first found value. If not found, it returns the last value.\n\n値の中で最初に見つかった値を返します。見つからない場合、最後の値を返します。",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "*[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "Value and alternate value. Higher priority to the left"
      },
      {
        "nullable": null,
        "types": [
          "function(any): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "evalFunc",
        "description": "A function that evaluates a value. Returning a true value is considered an invalid value.\n値を評価する関数。trulyな値を返すと無効な値とみなされる"
      }
    ],
    "return": null
  },
  {
    "__docId__": 575,
    "kind": "function",
    "name": "typeCheck",
    "memberof": "src/utility/condition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/condition.js~typeCheck",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/condition.js",
    "importStyle": "{typeCheck}",
    "description": "Beta:",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sub",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "typeGetter",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 576,
    "kind": "function",
    "name": "patch",
    "memberof": "src/utility/condition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/condition.js~patch",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/condition.js",
    "importStyle": "{patch}",
    "description": "Beta:",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "patchObject",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "toOrigin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(any): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "subFunc",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "file",
    "name": "src/utility/generator.js",
    "content": "\r\nimport { iterate } from \"./loop/iterate.js\";\r\n\r\nexport const tryCatch = (tryFunc, catcher)=>{\r\n    try{\r\n        return tryFunc();\r\n    }catch(error){\r\n        return (catcher || console.error)(error);\r\n    }\r\n};\r\n\r\nclass Yields {\r\n    constructor(parent){\r\n        this.phase = 0;\r\n        this.parent = parent;\r\n        this.return = parent.return.bind(parent);\r\n    }\r\n    goto(number){\r\n        this.isMove = true;\r\n        this.phase = number;\r\n    }\r\n    yield(value){\r\n        this.parent.resultStack.push(value);\r\n        return this.parent.value;\r\n    }\r\n    yield$(values){\r\n        values = iterate(values);\r\n        values.next();\r\n        // forOf.call(this, values, this.yield);\r\n        return this.parent.value;\r\n    }\r\n}\r\n\r\nconst result = (value, done=true)=>({ value, done });\r\n\r\nclass Generator {\r\n    constructor(func){\r\n        this.cb = func;\r\n        this.resultStack = [];\r\n        this.done = false;\r\n        this.yields = new Yields(this);\r\n    }\r\n    [Symbol.iterator](){\r\n        return this;\r\n    }\r\n    next(value){\r\n        this.value = value;\r\n        while(!this.resultStack.length){\r\n            this.cb(this.yields);\r\n            if(this.yields.isMove)\r\n                this.yields.isMove = false;\r\n            else this.yields.phase++;\r\n            if(this.done)return result();\r\n        }\r\n        return result(this.resultStack.shift(), this.done);\r\n    }\r\n    return(value){\r\n        this.done = true;\r\n        this.resultStack.length = 0;\r\n        return result(value);\r\n    }\r\n    throw(){ return this.next(); }\r\n}\r\n\r\n/**\r\n * @param {function(Yields): void} func\r\n * @return {Generator}\r\n */\r\nexport const generator = (func)=>new Generator(func);\r\n\r\n// void ((_)=>{\r\n//     switch(_.phase){\r\n//     case 0:\r\n//         return _.yield(0);\r\n//     case 1:\r\n//         _.yield([1,2,3,4]);\r\n//         return _.yield$([1,2,3,4]);\r\n//     case 2:\r\n//         return _.return(\"return\");\r\n//     case 3:\r\n//         _.goto(0);\r\n//     }\r\n// });\r\n// let i = 0;\r\n// const countor = generator((_)=>{\r\n//     switch(_.phase){\r\n//     case 0:\r\n//         _.goto(0);\r\n//         return i <= 10\r\n//             ? _.yield(i++)\r\n//             : _.return(\"return\");\r\n//     }\r\n// });\r\n// forOf(countor(10), console.log);\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 578,
    "kind": "function",
    "name": "tryCatch",
    "memberof": "src/utility/generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/generator.js~tryCatch",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/generator.js",
    "importStyle": "{tryCatch}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "tryFunc",
        "types": [
          "*"
        ]
      },
      {
        "name": "catcher",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 579,
    "kind": "class",
    "name": "Yields",
    "memberof": "src/utility/generator.js",
    "static": true,
    "longname": "src/utility/generator.js~Yields",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/generator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 580,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utility/generator.js~Yields",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Yields#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 581,
    "kind": "member",
    "name": "phase",
    "memberof": "src/utility/generator.js~Yields",
    "static": false,
    "longname": "src/utility/generator.js~Yields#phase",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 582,
    "kind": "member",
    "name": "parent",
    "memberof": "src/utility/generator.js~Yields",
    "static": false,
    "longname": "src/utility/generator.js~Yields#parent",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 583,
    "kind": "member",
    "name": "return",
    "memberof": "src/utility/generator.js~Yields",
    "static": false,
    "longname": "src/utility/generator.js~Yields#return",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 584,
    "kind": "method",
    "name": "goto",
    "memberof": "src/utility/generator.js~Yields",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Yields#goto",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "number",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 585,
    "kind": "member",
    "name": "isMove",
    "memberof": "src/utility/generator.js~Yields",
    "static": false,
    "longname": "src/utility/generator.js~Yields#isMove",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "yield",
    "memberof": "src/utility/generator.js~Yields",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Yields#yield",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "yield$",
    "memberof": "src/utility/generator.js~Yields",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Yields#yield$",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "values",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 589,
    "kind": "function",
    "name": "result",
    "memberof": "src/utility/generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/generator.js~result",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/generator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "done",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 590,
    "kind": "class",
    "name": "Generator",
    "memberof": "src/utility/generator.js",
    "static": true,
    "longname": "src/utility/generator.js~Generator",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/generator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 591,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utility/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Generator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 592,
    "kind": "member",
    "name": "cb",
    "memberof": "src/utility/generator.js~Generator",
    "static": false,
    "longname": "src/utility/generator.js~Generator#cb",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 593,
    "kind": "member",
    "name": "resultStack",
    "memberof": "src/utility/generator.js~Generator",
    "static": false,
    "longname": "src/utility/generator.js~Generator#resultStack",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 594,
    "kind": "member",
    "name": "done",
    "memberof": "src/utility/generator.js~Generator",
    "static": false,
    "longname": "src/utility/generator.js~Generator#done",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 595,
    "kind": "member",
    "name": "yields",
    "memberof": "src/utility/generator.js~Generator",
    "static": false,
    "longname": "src/utility/generator.js~Generator#yields",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 596,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/utility/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Generator#[Symbol.iterator]",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "method",
    "name": "next",
    "memberof": "src/utility/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Generator#next",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "value",
    "memberof": "src/utility/generator.js~Generator",
    "static": false,
    "longname": "src/utility/generator.js~Generator#value",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "method",
    "name": "return",
    "memberof": "src/utility/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Generator#return",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "throw",
    "memberof": "src/utility/generator.js~Generator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/generator.js~Generator#throw",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 602,
    "kind": "function",
    "name": "generator",
    "memberof": "src/utility/generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/generator.js~generator",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/generator.js",
    "importStyle": "{generator}",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(Yields): void"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Generator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 603,
    "kind": "file",
    "name": "src/utility/getIndex.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isNullLike, isNegative } from \"../util/is/index.js\";\r\n/**\r\n * 最後から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} index\r\n */\r\nexport const last = (orign, index=1)=>(\r\n    orign[orign.length - index]\r\n);\r\n\r\n/**\r\n * 最初から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} index\r\n */\r\nexport const first = (orign, index=1)=>(\r\n    orign[index - 1]\r\n);\r\n\r\n/**\r\n * @private\r\n * @param {ArrayLike} orign\r\n * @param {Number} index\r\n */\r\nconst getIndex = (orign, index=0)=>(\r\n    isNegative(index)\r\n        ? orign.length + index\r\n        : index\r\n);\r\n\r\n/**\r\n * 元のオブジェクトへの破壊的な変更を行わず、新しい配列を作成します。\r\n * @param {string | array} origin 元のオブジェクト\r\n * @param {number} start 切り取り開始位置\r\n * @param {number} cutCount 切り取る長さ\r\n * @param {...any} insertItems 挿入する要素\r\n */\r\nexport const splice = (origin, start=0, cutCount=0, ...insertItems)=>{\r\n    if(isNegative(cutCount))\r\n        start -= cutCount = -cutCount;\r\n    const startIndex = isNegative(start)\r\n        ? origin.length + start\r\n        : start;\r\n    const before = origin.slice(0, startIndex);\r\n    const after = origin.slice(startIndex + cutCount);\r\n    // @ts-ignore\r\n    return before.concat(...insertItems, after);\r\n};\r\n\r\n/**\r\n * indexが正の数なら最初から、負の数なら最後から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {string | array} orign 元の要素\r\n * @param {Number} index\r\n * @param {string | array} [insert]\r\n */\r\nexport const index = (orign, index=0, insert)=>{\r\n    if(isNullLike(insert))\r\n        return orign[getIndex(orign, index)];\r\n    return splice(orign, index, 1, insert);\r\n};\r\n\r\n/**\r\n *\r\n * @param {Iterable} iterable\r\n * @param {Number} index\r\n */\r\nexport const iterableIndex = (iterable, index)=>{\r\n    const iterator = iterable[Symbol.iterator]();\r\n    // if(isNegative(index))index += orign.length;\r\n    for(;--index;)iterator.next();\r\n    return iterator.next().value;\r\n};\r\n\r\n/**\r\n * Beta:\r\n * 分割代入拡張\r\n *\r\n * @param {Array} array 元の配列\r\n * @param {Number} beforeItem restの前のパラメータの数\r\n * @param {Number} afterItem restの後のパラメータの数\r\n * @return\r\n * @example\r\n * const arr = [1,2,3,4,5,6,7,8];\r\n * const [a, b, rest, y, z] = restSplit(arr, 2, 2);\r\n * // a = 1, b = 2\r\n * // rest = [3,4,5,6]\r\n * // y = 7, z = 8\r\n * // const [a, b, ...rest, y, z] = arr;\r\n */\r\nexport const restSplit = (array, beforeItem, afterItem=0)=>{\r\n    const restEndIndex = array.length - afterItem;\r\n    const rest = array.slice(beforeItem, restEndIndex);\r\n    array.splice(beforeItem, restEndIndex - beforeItem, rest);\r\n    return array;\r\n};\r\n\r\n// classifying\r\n// const [key, name=\"the name\", ...rest, param{3}] = ArrayLike();\r\n// [difault, ...]\r\n// const {key, key: name, ...rest} = ObjectLike();\r\n// {key: null || name || [name, difault], ...}\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/getIndex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 604,
    "kind": "function",
    "name": "last",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~last",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{last}",
    "description": "最後から数えて`index`番目の要素を取得します。",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "orign",
        "description": "元の要素"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 605,
    "kind": "function",
    "name": "first",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~first",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{first}",
    "description": "最初から数えて`index`番目の要素を取得します。",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "orign",
        "description": "元の要素"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 606,
    "kind": "function",
    "name": "getIndex",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~getIndex",
    "access": "private",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayLike"
        ],
        "spread": false,
        "optional": false,
        "name": "orign",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 607,
    "kind": "function",
    "name": "splice",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~splice",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{splice}",
    "description": "元のオブジェクトへの破壊的な変更を行わず、新しい配列を作成します。",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "string ",
          " array"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "元のオブジェクト"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "切り取り開始位置"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cutCount",
        "description": "切り取る長さ"
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "insertItems",
        "description": "挿入する要素"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 608,
    "kind": "function",
    "name": "index",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~index",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{index}",
    "description": "indexが正の数なら最初から、負の数なら最後から数えて`index`番目の要素を取得します。",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string ",
          " array"
        ],
        "spread": false,
        "optional": false,
        "name": "orign",
        "description": "元の要素"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " array"
        ],
        "spread": false,
        "optional": true,
        "name": "insert",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 609,
    "kind": "function",
    "name": "iterableIndex",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~iterableIndex",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{iterableIndex}",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 610,
    "kind": "function",
    "name": "restSplit",
    "memberof": "src/utility/getIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/getIndex.js~restSplit",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/getIndex.js",
    "importStyle": "{restSplit}",
    "description": "Beta:\n分割代入拡張",
    "examples": [
      "const arr = [1,2,3,4,5,6,7,8];\nconst [a, b, rest, y, z] = restSplit(arr, 2, 2);\n// a = 1, b = 2\n// rest = [3,4,5,6]\n// y = 7, z = 8\n// const [a, b, ...rest, y, z] = arr;"
    ],
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "元の配列"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "beforeItem",
        "description": "restの前のパラメータの数"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "afterItem",
        "description": "restの後のパラメータの数"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 611,
    "kind": "file",
    "name": "src/utility/index.js",
    "content": "\r\nexport * from \"./condition.js\";\r\nexport * from \"./condition/index.js\";\r\nexport * from \"./generator.js\";\r\nexport * from \"./getIndex.js\";\r\nexport * from \"./loop/index.js\";\r\nexport * from \"./later.js\";\r\nexport * from \"./utility.js\";\r\n// export * from \"./sort/index.js\";\r\n\r\nimport { forIndex } from \"./loop/index.js\";\r\n// TEMP:\r\n// export class ArrayLike extends Array {\r\n//     constructor(){\r\n//         super();\r\n//         console.log(this);\r\n//     }\r\n// }\r\n// export class Memo {\r\n//     constructor(func){\r\n//         this.function = func;\r\n//         this.existing = new Map();\r\n//     }\r\n//     execute(args){\r\n//         if(this.existing.has(args))\r\n//             return this.existing.get(args);\r\n//         const result = execute(this.function, args);\r\n//         this.existing.set(args, result);\r\n//         return result;\r\n//     }\r\n// }\r\n// String instruction\r\n\r\n// export const memoize = (func, effective=Infinity)=>{\r\n//     const newFunc = function(){\r\n//         const prevResult = forOf(newFunc.memo, (fragment, result)=>{\r\n//             if(deepEquals(fragment))\r\n//                 return result;\r\n//             return void 0;\r\n//         });\r\n//         if(isUndefined(prevResult))\r\n//             return prevResult;\r\n//         // eslint-disable-next-line prefer-rest-params\r\n//         const result = func.apply(this, arguments);\r\n//         newFunc.memo.set(arguments, result);\r\n//         return result;\r\n//     };\r\n//     if(Array.isArray(effective)){\r\n//         newFunc.memo = new Array(effective.length);\r\n//         forIndex(effective.length, i=>{\r\n//             newFunc.memo[i] = new Map(effective[i]);\r\n//         });\r\n//     }else{\r\n//         const length = substitute([effective,1], v=>!Number.isFinite(v));\r\n//         newFunc.memo = new Array(length);\r\n//         forIndex(length, i=>{\r\n//             newFunc.memo[i] = new Map();\r\n//         });\r\n//     }\r\n//     return newFunc;\r\n// };\r\n\r\n// export class MemoMap {\r\n//     constructor(initValue){\r\n//         this.map = new Map(initValue);\r\n//     }\r\n// }\r\n\r\n// MEMO: ifs スタック\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 612,
    "kind": "file",
    "name": "src/utility/later.js",
    "content": "\r\n// @ts-check\r\n\r\n/**\r\n * @param {Function} func\r\n * @example\r\n * const print = later((obj, key)=>{\r\n *     console.log(obj[key]);\r\n * });\r\n *\r\n * const printhoge = print(\"hoge\");\r\n *\r\n * printhoge({hoge: \"hello world!\"});\r\n * // > hello world!\r\n */\r\nexport const later = (func)=>(\r\n    function(...args){\r\n        return (first)=>func.call(this, first, ...args);\r\n    }\r\n);\r\n\r\nconst _ = (functions)=>{\r\n    let count = 0;\r\n    const __ = function(){\r\n        functions[count++].apply(this, arguments);\r\n        count === functions.length && (count = 0);\r\n        return __;\r\n    };\r\n    return __;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/later.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 613,
    "kind": "function",
    "name": "later",
    "memberof": "src/utility/later.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/later.js~later",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/later.js",
    "importStyle": "{later}",
    "description": "",
    "examples": [
      "const print = later((obj, key)=>{\n    console.log(obj[key]);\n});\n\nconst printhoge = print(\"hoge\");\n\nprinthoge({hoge: \"hello world!\"});\n// > hello world!"
    ],
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "function",
    "name": "_",
    "memberof": "src/utility/later.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/later.js~_",
    "access": "private",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/later.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "functions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 615,
    "kind": "file",
    "name": "src/utility/loop/each/chunk.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isFunction } from \"../../../util/is/index\";\r\nimport { assertType } from \"../../condition/index\";\r\nimport { previous } from \"../order\";\r\n\r\nconst not = (value)=>(\r\n    isFunction(value)\r\n        ? function(){ return !value.apply(this, arguments); }\r\n        : !value\r\n);\r\n\r\n/**\r\n * @param {string | any[]} array\r\n * @param {number} size 幾つごとに塊に分けるか\r\n */\r\nexport const chunk = (array, size)=>{\r\n    assertType(array, [\"String\", \"Array\"]);\r\n    assertType(size, \"Number\");\r\n    let index = 0;\r\n    return previous(Math.ceil(array.length / size), (result)=>{\r\n        result.push(array.slice(index, (index += size)));\r\n    }, []);\r\n};\r\n\r\n/**\r\n * @param {*} array\r\n * @param {*} count 幾つの塊に分けるか\r\n */\r\nexport const split = (array, count)=>{\r\n    assertType(array, [\"String\", \"Array\"]);\r\n    assertType(count, \"Number\");\r\n    let index = 0;\r\n    return previous(count, (result)=>{\r\n        result.push(array.slice(index, (index += Math.round(array.length / count))));\r\n    }, []);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each/chunk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 616,
    "kind": "function",
    "name": "not",
    "memberof": "src/utility/loop/each/chunk.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/chunk.js~not",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/loop/each/chunk.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 617,
    "kind": "function",
    "name": "chunk",
    "memberof": "src/utility/loop/each/chunk.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/chunk.js~chunk",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each/chunk.js",
    "importStyle": "{chunk}",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string ",
          " any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "幾つごとに塊に分けるか"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "function",
    "name": "split",
    "memberof": "src/utility/loop/each/chunk.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/chunk.js~split",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each/chunk.js",
    "importStyle": "{split}",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": "幾つの塊に分けるか"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 619,
    "kind": "file",
    "name": "src/utility/loop/each/count.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { foldLeft } from \"../fold.js\";\r\n\r\n/**\r\n * @param {*} items\r\n * @param {function(any, string=): boolean} func\r\n * @return {number} eachしてfuncがtruelyの値を返した数\r\n */\r\nexport const count = function(items, func){\r\n    return foldLeft(items, (match, value, key)=>{\r\n        const flag = func.call(this, value, key);\r\n        return match + Boolean(flag);\r\n    }, 0);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each/count.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 620,
    "kind": "function",
    "name": "count",
    "memberof": "src/utility/loop/each/count.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/count.js~count",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each/count.js",
    "importStyle": "{count}",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(any, string=): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "eachしてfuncがtruelyの値を返した数"
    }
  },
  {
    "__docId__": 621,
    "kind": "file",
    "name": "src/utility/loop/each/group.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isObject } from \"../../../util/is/index.js\";\r\nimport { each } from \"../each.js\";\r\nimport { foldLeft } from \"../fold.js\";\r\n\r\n/**\r\n * @callback groupCB\r\n * @param {any} any\r\n * @return {PropertyKey | {[x: string]: any}}\r\n */\r\n\r\n/**\r\n * @param {*} array\r\n * @param {groupCB} func\r\n */\r\nexport const group = function(array, func=(value)=>value){\r\n    return foldLeft(array, (groups, value)=>{\r\n        const entry = func.call(this, value);\r\n        const entries = isObject(entry)\r\n            ? entry : { [entry]: value };\r\n        each(entries, (value, key)=>{\r\n            (\r\n                groups[key]\r\n                || (groups[key] = [])\r\n            ).push(value);\r\n        });\r\n    }, {});\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each/group.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 622,
    "kind": "function",
    "name": "group",
    "memberof": "src/utility/loop/each/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/group.js~group",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each/group.js",
    "importStyle": "{group}",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "groupCB"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 623,
    "kind": "file",
    "name": "src/utility/loop/each/index.js",
    "content": "\r\nexport * from \"./group.js\";\r\nexport * from \"./count.js\";\r\nexport * from \"./chunk.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 624,
    "kind": "file",
    "name": "src/utility/loop/each/partition.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isObject } from \"../../is/index.js\";\r\nimport { each } from \"../each.js\";\r\nimport { foldLeft } from \"../fold.js\";\r\n\r\n// clustering?\r\n// partition?\r\nexport const clustering = function(array, func){\r\n    return foldLeft(array, (groups, value)=>{\r\n        const entry = func.call(this, value);\r\n        (\r\n            groups[entry]\r\n            || (groups[entry] = [])\r\n        ).push(value);\r\n    }, {});\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each/partition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 625,
    "kind": "function",
    "name": "clustering",
    "memberof": "src/utility/loop/each/partition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each/partition.js~clustering",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each/partition.js",
    "importStyle": "{clustering}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 626,
    "kind": "file",
    "name": "src/utility/loop/each.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isArrayLike, isIterable } from \"../../util/is/util.js\";\r\nimport { forIndex } from \"./for-index.js\";\r\nimport { has } from \"../../object/property/has.js\";\r\nimport { forOf } from \"./for-of.js\";\r\nimport { loop } from \"./loop.js\";\r\n\r\n/**\r\n * @typedef {Object} prop\r\n * @property {boolean} [fromRight]\r\n * @property {boolean} [fold]\r\n * @property {function(any): boolean} [isBreak]\r\n * @property {function(any): PropertyKey[]} [keys]\r\n * @property {function} [frameWork]\r\n * @property {function} [engine]\r\n */\r\n\r\n/**\r\n * TODO: +break\r\n * @param {*} items\r\n * @param {function} func\r\n * @param {prop} props\r\n */\r\nexport const each = function(items, func, props={}){\r\n    const {\r\n        fromRight = false,\r\n        keys: getKeys = Object.keys,\r\n        fold,\r\n        frameWork = forOf,\r\n        engine = ()=>{},\r\n    } = props;\r\n    if(isArrayLike(items)){\r\n        const { length } = items;\r\n        const limit = fromRight ? -length : length;\r\n        forIndex(limit, (index)=>{\r\n            has(items, index)\r\n            && func.call(this, items[index], index, items);\r\n        }, props.isBreak);\r\n    }else if(isIterable(items)){\r\n        forOf(items, ()=>{});\r\n    }else{\r\n        const keys = getKeys(Object(items));\r\n        loop((index)=>{\r\n            const key = keys[index];\r\n            func.call(this, items[key], key, items);\r\n        }, {\r\n            limit: keys.length\r\n        });\r\n    }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/each.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 627,
    "kind": "typedef",
    "name": "prop",
    "memberof": "src/utility/loop/each.js",
    "static": true,
    "longname": "src/utility/loop/each.js~prop",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "fromRight",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "fold",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(any): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isBreak",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(any): PropertyKey[]"
        ],
        "spread": false,
        "optional": true,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "frameWork",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "engine",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "prop"
    }
  },
  {
    "__docId__": 628,
    "kind": "function",
    "name": "each",
    "memberof": "src/utility/loop/each.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/each.js~each",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/each.js",
    "importStyle": "{each}",
    "description": "TODO: +break",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 629,
    "kind": "file",
    "name": "src/utility/loop/fold.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { each } from \"./each.js\";\r\nimport { isDefined } from \"../../util/is/type.js\";\r\n\r\nconst foldEngine = (func, init)=>function(current){\r\n    const result = func.call(this, init, current);\r\n    isDefined(result) && (init = result);\r\n};\r\n\r\nexport const foldLeft = function(iterable, func, init){\r\n    each(iterable, (current)=>{\r\n        const result = func.call(this, init, current);\r\n        isDefined(result) && (init = result);\r\n    });\r\n    return init;\r\n};\r\n\r\nexport const fold = foldLeft;\r\n\r\nexport const foldRight = function(iterable, func, init){\r\n    each(iterable, (current)=>{\r\n        const result = func.call(this, init, current);\r\n        isDefined(result) && (init = result);\r\n    }, { fromRight: true });\r\n    return init;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/fold.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 630,
    "kind": "function",
    "name": "foldEngine",
    "memberof": "src/utility/loop/fold.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/fold.js~foldEngine",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/loop/fold.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      },
      {
        "name": "init",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 631,
    "kind": "function",
    "name": "foldLeft",
    "memberof": "src/utility/loop/fold.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/fold.js~foldLeft",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/fold.js",
    "importStyle": "{foldLeft}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "iterable",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      },
      {
        "name": "init",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 632,
    "kind": "variable",
    "name": "fold",
    "memberof": "src/utility/loop/fold.js",
    "static": true,
    "longname": "src/utility/loop/fold.js~fold",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/fold.js",
    "importStyle": "{fold}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 633,
    "kind": "function",
    "name": "foldRight",
    "memberof": "src/utility/loop/fold.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/fold.js~foldRight",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/fold.js",
    "importStyle": "{foldRight}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "iterable",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      },
      {
        "name": "init",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "file",
    "name": "src/utility/loop/for-index.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isUndefined } from \"../../util/is/index.js\";\r\nimport { assertType } from \"../condition/index.js\";\r\n\r\n/**\r\n * Call the callback function for each number from 0 to maxIndex.\r\n * 0からmaxIndexまでの数値ごとにコールバック関数を呼び出します。\r\n * @param {*} count Repeats this number of times\r\n * @param {function(Number): any} func\r\n * Callback function that is executed maxIndex times\r\n * When a value other than undefined is returned,\r\n * the loop is terminated and the value is returned.\r\n * @param {function(any): Boolean} [breakFunc]\r\n */\r\nexport const forIndex = function(count, func, breakFunc=isUndefined){\r\n    assertType(count, Number.isFinite);\r\n    assertType(func, \"Function\");\r\n    assertType(breakFunc, \"Function\");\r\n    const step = Math.sign(count),\r\n        isNeg = step === -1,\r\n        goal = isNeg ? -1 : count;\r\n    for(let index = isNeg ? -count + -1 : 0;\r\n        index !== goal;index += step){\r\n        const flag = func.call(this, index);\r\n        if(!breakFunc(flag))return flag;\r\n    }\r\n    return void 0;\r\n    // return forOf.call(this, range(--count), func, breakFunc);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/for-index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 635,
    "kind": "function",
    "name": "forIndex",
    "memberof": "src/utility/loop/for-index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/for-index.js~forIndex",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/for-index.js",
    "importStyle": "{forIndex}",
    "description": "Call the callback function for each number from 0 to maxIndex.\n0からmaxIndexまでの数値ごとにコールバック関数を呼び出します。",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": "Repeats this number of times"
      },
      {
        "nullable": null,
        "types": [
          "function(Number): any"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "Callback function that is executed maxIndex times\nWhen a value other than undefined is returned,\nthe loop is terminated and the value is returned."
      },
      {
        "nullable": null,
        "types": [
          "function(any): Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "breakFunc",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 636,
    "kind": "file",
    "name": "src/utility/loop/for-of.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isDefined } from \"../../util/is/index.js\";\r\nimport { iterate } from \"./iterate.js\";\r\nimport { loop } from \"./loop.js\";\r\nimport { assertType } from \"../condition/index.js\";\r\n\r\n/*\r\niterable protocolを使用して値ごとにコールバック関数を呼び出します。\r\nこれはfor...of文と同じように使用することができます。\r\nArrayLikeなオブジェクトはSymbolが定義されていない環境でも反復可能です。\r\n\r\nbreakFuncでfalsyと判断される値を返した場合、ループが終了し、値が返されます。\r\n\r\nループを継続するかどうか判断する関数。デフォルトでisUndefinedが指定されます。\r\n*/\r\n\r\n/**\r\n * Call the callback function for each value using the iterable protocol.\r\n * It can be used like a for ... of statement.\r\n * ArrayLike objects can be repeated in environments where Symbol is not defined.\r\n *\r\n * @template T\r\n * @param {Iterable<T>} iterable An Iterable object used for the loop\r\n * @param {function(T): any} func\r\n * A callback function that is executed for each value of the Iterable object.\r\n * If breakFunc returns a value that is determined to be falsy,\r\n * the loop ends and the value is returned.\r\n * @param {function(any): Boolean} isBreak\r\n * A function that determines whether to continue the loop.\r\n * IsUndefined is specified by default.\r\n * @example\r\n * const result = forOf(\"hello world!\", (char)=>{\r\n *     if(char === \"l\")return; // continue\r\n *     if(char === \" \")return \"hoge\"; // break\r\n *     console.log(char);\r\n * });\r\n * // > h\r\n * // > e\r\n * // > o\r\n * // result = \"hoge\"\r\n */\r\nexport const forOf = function(iterable, func, isBreak=isDefined){\r\n    assertType(func, \"Function\");\r\n    assertType(isBreak, \"Function\");\r\n    const iterator = iterate(iterable);\r\n    return loop(()=>{\r\n        const iteratorResult = iterator.next();\r\n        if(iteratorResult.done)return void 0;\r\n        return func.call(this, iteratorResult.value);\r\n    }, { isBreak });\r\n    // for(;;){\r\n    //     const iteratorResult = iterator.next();\r\n    //     if(iteratorResult.done)return void 0;\r\n    //     const flag = func.call(this, iteratorResult.value);\r\n    //     if(!breakFunc(flag))return flag;\r\n    // }\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/for-of.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 637,
    "kind": "function",
    "name": "forOf",
    "memberof": "src/utility/loop/for-of.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/for-of.js~forOf",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/for-of.js",
    "importStyle": "{forOf}",
    "description": "Call the callback function for each value using the iterable protocol.\nIt can be used like a for ... of statement.\nArrayLike objects can be repeated in environments where Symbol is not defined.",
    "examples": [
      "const result = forOf(\"hello world!\", (char)=>{\n    if(char === \"l\")return; // continue\n    if(char === \" \")return \"hoge\"; // break\n    console.log(char);\n});\n// > h\n// > e\n// > o\n// result = \"hoge\""
    ],
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@template",
        "tagValue": "T"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": "An Iterable object used for the loop"
      },
      {
        "nullable": null,
        "types": [
          "function(T): any"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "A callback function that is executed for each value of the Iterable object.\nIf breakFunc returns a value that is determined to be falsy,\nthe loop ends and the value is returned."
      },
      {
        "nullable": null,
        "types": [
          "function(any): Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isBreak",
        "description": "A function that determines whether to continue the loop.\nIsUndefined is specified by default."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 638,
    "kind": "file",
    "name": "src/utility/loop/for.js",
    "content": "\r\n// comparison: {\r\n//     /**\r\n//      * @param {number} n\r\n//      * @param {number} m\r\n//      */\r\n//     const lessThan = (n, m)=>(n < m);\r\n//     /**\r\n//      * @param {number} n\r\n//      * @param {number} m\r\n//      */\r\n//     const greaterThan = (n, m)=>(n > m);\r\n//     break comparison;\r\n// }\r\n\r\n/**\r\n * @deprecated\r\n * @param {*} object\r\n * @param {*} func\r\n * @param {*} [that]\r\n */\r\nexport const forIn = (object, func, that)=>{\r\n    if(typeof object === \"object\")\r\n        object = Object.entries(object);\r\n    return forIndex(object.length, (index)=>(\r\n        func.call(that, object[index])\r\n    ));\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/for.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 639,
    "kind": "function",
    "name": "forIn",
    "memberof": "src/utility/loop/for.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/for.js~forIn",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/for.js",
    "importStyle": "{forIn}",
    "description": "",
    "lineNumber": 22,
    "deprecated": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "that",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "file",
    "name": "src/utility/loop/index.js",
    "content": "\r\nexport * from \"./each/index.js\";\r\nexport * from \"./for-of.js\";\r\nexport * from \"./for-index.js\";\r\nexport * from \"./while.js\";\r\nexport * from \"./order.js\";\r\nexport * from \"./iterate.js\";\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "src/utility/loop/iterate.js",
    "content": "\r\n// @ts-check\r\n\r\nimport env from \"../../env.js\";\r\nimport { isArrayLike } from \"../../util/is/util.js\";\r\nimport { isNullLike } from \"../../util/is/type.js\";\r\n\r\n/**\r\n * iterableなオブジェクトをiteratorに変換します。\r\n * @template T\r\n * @param {Iterable<T>} iterable\r\n * @return {Iterator<T, null>}\r\n * @throws {TypeError}\r\n */\r\nexport const iterate = (iterable)=>{\r\n    if(env.Symbol && !isNullLike(iterable[Symbol.iterator]))\r\n        return iterable[Symbol.iterator]();\r\n    if(!isArrayLike(iterable))\r\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n    let i = 0;\r\n    return { next: ()=>(i >= iterable.length ? {\r\n        done: true,\r\n        value: null\r\n    } : {\r\n        done: false,\r\n        value: iterable[i++]\r\n    }) };\r\n};\r\n\r\n/**\r\n * @param {Iterable} iterable\r\n * @param {function} func\r\n */\r\nconst iterableMap = (iterable, func)=>{\r\n    const iterator = iterate(iterable);\r\n    return { [Symbol.iterator]:()=>({\r\n        next(){\r\n            const iterResult = iterator.next();\r\n            if(!iterResult.done)\r\n                iterResult.value = func(iterResult.value);\r\n            return iterResult;\r\n        }\r\n    }) };\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/iterate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "function",
    "name": "iterate",
    "memberof": "src/utility/loop/iterate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/iterate.js~iterate",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/iterate.js",
    "importStyle": "{iterate}",
    "description": "iterableなオブジェクトをiteratorに変換します。",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@template",
        "tagValue": "T"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator<T, null>"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 643,
    "kind": "function",
    "name": "iterableMap",
    "memberof": "src/utility/loop/iterate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/iterate.js~iterableMap",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/loop/iterate.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"undefined\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 644,
    "kind": "file",
    "name": "src/utility/loop/loop.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isDefined } from \"../../util/is/index.js\";\r\n\r\n// break\r\n// 回数\r\n// その他素のループで便利な機能詰め込み\r\n\r\n/**\r\n * @param {function} func\r\n * @param {*} props\r\n */\r\nexport const loop = (func, props={})=>{\r\n    const {\r\n        limit = 1000,\r\n        isBreak = isDefined,\r\n        fromAbove = false,\r\n        fold,\r\n    } = props;\r\n    for(let index = -1;index++ < limit;){\r\n        const flag = func.call(props.contest, props.arg);\r\n        if(isBreak(flag))\r\n            return props.complete || flag;\r\n            // complete | break\r\n    }\r\n    return props.finish;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/loop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 645,
    "kind": "function",
    "name": "loop",
    "memberof": "src/utility/loop/loop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/loop.js~loop",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/loop.js",
    "importStyle": "{loop}",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 646,
    "kind": "file",
    "name": "src/utility/loop/order.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { forOf } from \"./for-of.js\";\r\nimport { isDefined } from \"../../util/is/index.js\";\r\n\r\n/**\r\n * Executes the function specified by func level times.\r\n *\r\n * funcで指定された関数をlevel回実行します。\r\n *\r\n * @param {number} level Number of loops\r\n * @param {function} func Repeated callback function\r\n * The return value of the previous callback function is passed as an argument\r\n * @param {*} [arg] Arguments passed to the first callback function\r\n * @param  {...any} testArgs\r\n * @return Return value of the last callback function\r\n */\r\nexport const previous = function(level, func, arg, ...testArgs){\r\n    for(;level--;){\r\n        const result = func.call(this, arg, ...testArgs);\r\n        isDefined(result) && (arg = result);\r\n    }\r\n    return arg;\r\n};\r\n\r\n/**\r\n * Execute the functions specified in the order from left to right.\r\n *\r\n * オーダーで指定された関数を左から順番に実行します。\r\n *\r\n * @param {*} arg Arguments passed to the first callback function\r\n * @param {...function} orders Repeated callback function.\r\n * The return value of the previous callback function is passed as an argument\r\n * @return Return value of the last callback function\r\n */\r\nexport const inOrder = function(arg, ...orders){\r\n    forOf(orders, (func)=>{\r\n        arg = func.call(this, arg);\r\n    });\r\n    return arg;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/order.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 647,
    "kind": "function",
    "name": "previous",
    "memberof": "src/utility/loop/order.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/order.js~previous",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/order.js",
    "importStyle": "{previous}",
    "description": "Executes the function specified by func level times.\n\nfuncで指定された関数をlevel回実行します。",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "Number of loops"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "Repeated callback function\nThe return value of the previous callback function is passed as an argument"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "arg",
        "description": "Arguments passed to the first callback function"
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "testArgs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Return value of the last callback function"
    }
  },
  {
    "__docId__": 648,
    "kind": "function",
    "name": "inOrder",
    "memberof": "src/utility/loop/order.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/order.js~inOrder",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/order.js",
    "importStyle": "{inOrder}",
    "description": "Execute the functions specified in the order from left to right.\n\nオーダーで指定された関数を左から順番に実行します。",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg",
        "description": "Arguments passed to the first callback function"
      },
      {
        "nullable": null,
        "types": [
          "...function"
        ],
        "spread": true,
        "optional": false,
        "name": "orders",
        "description": "Repeated callback function.\nThe return value of the previous callback function is passed as an argument"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Return value of the last callback function"
    }
  },
  {
    "__docId__": 649,
    "kind": "file",
    "name": "src/utility/loop/while.js",
    "content": "\r\nimport { isUndefined } from \"../../util/is/index.js\";\r\n\r\n/**\r\n * MEMO: ループ条件とreturnをどうにかして引き剥がしたい。\r\n * MEMO: do取りたい。flag初期値追加。\r\n * @param {Function} func Callback function that continues to run as long as it returns undefined\r\n * @param {*} [that] Specify this of the callback function\r\n */\r\nexport const doWhile = (func, that)=>{\r\n    let flag;\r\n    do flag = func.call(that);\r\n    while(isUndefined(flag));\r\n    return flag;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/loop/while.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 650,
    "kind": "function",
    "name": "doWhile",
    "memberof": "src/utility/loop/while.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/loop/while.js~doWhile",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/loop/while.js",
    "importStyle": "{doWhile}",
    "description": "MEMO: ループ条件とreturnをどうにかして引き剥がしたい。\nMEMO: do取りたい。flag初期値追加。",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "Callback function that continues to run as long as it returns undefined"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "that",
        "description": "Specify this of the callback function"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 651,
    "kind": "file",
    "name": "src/utility/memolize.js",
    "content": "\r\nexport const memolize = (func)=>{\r\n    const cache = new Map();\r\n    const resolve = Symbol(\"resolve\");\r\n    return function(){\r\n        const cacheResult = [...arguments].reduce((subCache, arg)=>{\r\n            if(subCache === resolve)\r\n                return resolve;\r\n            if(subCache.has(arg))\r\n                return subCache.get(arg);\r\n            return resolve;\r\n        }, cache);\r\n        if(cacheResult === resolve){\r\n            const result = func(...arguments);\r\n        }\r\n        return cacheResult;\r\n    };\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/memolize.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 652,
    "kind": "function",
    "name": "memolize",
    "memberof": "src/utility/memolize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/memolize.js~memolize",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/memolize.js",
    "importStyle": "{memolize}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 653,
    "kind": "file",
    "name": "src/utility/old.js",
    "content": "\r\n/* eslint-disable @typescript-eslint/camelcase */\r\nimport __reiyayakko_package__ from \"../package\";\r\n/*\r\n    #Reiyayakko.clocker\r\n    >Rei.clocker\r\n*/\r\n__reiyayakko_package__.addModule({\r\n    name: \"clocker\",\r\n    variable: {\r\n        clockerId: Symbol(\"clockerId\"),\r\n        clockUp: Symbol(\"clockUp\"),\r\n    }\r\n}, ({clockUp, clockerId, modules})=>Object.seal({\r\n    interval: 100,\r\n    count: 0,\r\n    [clockerId]: null,\r\n    [clockUp](eventName){\r\n        modules.event.execute(eventName, this.count++);\r\n    },\r\n    start(interval=100, eventName=\"ClockerCountUp\"){\r\n        this.stop();\r\n        this.interval = interval;\r\n        this[clockerId] = setInterval(this[clockUp].bind(this), this.interval, eventName);\r\n    },\r\n    stop(){\r\n        if(typeof this[clockerId] !== \"number\")return;\r\n        clearInterval(this[clockerId]);\r\n        this[clockerId] = null;\r\n    }\r\n}));\r\n__reiyayakko_package__.addModule(\"Stack\", ()=>class Stack {\r\n    constructor(maxStackSize=10000){\r\n        this.maxStackSize = maxStackSize;\r\n        this.stack = [];\r\n    }\r\n    push(func, args){\r\n        if(this.stack.length < this.maxStackSize)\r\n            this.stack.push([func, args]);\r\n    }\r\n    execute(){\r\n        while(this.stack.length){\r\n            const [func, args] = this.stack.pop();\r\n            func.apply(this, args);\r\n        }\r\n    }\r\n});\r\n__reiyayakko_package__.addModule(\"workthread\", ({modules})=>(aURL, options)=>{\r\n    if(self.Worker){\r\n        const worker = new Worker(aURL, options);\r\n        const symbol = Symbol(\"worker\");\r\n        worker.onerror = event=>{\r\n            modules.event.execute(\"workerError\", event, worker);\r\n        };\r\n        worker.onmessage = event=>{\r\n            const massage = JSON.parse(event.data);\r\n            modules.event.execute(\"workerReceive\", massage, worker);\r\n        };\r\n        const workerSend = modules.event.register(\"workerSend\", action=>{\r\n            const massage = JSON.stringify(action);\r\n            worker.postMessage(massage);\r\n        });\r\n        const workerDelete = modules.event.register(\"workerDelete\", ()=>{\r\n            worker.terminate();\r\n            modules.event.remove(\"workerSend\", workerSend);\r\n            modules.event.remove(\"workerDelete\", workerDelete);\r\n        });\r\n        return worker;\r\n    }\r\n    console.error(\"WebWorker cannot be used.\");\r\n    return null;\r\n});\r\n__reiyayakko_package__.addModule(\"stackTrace\", ()=>()=>{\r\n    const stacks = new Error().stack.substr(13).trim();\r\n    const __stacks__ = {\r\n        stacks,\r\n        prevStacks: stacks.replace(/.+?(?=\\n)/,\"\"),\r\n        stacksArray: stacks.split(/\\sat\\s/).map(stack=>{\r\n            stack = stack.trim().split(\":\");\r\n            const column = stack.pop(), line = stack.pop();\r\n            return {\r\n                stack: stack.join(\":\"),\r\n                line,\r\n                column\r\n            };\r\n        }),\r\n    };\r\n    return __stacks__;\r\n});\r\n__reiyayakko_package__.addModule(\"case.test\", ()=>(regExp, text)=>regExp.test(text)?text:NaN);\r\n__reiyayakko_package__.addModule(\"element\", ()=>selector=>{\r\n    if(!selector)return null;\r\n    const element = document.createElement(/^\\w+/.exec(selector)||\"div\");\r\n    const id = /(?<=#)\\w+/.exec(selector);\r\n    if(id)[element.id] = id;\r\n    const className = selector.match(/(?<=\\.)\\w+/g);\r\n    if(className)element.classList.add(...className);\r\n    return element;\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/old.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "file",
    "name": "src/utility/recursion.js",
    "content": "\r\nconst recursion = (flag)=>{\r\n    while(flag){}\r\n};\r\n\r\n(()=>{\r\n    const flag = new Map();\r\n    new Promise(resolve=>{\r\n        resolve();\r\n    }).then(()=>{\r\n        flag.set();\r\n    });\r\n})();\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/recursion.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 655,
    "kind": "function",
    "name": "recursion",
    "memberof": "src/utility/recursion.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/recursion.js~recursion",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/recursion.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 656,
    "kind": "file",
    "name": "src/utility/return.js",
    "content": "\r\nexport const that = function(){ return this; };\r\n\r\nexport const asArguments = function(){ return arguments; };\r\n\r\nexport const allArray = (...args)=>args;\r\n\r\nexport const asItIs = (arg)=>arg;\r\n\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/return.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 657,
    "kind": "function",
    "name": "that",
    "memberof": "src/utility/return.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/return.js~that",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/return.js",
    "importStyle": "{that}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 658,
    "kind": "function",
    "name": "asArguments",
    "memberof": "src/utility/return.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/return.js~asArguments",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/return.js",
    "importStyle": "{asArguments}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 659,
    "kind": "function",
    "name": "allArray",
    "memberof": "src/utility/return.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/return.js~allArray",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/return.js",
    "importStyle": "{allArray}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 660,
    "kind": "function",
    "name": "asItIs",
    "memberof": "src/utility/return.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/return.js~asItIs",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/return.js",
    "importStyle": "{asItIs}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "arg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 661,
    "kind": "file",
    "name": "src/utility/sort/intro.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { average } from \"../../math/index\";\r\nimport { swap } from \"../../object/property/swap\";\r\nimport { heapSort } from \"./heap\";\r\n\r\n/**\r\n * @param {any} a\r\n * @param {number} b\r\n * @param {any} c\r\n * @param {(arg0: any, arg1: any) => any} [compare]\r\n */\r\nconst median3 = (a, b, c, compare)=>(\r\n    compare(a, b)\r\n        ? (compare(b, c) ? b : compare(c, a) ? a : c)\r\n        : (compare(c, b) ? b : compare(a, c) ? a : c)\r\n);\r\n\r\n/**\r\n * @param {{ [x: string]: any; }} origin\r\n * @param {number} n\r\n * @param {number} i\r\n * @param {number} depth\r\n * @param {any} compare\r\n */\r\nconst pseudoMedian = (origin, n, i, depth, compare)=>{\r\n    if(n <= depth)return origin[i + n/2];\r\n    const m = n / 3,\r\n        x = pseudoMedian(origin, m, i, depth, compare),\r\n        y = pseudoMedian(origin, n - 2*m, i + m, depth, compare),\r\n        z = pseudoMedian(origin, m, i + n - m, depth, compare);\r\n    return median3(x, y, z, compare);\r\n};\r\n\r\n/**\r\n * destructive: `true`,\r\n * in-place: `true`,\r\n * stable: `false`,\r\n * not-number: `true`\r\n */\r\n/**\r\n * @param {{ [x: string]: any; }} origin\r\n * @param {{ (a: any, b: any): boolean; (arg0: any, arg1: any): any; }} compare\r\n * @param {number} left\r\n * @param {number} right\r\n * @param {number} [depth]\r\n */\r\nconst sort = (origin, compare, left, right, depth)=>{\r\n    if(right - left <= 1)return origin;\r\n    const pivotIndex = Math.floor(average(left, right));\r\n    // const pivot = pseudoMedian(origin, right - left, left, depth, compare);\r\n    const pivot = median3(left, pivotIndex, right, compare);\r\n    // const pivot = origin[pivotIndex];\r\n    const limit = right - 1;\r\n    // swap(origin, pivotIndex, limit);\r\n    let j = left;\r\n    for(let i = left;i < limit;i++)\r\n        if(compare(origin[i], pivot))\r\n            swap(origin, i, j++);\r\n    swap(origin, j, limit);\r\n    sort(origin, compare, left, j);\r\n    sort(origin, compare, j + 1, right);\r\n    return origin;\r\n};\r\n\r\n/**\r\n * @param {number[]} a\r\n * @param {number} i0\r\n * @param {number} iN\r\n */\r\nconst insertionsort = (a, i0, iN)=>{\r\n    if(iN - i0 < 2)return;\r\n    for(let i = i0 + 1;i < iN;i++){\r\n        const tmp = a[i];\r\n        let j = i, k = i;\r\n        if(tmp < a[i0])\r\n            while(i0 < j){\r\n                a[j] = a[--k];\r\n                j = k;\r\n            }\r\n        else\r\n            while(tmp < a[--k]){\r\n                a[j] = a[k];\r\n                j = k;\r\n            }\r\n        a[j] = tmp;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {any[]} a\r\n * @param {number} i0\r\n * @param {number} iN\r\n * @param {number} d\r\n */\r\nconst sort2 = (a, i0, iN, d, compare)=>{\r\n    const N = iN - i0;\r\n    if(N < 40)return insertionsort(a, i0, iN);\r\n    if(d === 0)return heapSort(a, compare);\r\n    let i = i0, j = iN - 1;\r\n    const pivot = median3(a[i], a[(i + j) / 2], a[j]);\r\n    for(;;){\r\n        while (a[i] < pivot) i++;\r\n        while (pivot < a[j]) j--;\r\n        if (i >= j) break;\r\n        swap(a, i, j);\r\n        i++;\r\n        j--;\r\n    }\r\n    j++;\r\n    const d2 = d - 1;\r\n    if (i - i0 > 1) sort2(a, i0, i, d2, compare);\r\n    if (iN - j > 1) sort2(a, j, iN, d2, compare);\r\n    return a;\r\n};\r\n\r\nexport const introSort = (origin, compare=(a, b)=>a >= b)=>{\r\n    let size = origin.length;\r\n    if(size < 2)return origin;\r\n    console.log(size);\r\n    let depth = 0;\r\n    for(;size > 0;size /= 2)depth++;\r\n    console.log(depth);\r\n    return sort(origin, compare, 0, origin.length, 2 * depth);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/sort/intro.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 662,
    "kind": "function",
    "name": "median3",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~median3",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "arg0: any, arg1: any) => any"
        ],
        "spread": false,
        "optional": true,
        "name": "compare",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 663,
    "kind": "function",
    "name": "pseudoMedian",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~pseudoMedian",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "{ [x: string]: any; }"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 664,
    "kind": "function",
    "name": "sort",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~sort",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "{ [x: string]: any; }"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{ (a: any, b: any): boolean; (arg0: any, arg1: any): any; }"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "depth",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 665,
    "kind": "function",
    "name": "insertionsort",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~insertionsort",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "i0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "iN",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 666,
    "kind": "function",
    "name": "sort2",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~sort2",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "i0",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "iN",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 667,
    "kind": "function",
    "name": "introSort",
    "memberof": "src/utility/sort/intro.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/sort/intro.js~introSort",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/sort/intro.js",
    "importStyle": "{introSort}",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "origin",
        "types": [
          "*"
        ]
      },
      {
        "name": "compare",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 668,
    "kind": "file",
    "name": "src/utility/sort/marge.js",
    "content": "\r\n// // @ts-check\r\n\r\n// export const mergeSort = (a, left, right)=>{\r\n//     if(right - left === 1)return;\r\n//     const mid = left + (right - left) / 2;\r\n\r\n//     // 左半分 [left, mid) をソート\r\n//     mergeSort(a, left, mid);\r\n\r\n//     // 右半分 [mid, right) をソート\r\n//     mergeSort(a, mid, right);\r\n\r\n//     // 一旦「左」と「右」のソート結果をコピーしておく (右側は左右反転)\r\n//     vector<int> buf;\r\n//     for (int i = left; i < mid; ++i) buf.push_back(a[i]);\r\n//     for (int i = right-1; i >= mid; --i) buf.push_back(a[i]);\r\n\r\n//     // マージする\r\n//     int iterator_left = 0;                    // 左側のイテレータ\r\n//     int iterator_right = (int)buf.size() - 1; // 右側のイテレータ\r\n//     for (int i = left; i < right; ++i) {\r\n//         // 左側採用\r\n//         if (buf[iterator_left] <= buf[iterator_right]) {\r\n//             a[i] = buf[iterator_left++];\r\n//         }\r\n//         // 右側採用\r\n//         else {\r\n//             a[i] = buf[iterator_right--];\r\n//         }\r\n//     }\r\n// };\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/sort/marge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 669,
    "kind": "file",
    "name": "src/utility/stack.js",
    "content": "\r\n// @ts-check\r\n\r\nimport { isArray } from \"./is/index.js\";\r\n\r\nexport const stack = (firstOrder)=>{\r\n    const totalStuck = [{\r\n        cb: firstOrder,\r\n        args: []\r\n    }];\r\n    while(totalStuck.length){\r\n        const current = totalStuck.pop();\r\n        if(isArray(current));\r\n        else{\r\n            current.cb.apply(null, current.args);\r\n        }\r\n    }\r\n    return firstOrder;\r\n};\r\n\r\nconst ack = (x, y)=>{\r\n    if(Math.min(x, y) < 0)\r\n        throw new Error(\"Negative argument cannot be specified for Ackermann function\");\r\n    if(x === 0)return ++y;\r\n    if(y === 0)return ack(--x, 1);\r\n    return ack(--x, ack(x, --y));\r\n};\r\n\r\nclass Memo {\r\n    constructor(){\r\n        this.data = [];\r\n    }\r\n    has(x, y){\r\n        return this.data.hasOwnProperty(x)\r\n            && this.data[x].hasOwnProperty(y);\r\n    }\r\n    get(x, y){\r\n        return this.has(x, y)\r\n            ? this.data[x][y]\r\n            : null;\r\n    }\r\n    set(x, y, data){\r\n        if(!this.data.hasOwnProperty(x))\r\n            this.data[x] = [];\r\n        this.data[x][y] = data;\r\n        return data;\r\n    }\r\n}\r\n\r\nconst memo = new Memo();\r\n\r\nconst ack_memo = (x, y)=>{\r\n    if(Math.min(x, y) < 0)\r\n        throw new Error(\"Negative argument cannot be specified for Ackermann function\");\r\n    if(memo.has(x, y))\r\n        return memo.get(x, y);\r\n    for(const _ = { x, y };;){\r\n        console.log(_);\r\n        console.count(\"ack\");\r\n        if(_.x === 0)\r\n            return memo.set(x, y, ++_.y);\r\n        if(_.y === 0){\r\n            _.x--;\r\n            _.y = 1;\r\n            continue;\r\n        }\r\n        if(_.x === 1){\r\n            _.x--;\r\n            _.y += 2;\r\n            continue;\r\n        }\r\n        console.group();\r\n        _.y = ack_memo(_.x, _.y - 1);\r\n        _.x--;\r\n        console.groupEnd();\r\n    }\r\n};\r\n\r\nconst ack_stack = (m, n)=>{\r\n    const stack = [m, n];\r\n    while(stack.length > 1){\r\n        const n = stack.pop();\r\n        const m = stack.pop();\r\n        if(m === 0){\r\n            stack.push(n + 1);\r\n        }else if(n === 0){\r\n            stack.push(m - 1);\r\n            stack.push(1);\r\n        }else if(m === 1){\r\n            stack.push(n + 2); // customize!\r\n        }else if(m === 2){\r\n            stack.push(n * 2 + 3); // customize!\r\n        }else{\r\n            stack.push(m - 1);\r\n            stack.push(m);\r\n            stack.push(n - 1);\r\n        }\r\n    }\r\n    return stack.pop();\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/stack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 670,
    "kind": "function",
    "name": "stack",
    "memberof": "src/utility/stack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/stack.js~stack",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": "{stack}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "firstOrder",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 671,
    "kind": "function",
    "name": "ack",
    "memberof": "src/utility/stack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/stack.js~ack",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 672,
    "kind": "class",
    "name": "Memo",
    "memberof": "src/utility/stack.js",
    "static": true,
    "longname": "src/utility/stack.js~Memo",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 673,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utility/stack.js~Memo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/stack.js~Memo#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 674,
    "kind": "member",
    "name": "data",
    "memberof": "src/utility/stack.js~Memo",
    "static": false,
    "longname": "src/utility/stack.js~Memo#data",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 675,
    "kind": "method",
    "name": "has",
    "memberof": "src/utility/stack.js~Memo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/stack.js~Memo#has",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 676,
    "kind": "method",
    "name": "get",
    "memberof": "src/utility/stack.js~Memo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/stack.js~Memo#get",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 677,
    "kind": "method",
    "name": "set",
    "memberof": "src/utility/stack.js~Memo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utility/stack.js~Memo#set",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 678,
    "kind": "variable",
    "name": "memo",
    "memberof": "src/utility/stack.js",
    "static": true,
    "longname": "src/utility/stack.js~memo",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "src/utility/stack.js~Memo"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 679,
    "kind": "function",
    "name": "ack_memo",
    "memberof": "src/utility/stack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/stack.js~ack_memo",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 680,
    "kind": "function",
    "name": "ack_stack",
    "memberof": "src/utility/stack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/stack.js~ack_stack",
    "access": "public",
    "export": false,
    "importPath": "reiyayakko-core/src/utility/stack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "m",
        "types": [
          "*"
        ]
      },
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 681,
    "kind": "file",
    "name": "src/utility/utility.js",
    "content": "\r\nimport { isObject } from \"../util/is/index.js\";\r\n\r\n// TODO: format\r\n\r\n// /**\r\n//  * Alpha:\r\n//  * @param {String[]} strings\r\n//  * @param  {...any} rawStrings\r\n//  */\r\n// const r = (strings, ...rawStrings)=>{\r\n//     console.log(strings);\r\n//     const result = [];\r\n//     for(const __ of rawStrings){\r\n//         result.push(strings.pop());\r\n//         result.push(__);\r\n//     }\r\n//     return result;\r\n// };\r\n\r\nexport const toPrimitive = (value)=>{\r\n    if(!isObject(value))\r\n        return value;\r\n    if(\"valueOf\" in value)\r\n        return value.valueOf();\r\n    if(\"toString\" in value)\r\n        return value.toString();\r\n    if(Symbol && Symbol.toPrimitive in value)\r\n        return value[Symbol.toPrimitive](\"default\");\r\n    return value;\r\n};\r\n\r\nexport const uniq = (array)=>{\r\n    const existings = [];\r\n    return array.filter((value)=>{\r\n        const existing = existings.includes(value);\r\n        if(!existing)existings.push(value);\r\n        return !existing;\r\n    });\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/src/utility/utility.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 682,
    "kind": "function",
    "name": "toPrimitive",
    "memberof": "src/utility/utility.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/utility.js~toPrimitive",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/utility.js",
    "importStyle": "{toPrimitive}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 683,
    "kind": "function",
    "name": "uniq",
    "memberof": "src/utility/utility.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utility/utility.js~uniq",
    "access": "public",
    "export": true,
    "importPath": "reiyayakko-core/src/utility/utility.js",
    "importStyle": "{uniq}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "\r\n# reiyayakko-core\r\n\r\n[![Build Status](https://travis-ci.org/reiyayakko/reiyayakko-core.svg?branch=master)](https://travis-ci.org/reiyayakko/reiyayakko-core)\r\n[![codecov](https://codecov.io/gh/reiyayakko/reiyayakko-core/branch/master/graph/badge.svg)](https://codecov.io/gh/reiyayakko/reiyayakko-core)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n[![document](https://reiyayakko.github.io/reiyayakko-core/badge.svg)](https://reiyayakko.github.io/reiyayakko-core)\r\n<!-- [![_](https://img.shields.io/badge/test-hoge-informational)]() -->\r\n\r\n## Overview\r\n\r\nあったらいいな、と思った機能を詰め込んだライブラリです。\r\n大きく分けて以下の機能があります。\r\n\r\n### math\r\n\r\nBigfloatやアッカーマン関数、素因数分解などの数学的な機能です。\r\n\r\n### object\r\n\r\nzipオブジェクトの操作に関する機能です。\r\n\r\n### utilities\r\n\r\nその他の分類されなかった便利機能です。\r\n\r\n## usage\r\n\r\n詳しくは[ドキュメント](https://reiyayakko.github.io/reiyayakko-core)を参照してください。\r\n\r\nパッケージの種類は以下の通りです。\r\n\r\n- commonJS (cjs)\r\n- ES2015 Module (es)\r\n- umd (umd)\r\n\r\n### example\r\n\r\nブラウザで使用する場合は以下のようなタグを埋め込んで使用してください。\r\n\r\n```html\r\n<script src=\"https://cdn.jsdelivr.net/gh/reiyayakko/reiyayakko-core@1.1.1/dist/reiyayakko.umd.min.js\"></script>\r\n```\r\n\r\n## Licence\r\n\r\nCopyright (c) 2020 reiyayakko\r\n\r\n[MIT Licence](https://opensource.org/licenses/MIT)  \r\n",
    "longname": "C:\\Users\\ka2obushi\\Documents\\GitHub\\reiyayakko-core\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"reiyayakko-core\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"\",\r\n  \"main\": \"dist/reiyayakko.umd.js\",\r\n  \"scripts\": {\r\n    \"test\": \"karma start karma.conf.js || true\",\r\n    \"rollup_watch\": \"rollup -c rollup.config.js -w\",\r\n    \"build\": \"rollup -c rollup.config.js --environment INCLUDE_DEPS,BUILD:production\",\r\n    \"postbuild\": \"esdoc\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/reiyayakko/reiyayakko-core.git\"\r\n  },\r\n  \"author\": \"reiyayakko\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/reiyayakko/reiyayakko-core/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/reiyayakko/reiyayakko-core#readme\",\r\n  \"devDependencies\": {\r\n    \"buble\": \"^0.20.0\",\r\n    \"codecov\": \"^3.6.5\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"eslint\": \"^6.8.0\",\r\n    \"jasmine-core\": \"^3.5.0\",\r\n    \"karma\": \"^5.0.4\",\r\n    \"karma-chrome-launcher\": \"^3.1.0\",\r\n    \"karma-coverage\": \"^2.0.2\",\r\n    \"karma-firefox-launcher\": \"^1.3.0\",\r\n    \"karma-jasmine\": \"^3.1.1\",\r\n    \"rollup\": \"^2.7.6\",\r\n    \"rollup-plugin-buble\": \"^0.19.8\",\r\n    \"rollup-plugin-terser\": \"^5.3.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\ka2obushi\\Documents\\GitHub\\reiyayakko-core\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "\r\n# reiyayakko-core\r\n\r\n[![Build Status](https://travis-ci.org/reiyayakko/reiyayakko-core.svg?branch=master)](https://travis-ci.org/reiyayakko/reiyayakko-core)\r\n[![codecov](https://codecov.io/gh/reiyayakko/reiyayakko-core/branch/master/graph/badge.svg)](https://codecov.io/gh/reiyayakko/reiyayakko-core)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n[![document](https://reiyayakko.github.io/reiyayakko-core/badge.svg)](https://reiyayakko.github.io/reiyayakko-core)\r\n<!-- [![_](https://img.shields.io/badge/test-hoge-informational)]() -->\r\n\r\n## Overview\r\n\r\nあったらいいな、と思った機能を詰め込んだライブラリです。\r\n大きく分けて以下の機能があります。\r\n\r\n### math\r\n\r\nBigfloatやアッカーマン関数、素因数分解などの数学的な機能です。\r\n\r\n### object\r\n\r\nzipオブジェクトの操作に関する機能です。\r\n\r\n### utilities\r\n\r\nその他の分類されなかった便利機能です。\r\n\r\n## usage\r\n\r\n詳しくは[ドキュメント](https://reiyayakko.github.io/reiyayakko-core)を参照してください。\r\n\r\nパッケージの種類は以下の通りです。\r\n\r\n- commonJS (cjs)\r\n- ES2015 Module (es)\r\n- umd (umd)\r\n\r\n### example\r\n\r\nブラウザで使用する場合は以下のようなタグを埋め込んで使用してください。\r\n\r\n```html\r\n<script src=\"https://cdn.jsdelivr.net/gh/reiyayakko/reiyayakko-core@1.1.1/dist/reiyayakko.umd.min.js\"></script>\r\n```\r\n\r\n## Licence\r\n\r\nCopyright (c) 2020 reiyayakko\r\n\r\n[MIT Licence](https://opensource.org/licenses/MIT)  \r\n",
    "longname": "C:\\Users\\ka2obushi\\Documents\\GitHub\\reiyayakko-core\\readme.md",
    "name": "./readme.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\ka2obushi\\Documents\\GitHub\\reiyayakko-core\\manual\\index.md",
    "name": "./manual/index.md",
    "content": "\r\n# 高階関数について\r\n\r\nこのライブラリの高階関数のほとんどは\r\nコールバック関数の実行時にthisを指定できます。\r\n&#x1f914;\r\n\r\n```javascript\r\nconst { previous, debounce } = rei.util;\r\n\r\nconst hoge = previous.call(\"that\", 10, function(num){\r\n    console.log(this);\r\n    return num + 1;\r\n});\r\n// > \"that\"\r\n// > \"that\"\r\n// ...\r\n// > \"that\"\r\n// hoge = 10\r\n\r\nconst huga = debounce(function(){\r\n    console.log(this);\r\n});\r\n\r\nhuga.call(\"hello world!\");\r\n// > \"hello world!\"\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\ka2obushi\\Documents\\GitHub\\reiyayakko-core\\manual\\usage.md",
    "name": "./manual/usage.md",
    "content": "\r\n# usage\r\n\r\n## Browser\r\n\r\n```html\r\n<script src=\"https://cdn.jsdelivr.net/gh/reiyayakko/reiyayakko-core@1.1.1/dist/reiyayakko.umd.min.js\"></script>\r\n```\r\n\r\n### ES2015 Module\r\n\r\n```html\r\n<script type=\"module\" src=\"https://cdn.jsdelivr.net/gh/reiyayakko/reiyayakko-core@1.1.1/dist/reiyayakko.esm.min.js\"></script>\r\n```\r\n\r\n```js\r\nconst src = \"https://cdn.jsdelivr.net/gh/reiyayakko/reiyayakko-core@1.1.1/dist/reiyayakko.esm.min.js\";\r\nimport(src).then((rei) => {\r\n    // some code...\r\n});\r\n```\r\n\r\n## NodeJS\r\n\r\n```cmd\r\nnpm i reiyayakko-core\r\n```\r\n\r\n### CommonJS\r\n\r\n```javascript\r\nconst rei = requie(\"reiyayakko-core\");\r\n\r\nrei.util.isNumber(1);\r\n// > true\r\n\r\n```\r\n\r\n### ES2015 Module\r\n\r\n```javascript\r\nimport rei from \"reiyayakko-core\";\r\n\r\nrei.util.isNumber(1);\r\n// > true\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 684,
    "kind": "testFile",
    "name": "test/index.js",
    "content": "/* eslint-disable */\r\n// test code.\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 685,
    "kind": "testFile",
    "name": "test/util/is/equals.test.js",
    "content": "/* eslint-disable */\r\n\r\nimport * as is from \"../../../src/utility/is/index.js\";\r\n\r\n/** @test {utility} */\r\ndescribe(\"util/is\", ()=>{\r\n    /** @test {equals} */\r\n    it(\"equals\", ()=>{\r\n        expect(is.equals(NaN, NaN)).toBe(true);\r\n        expect(is.equals(0, -0)).toBe(true);\r\n        expect(is.equals(0, 0, 1)).toBe(false);\r\n    });\r\n    /** @test {isPositive} */\r\n    it(\"equalsType\", ()=>{\r\n        expect(is.equalsType(NaN, -Infinity, 0)).toBe(true);\r\n        expect(is.equalsType([], {})).toBe(false);\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/util/is/equals.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 686,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/util/is/equals.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/util/is/equals.test.js~describe0",
    "access": null,
    "description": "util/is",
    "lineNumber": 6,
    "testTargets": [
      "utility"
    ]
  },
  {
    "__docId__": 687,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "test/util/is/equals.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/equals.test.js~describe0.it1",
    "access": null,
    "description": "equals",
    "lineNumber": 8,
    "testTargets": [
      "equals"
    ]
  },
  {
    "__docId__": 688,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/util/is/equals.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/equals.test.js~describe0.it2",
    "access": null,
    "description": "equalsType",
    "lineNumber": 14,
    "testTargets": [
      "isPositive"
    ]
  },
  {
    "__docId__": 689,
    "kind": "testFile",
    "name": "test/util/is/number.test.js",
    "content": "/* eslint-disable */\r\n\r\nimport * as is from \"../../../src/utility/is/index.js\";\r\n\r\n/** @test {utility} */\r\ndescribe(\"util/is\", ()=>{\r\n    /** @test {isNegative} */\r\n    it(\"isNegative\", ()=>{\r\n        expect(is.isNegative(0)).toBe(false);\r\n        expect(is.isNegative(-0)).toBe(true);\r\n    });\r\n    /** @test {isPositive} */\r\n    it(\"isPositive\", ()=>{\r\n        expect(is.isPositive(0)).toBe(true);\r\n        expect(is.isPositive(-0)).toBe(false);\r\n    });\r\n    /** @test {isInfinity} */\r\n    it(\"isInfinity\", ()=>{\r\n        expect(is.isInfinity(Infinity)).toBe(true);\r\n        expect(is.isInfinity(-Infinity)).toBe(true);\r\n        expect(is.isInfinity(99999999)).toBe(false);\r\n    });\r\n    /** @test {isPrime} */\r\n    it(\"isPrime\", ()=>{\r\n        expect(is.isPrime(2)).toBe(true);\r\n        expect(is.isPrime(1697)).toBe(true);\r\n        expect(is.isPrime(256)).toBe(false);\r\n        expect(is.isPrime(NaN)).toBe(false);\r\n    });\r\n    /** @test {isOdd} */\r\n    it(\"isOdd\", ()=>{\r\n        expect(is.isOdd(1)).toBe(true);\r\n        expect(is.isOdd(0)).toBe(false);\r\n    });\r\n    /** @test {isEven} */\r\n    it(\"isEven\", ()=>{\r\n        expect(is.isEven(0)).toBe(true);\r\n        expect(is.isEven(1)).toBe(false);\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/util/is/number.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 690,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "test/util/is/number.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3",
    "access": null,
    "description": "util/is",
    "lineNumber": 6,
    "testTargets": [
      "utility"
    ]
  },
  {
    "__docId__": 691,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it4",
    "access": null,
    "description": "isNegative",
    "lineNumber": 8,
    "testTargets": [
      "isNegative"
    ]
  },
  {
    "__docId__": 692,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it5",
    "access": null,
    "description": "isPositive",
    "lineNumber": 13,
    "testTargets": [
      "isPositive"
    ]
  },
  {
    "__docId__": 693,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it6",
    "access": null,
    "description": "isInfinity",
    "lineNumber": 18,
    "testTargets": [
      "isInfinity"
    ]
  },
  {
    "__docId__": 694,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it7",
    "access": null,
    "description": "isPrime",
    "lineNumber": 24,
    "testTargets": [
      "isPrime"
    ]
  },
  {
    "__docId__": 695,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it8",
    "access": null,
    "description": "isOdd",
    "lineNumber": 31,
    "testTargets": [
      "isOdd"
    ]
  },
  {
    "__docId__": 696,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/util/is/number.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/number.test.js~describe3.it9",
    "access": null,
    "description": "isEven",
    "lineNumber": 36,
    "testTargets": [
      "isEven"
    ]
  },
  {
    "__docId__": 697,
    "kind": "testFile",
    "name": "test/util/is/type.test.js",
    "content": "/* eslint-disable */\r\n// test code.\r\n\r\nimport * as is from \"../../../src/utility/is/index.js\";\r\n\r\n/** @test {utility} */\r\ndescribe(\"util/is\", ()=>{\r\n    /** @test {isUndefined} */\r\n    it(\"isUndefined\", ()=>{\r\n        expect(is.isUndefined(void 0)).toBe(true);\r\n        expect(is.isUndefined(null)).toBe(false);\r\n    });\r\n    /** @test {isNull} */\r\n    it(\"isNull\", ()=>{\r\n        expect(is.isNull(null)).toBe(true);\r\n        expect(is.isNull(void 0)).toBe(false);\r\n        expect(is.isNull([])).toBe(false);\r\n    });\r\n    /** @test {isNullable} */\r\n    it(\"isNullable\", ()=>{\r\n        expect(is.isNullable(null)).toBe(true);\r\n        expect(is.isNullable(void 0)).toBe(true);\r\n        expect(is.isNullable([])).toBe(false);\r\n    });\r\n    /** @test {isBoolean} */\r\n    it(\"isBoolean\", ()=>{\r\n        expect(is.isBoolean(new Boolean)).toBe(true);\r\n        expect(is.isBoolean(true)).toBe(true);\r\n        expect(is.isBoolean(false)).toBe(true);\r\n        expect(is.isBoolean(0)).toBe(false);\r\n    });\r\n    /** @test {isString} */\r\n    it(\"isString\", ()=>{\r\n        expect(is.isString(\"hogehoge\")).toBe(true);\r\n        expect(is.isString(new String)).toBe(true);\r\n        expect(is.isString(1)).toBe(false);\r\n    });\r\n    /** @test {isNumber} */\r\n    it(\"isNumber\", ()=>{\r\n        expect(is.isNumber(1)).toBe(true);\r\n        expect(is.isNumber(128.128)).toBe(true);\r\n        expect(is.isNumber(new Number())).toBe(true);\r\n        expect(is.isNumber(\"1\")).toBe(false);\r\n    });\r\n    /** @test {isSymbol} */\r\n    it(\"isSymbol\", ()=>{\r\n        expect(is.isSymbol(Symbol(\"hogehoge\"))).toBe(true);\r\n        expect(is.isSymbol(\"1\")).toBe(false);\r\n    });\r\n    /** @test {isFunction} */\r\n    it(\"isFunction\", ()=>{\r\n        expect(is.isFunction(()=>{})).toBe(true);\r\n        expect(is.isFunction(\"1\")).toBe(false);\r\n    });\r\n    /** @test {isObject} */\r\n    it(\"isObject\", ()=>{\r\n        expect(is.isObject(new Object)).toBe(true);\r\n        expect(is.isObject(new Array)).toBe(true);\r\n        expect(is.isObject(new Boolean)).toBe(true);\r\n        expect(is.isObject(Object(\"\"))).toBe(true);\r\n        expect(is.isObject(null)).toBe(false);\r\n    });\r\n    /** @test {null} */\r\n    it(\"\", ()=>{});\r\n    // expect().toBe();\r\n    // expect().not.toBe();\r\n    // toEqual({})\r\n    // toMatch\r\n    // toBeDefined\r\n    // toBeUndefined\r\n    // toBeNull\r\n    // toBeTruthy\r\n    // toBeFalsy\r\n    // expect([1, 2, 3]).toContain(3);\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/util/is/type.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 698,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/util/is/type.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10",
    "access": null,
    "description": "util/is",
    "lineNumber": 7,
    "testTargets": [
      "utility"
    ]
  },
  {
    "__docId__": 699,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it11",
    "access": null,
    "description": "isUndefined",
    "lineNumber": 9,
    "testTargets": [
      "isUndefined"
    ]
  },
  {
    "__docId__": 700,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it12",
    "access": null,
    "description": "isNull",
    "lineNumber": 14,
    "testTargets": [
      "isNull"
    ]
  },
  {
    "__docId__": 701,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it13",
    "access": null,
    "description": "isNullable",
    "lineNumber": 20,
    "testTargets": [
      "isNullable"
    ]
  },
  {
    "__docId__": 702,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it14",
    "access": null,
    "description": "isBoolean",
    "lineNumber": 26,
    "testTargets": [
      "isBoolean"
    ]
  },
  {
    "__docId__": 703,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it15",
    "access": null,
    "description": "isString",
    "lineNumber": 33,
    "testTargets": [
      "isString"
    ]
  },
  {
    "__docId__": 704,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it16",
    "access": null,
    "description": "isNumber",
    "lineNumber": 39,
    "testTargets": [
      "isNumber"
    ]
  },
  {
    "__docId__": 705,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it17",
    "access": null,
    "description": "isSymbol",
    "lineNumber": 46,
    "testTargets": [
      "isSymbol"
    ]
  },
  {
    "__docId__": 706,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it18",
    "access": null,
    "description": "isFunction",
    "lineNumber": 51,
    "testTargets": [
      "isFunction"
    ]
  },
  {
    "__docId__": 707,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it19",
    "access": null,
    "description": "isObject",
    "lineNumber": 56,
    "testTargets": [
      "isObject"
    ]
  },
  {
    "__docId__": 708,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/util/is/type.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/type.test.js~describe10.it20",
    "access": null,
    "description": "",
    "lineNumber": 64,
    "testTargets": [
      "null"
    ]
  },
  {
    "__docId__": 709,
    "kind": "testFile",
    "name": "test/util/is/util.test.js",
    "content": "/* eslint-disable */\r\n\r\nimport * as is from \"../../../src/utility/is/index.js\";\r\n\r\n/** @test {utility} */\r\ndescribe(\"util/is\", ()=>{\r\n    /** @test {isChar} */\r\n    it(\"isChar\", ()=>{\r\n        expect(is.isChar(\"c\")).toBe(true);\r\n        expect(is.isChar(\"test\")).toBe(false);\r\n    });\r\n    /** @test {isIteratorResult} */\r\n    it(\"isIteratorResult\", ()=>{\r\n        expect(is.isNull(null)).toBe(true);\r\n        expect(is.isNull(void 0)).toBe(false);\r\n        expect(is.isNull([])).toBe(false);\r\n    });\r\n    /** @test {isIterator} */\r\n    it(\"isIterator\", ()=>{\r\n        expect(is.isNullable(null)).toBe(true);\r\n        expect(is.isNullable(void 0)).toBe(true);\r\n        expect(is.isNullable([])).toBe(false);\r\n    });\r\n    /** @test {isIterable} */\r\n    it(\"isIterable\", ()=>{\r\n        expect(is.isBoolean(new Boolean)).toBe(true);\r\n        expect(is.isBoolean(true)).toBe(true);\r\n        expect(is.isBoolean(false)).toBe(true);\r\n        expect(is.isBoolean(0)).toBe(false);\r\n    });\r\n    /** @test {isArrayLike} */\r\n    it(\"isArrayLike\", ()=>{\r\n        expect(is.isArrayLike([])).toBe(true);\r\n        expect(is.isArrayLike(\"isArrayLike\")).toBe(true);\r\n        expect(is.isArrayLike({length: 0})).toBe(true);\r\n        expect(is.isArrayLike({})).toBe(false);\r\n    });\r\n    /** @test {isEmpty} */\r\n    it(\"isEmpty\", ()=>{\r\n        expect(is.isEmpty(\"\")).toBe(true);\r\n        expect(is.isEmpty(\"c\")).toBe(false);\r\n        expect(is.isEmpty([])).toBe(true);\r\n        expect(is.isEmpty([\"not empty\"])).toBe(false);\r\n        expect(is.isEmpty({})).toBe(true);\r\n        expect(is.isEmpty({prop: \"not empty\"})).toBe(false);\r\n    });\r\n    /** @test {isThrowError} */\r\n    it(\"isThrowError\", ()=>{\r\n        expect(is.isThrowError(\"not function\")).toBe(false);\r\n        expect(is.isThrowError(()=>{})).toBe(false);\r\n        expect(is.isThrowError(()=>{\r\n            throw new Error(\"the error\");\r\n        })).toBe(true);\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/util/is/util.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 710,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "test/util/is/util.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21",
    "access": null,
    "description": "util/is",
    "lineNumber": 6,
    "testTargets": [
      "utility"
    ]
  },
  {
    "__docId__": 711,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it22",
    "access": null,
    "description": "isChar",
    "lineNumber": 8,
    "testTargets": [
      "isChar"
    ]
  },
  {
    "__docId__": 712,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it23",
    "access": null,
    "description": "isIteratorResult",
    "lineNumber": 13,
    "testTargets": [
      "isIteratorResult"
    ]
  },
  {
    "__docId__": 713,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it24",
    "access": null,
    "description": "isIterator",
    "lineNumber": 19,
    "testTargets": [
      "isIterator"
    ]
  },
  {
    "__docId__": 714,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it25",
    "access": null,
    "description": "isIterable",
    "lineNumber": 25,
    "testTargets": [
      "isIterable"
    ]
  },
  {
    "__docId__": 715,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it26",
    "access": null,
    "description": "isArrayLike",
    "lineNumber": 32,
    "testTargets": [
      "isArrayLike"
    ]
  },
  {
    "__docId__": 716,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it27",
    "access": null,
    "description": "isEmpty",
    "lineNumber": 39,
    "testTargets": [
      "isEmpty"
    ]
  },
  {
    "__docId__": 717,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "test/util/is/util.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/is/util.test.js~describe21.it28",
    "access": null,
    "description": "isThrowError",
    "lineNumber": 48,
    "testTargets": [
      "isThrowError"
    ]
  },
  {
    "__docId__": 718,
    "kind": "testFile",
    "name": "test/util/zip.test.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/ka2obushi/Documents/GitHub/reiyayakko-core/test/util/zip.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  }
]