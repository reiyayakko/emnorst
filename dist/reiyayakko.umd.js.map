{"version":3,"file":"reiyayakko.umd.js","sources":["../src/utility/is.js","../src/utility/loop.js","../src/utility/equals.js","../src/utility/generator.js","../src/utility/index.js","../src/object/clone/clone.js","../src/object/clone/recursive.js","../src/object/clone/index.js","../src/object/index.js","../src/lib/Num2DecStr.js","../src/math/bigfloat.js","../src/math/index.js"],"sourcesContent":["\r\nexport const isUndefined = value=>(\r\n    value === void 0\r\n);\r\nexport const isNull = value=>(\r\n    value === null || isUndefined(value)\r\n);\r\nexport const isRegExp = obj=>(\r\n    modules.typeof(obj) === \"regexp\"\r\n);\r\nexport const isObject = obj=>{\r\n    const type = typeof obj;\r\n    return type === \"function\" || type === \"object\" && obj !== null;\r\n};\r\nexport const isEmpty = value=>{\r\n    if(typeof value === \"string\" || Array.isArray(value))\r\n        return value.length === 0;\r\n    if(typeof value === \"object\")\r\n        return modules.allKeys(value).length === 0;\r\n    return false;\r\n};\r\nexport const isNegative = value=>{\r\n    if(typeof value === \"number\")\r\n        return value < 0;\r\n    if(typeof value === \"boolean\")\r\n        return !value;\r\n    return false;\r\n};\r\n","\r\nimport * as is from \"./is\";\r\n\r\nexport const gurop = (array, func)=>{\r\n    const result = new Map();\r\n    for(const value of array){\r\n        const key = func(value);\r\n        const values = result.get(key) || [];\r\n        values.push(value);\r\n        result.set(key, values);\r\n    }\r\n    return result;\r\n};\r\n// export const partition = (array, func)=>{};\r\n// INFO: findのマッチした数版\r\nexport const count = (array, func)=>{\r\n    let match = 0;\r\n    for(const value of array)\r\n        match += Boolean(func(value));\r\n    return match;\r\n};\r\n\r\nexport const previous = (level, func, arg)=>{\r\n    for(;level--;)\r\n        arg = func(arg);\r\n    return arg;\r\n};\r\n\r\nexport const inOrder = (arg, ...funcs)=>{\r\n    for(const func of funcs)\r\n        arg = func(arg);\r\n    return arg;\r\n};\r\n\r\n// TODO: iterate - 何でもループ\"できるようにする\"やつ\r\nexport const iterate = function* (value){\r\n    if(value[Symbol.iterator])\r\n        yield* value;\r\n};\r\n\r\nexport const forOf = (iterator, func, that)=>{\r\n    for(const value of iterator){\r\n        const flag = func.call(that, value);\r\n        if(!is.isUndefined(flag))return flag;\r\n    }\r\n    return void 0;\r\n};\r\n","\r\nexport const equals = (...values)=>{\r\n    // SameValueZero\r\n    let prev = values.shift();\r\n    return values.every(value=>(\r\n        Number.isNaN(prev)\r\n            ? Number.isNaN(prev=value)\r\n            : prev===(prev=value)\r\n    ));\r\n};\r\n","\r\nconst last = (array, index=1)=>(\r\n    array[array.length - index]\r\n);\r\nexport const zip = function* (...arrays){\r\n    if(typeof last(arrays) === \"function\"){\r\n        const func = arrays.pop();\r\n        arrays = arrays.map(func);\r\n    }\r\n    const max = arrays.reduce((length, array)=>(\r\n        Math.max(length, array.length)\r\n    ), 0);\r\n    for(let i=0;max>i;i++){\r\n        yield arrays.reduce((iarrays, array)=>{\r\n            iarrays.push(array[i]);\r\n            return iarrays;\r\n        }, []);\r\n    }\r\n};\r\nexport const through = function* (start, end, increment){\r\n    increment = Math.abs(increment || 1);\r\n    if(start > end)increment = -increment;\r\n    while(Math.abs(start - end) >= Math.abs(increment)){\r\n        yield start;\r\n        start += increment;\r\n    }\r\n    yield start;\r\n};\r\n","\r\nexport * from \"./is\";\r\nexport * from \"./loop\";\r\nexport * from \"./equals\";\r\nexport * from \"./generator\";\r\nimport * as is from \"./is\";\r\n// TEMP:\r\n// export class ArrayLike extends Array {\r\n//     constructor(){\r\n//         super();\r\n//         console.log(this);\r\n//     }\r\n// }\r\n// export class Temp {\r\n//     constructor(){\r\n//         this.gen = this.gen.bind(this);\r\n//         return this.gen;\r\n//     }\r\n//     gen(){\r\n//         console.log(this);\r\n//         return this.gen;\r\n//     }\r\n// }\r\n// export class Memo {\r\n//     constructor(func){\r\n//         this.function = func;\r\n//         this.existing = new Map();\r\n//     }\r\n//     execute(args){\r\n//         if(this.existing.has(args))\r\n//             return this.existing.get(args);\r\n//         const result = execute(this.function, args);\r\n//         this.existing.set(args, result);\r\n//         return result;\r\n//     }\r\n// }\r\n// String instruction\r\nexport const execute = (func, args)=>func.apply(null, args);\r\nexport const typeOf = object=>(\r\n    Object.prototype.toString.call(object).slice(8, -1)\r\n);\r\n// TODO: require\r\nexport const substitute = (value, substitute)=>(\r\n    is.isNull(value)\r\n        ? substitute\r\n        : value\r\n);\r\nexport const tryCall = (value, args, that=null)=>(\r\n    typeof value === \"function\"\r\n        ? value.apply(that, args)\r\n        : value\r\n);\r\n// export const and = (...arrays)=>{}\r\n// export const xor = (...arrays)=>{}\r\nexport const debounce = (func, wait)=>{\r\n    let id;\r\n    return function(){\r\n        clearTimeout(id);\r\n        id = setTimeout(func.apply, wait, this, arguments);\r\n    }\r\n};\r\nexport const uniq = array=>{\r\n    const existings = [];\r\n    return array.filter(value=>{\r\n        const existing = existings.includes(value);\r\n        if(!existing)existings.push(value);\r\n        return !existing;\r\n    });\r\n};\r\n","\r\nconst copyObject = (modules, object, cloneObject)=>{\r\n    const propKeys = modules.getAllKeys(object);\r\n    const prototype = Object.getPrototypeOf(object);\r\n    object = propKeys.reduce((propertiesObject, propKey) => {\r\n        const prop = Object.getOwnPropertyDescriptor(object, propKey);\r\n        if (prop.hasOwnProperty(\"value\"))\r\n            prop.value = modules.cloneMod(prop.value, cloneObject);\r\n        Object.defineProperty(propertiesObject, propKey, prop);\r\n        return propertiesObject;\r\n    }, Object.create(prototype));\r\n    return object;\r\n};\r\nexport const copy = cloneObject=>{\r\n    console.log(`type: '${cloneObject.type}'`, [cloneObject.value]);\r\n    let object = cloneObject.value;\r\n    // primitive type, function\r\n    if(typeof object !== \"object\")\r\n        return cloneObject;\r\n    switch(cloneObject.type){\r\n    case \"object\": { // {}, new Object, new Foo etc...\r\n        object = copyObject(modules, object, cloneObject);\r\n        break;\r\n    }\r\n    case \"array\": // [], new Array\r\n        object = object.map(value=>modules.cloneMod(value, cloneObject));\r\n        break;\r\n    case \"number\": // new Number\r\n        return new Number(object);\r\n    case \"string\": // new String\r\n        return new String(object);\r\n    case \"boolean\": // new Boolean\r\n        return new Boolean(object);\r\n    case \"bigint\": // Object(BigInt())\r\n        return object.valueOf();\r\n    case \"regexp\": // /regexp/, new RegExp\r\n        return new RegExp(object);\r\n    case \"null\": // null\r\n        object = null;\r\n        break;\r\n    case \"date\": return new Date(object);\r\n    case \"map\": {\r\n        const map = new Map();\r\n        for(const [key, value] of object)\r\n            map.set(key, modules.clone(value));\r\n        return map;\r\n    }\r\n    case \"weakmap\": {\r\n        const map = new WeakMap();\r\n        for(const [key, value] of object)\r\n            map.set(key, modules.clone(value));\r\n        return map;\r\n    }\r\n    case \"set\": return new Set(object);\r\n    case \"weakset\": return new WeakSet(object);\r\n    default:\r\n        return null;\r\n    }\r\n    cloneObject.object = object;\r\n    return cloneObject;\r\n};\r\n","\r\nimport {copy} from \"./clone\";\r\n\r\nclass CloneObject {\r\n    constructor(cloneObject, props = {}){\r\n        this.value = cloneObject;\r\n        this.existingObjects = props.existingObjects || new WeakSet();\r\n        this.isDone = false;\r\n    }\r\n    done(){\r\n        this.isDone = true;\r\n        return this.value;\r\n    }\r\n    get isExisting(){\r\n        return this.existingObjects.has(this.value);\r\n    }\r\n    get type(){\r\n        return modules.typeof(this.value);\r\n    }\r\n}\r\n\r\nexport const undertake = (object, props)=>{\r\n    object = new CloneObject(object, props);\r\n    if(object.isExisting)\r\n        return object.done();\r\n    console.groupCollapsed(`type: '${object.type}'`, object.value);\r\n    object.existingObjects.push(object.value);\r\n    const cloneObject = copy(object);\r\n    cloneObject.existingObjects.push(cloneObject.value);\r\n    console.log(cloneObject.existingObjects);\r\n    console.groupEnd();\r\n    return cloneObject.done();\r\n};\r\n","\r\nimport {undertake} from \"./recursive\";\r\n\r\nexport const clone = (object, depth=0)=>(\r\n    undertake(object, depth)\r\n);\r\n","\r\nexport * from \"./clone/index\";\r\nexport const has = (object, propName)=>(\r\n    Object.hasOwnProperty.call(object, propName)\r\n);\r\nexport const allKeys = object=>{\r\n    const propNames = Object.getOwnPropertyNames(object);\r\n    const symbols = Object.getOwnPropertySymbols(object);\r\n    return [...propNames, ...symbols];\r\n};\r\nconst watchMap = new WeakMap();\r\nexport const watch = (obj, propName, func)=>{\r\n    const descriptors = watchMap.has(obj)\r\n        ? watchMap.get(obj) : {};\r\n    const descriptor = Object.getOwnPropertyDescriptor(obj, propName);\r\n    if(!descriptor.hasOwnProperty(\"value\"))\r\n        return;\r\n    descriptors[propName] = descriptor;\r\n    watchMap.set(obj, descriptors);\r\n    let value = obj[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        get: ()=>value,\r\n        set: newValue=>{\r\n            func(value, value = newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n};\r\nexport const watchStop = (obj, propName)=>{\r\n    const descriptor = watchMap.get(obj)[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        ...descriptor,\r\n        value: obj[propName]\r\n    });\r\n};\r\nexport const spread = (target, ...sources)=>{\r\n    switch(typeof target){\r\n    case \"object\":\r\n        if(Array.isArray(target))\r\n            return target.concat(...sources);\r\n        return Object.assign(target, ...sources);\r\n    case \"function\":\r\n        return target.apply({}, sources.flat());\r\n    default:\r\n        return target;\r\n    }\r\n};\r\n\r\nexport const property = (obj, propKey)=>{\r\n    if(typeof propKey === \"string\")\r\n        propKey = propKey.split(\".\");\r\n    else if(typeof propKey === \"symbol\")\r\n        propKey = [propKey];\r\n    else if(Array.isArray(propKey))\r\n        propKey = propKey.flatMap(key=>(\r\n            typeof key===\"string\" ? key.split(\".\") : key\r\n        ));\r\n    return propKey.reduce((object, key)=>{\r\n        if(!has(object, key))object[key] = {};\r\n        return object[key];\r\n    }, obj);\r\n};\r\n\r\nexport const structure = (baseObj={}, applyObj={})=>{\r\n    for(const propName of allKeys(applyObj)){\r\n        const applyProp = applyObj[propName];\r\n        if(typeof applyProp === \"object\")\r\n            structure(baseObj[propName], applyProp);\r\n        else baseObj[propName] = applyProp;\r\n    }\r\n    return baseObj;\r\n};\r\n\r\n/*\r\nreiyayakkoPackage.addModule(\"object.Map\", ({modules})=>class ObjectMap {\r\n    constructor(map){\r\n        this.map = [];\r\n    }\r\n    static _find(key){\r\n        return ([entryKey])=>modules.equals(entryKey, key);\r\n    }\r\n    get size(){\r\n        return this.map.length;\r\n    }\r\n    get(key){\r\n        return this.map.find(modules.object.Map._find(key));\r\n    }\r\n    set(key, value){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            this.map.push([key, value]);\r\n        else\r\n            this.map[index] = [key, value];\r\n    }\r\n    has(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        return index !== -1;\r\n    }\r\n    delete(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            return false;\r\n        this.map.splice(index, 1);\r\n        return true;\r\n    }\r\n    clear(){\r\n        this.map = [];\r\n    }\r\n    entries(){\r\n        return this.map.map(entry=>entry);\r\n    }\r\n    forEach(){\r\n        this.map.forEach(...arguments);\r\n    }\r\n    keys(){\r\n        return this.map.map(([key])=>key);\r\n    }\r\n    values(){\r\n        return this.map.map(([,value])=>value);\r\n    }\r\n    [Symbol.iterator](){\r\n        const that = this;\r\n        return (function* (){\r\n            for(const entry of that.map)\r\n                yield entry;\r\n        })();\r\n    }\r\n});\r\nreiyayakkoPackage.addModule({\r\n    name: [\"object.Map.prototype\", Symbol.toStringTag],\r\n    enumerable: false,\r\n}, ()=>\"ObjectMap\");\r\n//*/\r\n","/**\n * 数値を整数・少数表記に変換する。\n * 内部的には、指数表記の文字列をパースし、小数表記に変換している。\n *\n * @param {number|string} number 変換したい数値、または数値形式の文字列。\n *     数値型であればNaNやInfinityも指定できるが、そのまま文字列化して返される。\n * @return {string} 小数表記の数値文字列\n * @throws 適切な形式の数値、または文字列が与えられなかった場合に発生する。\n *\n * Note: この関数は、JavaScriptで正確な数値演算を行うために使う**べきではない**。\n *       この関数でなければ変換できない数値は、JavaScriptの内部データの時点で誤差が発生しており、正確な演算は期待できない。\n *       また、この関数によって変換された数値が厳密に正しい事も保証しない。\n *       この関数は、JavaScriptで生成した数値を「見やすく表示する」ためにのみ使用するべきである。\n * Note: この関数の設計が正しければ（つまり、バグが無ければ）、エラーが発生するのは誤った形式の文字列を与えられた場合のみとなる。\n *       逆に言えば、数値のプリミティブ型が与えられた場合は、いかなる場合でもエラーは発生しないはずである。\n *       もし、数値が与えられた場合にもエラーが発生してしまった場合は、この関数のバグを修正する必要がある。\n */\nexport const Num2FracStr = number => {\n  /*\n   * 引数の値を文字列化\n   */\n  const numStr = String(number);\n\n  /*\n   * 正規表現でマッチング\n   */\n  const match = numStr.match(/^([+-]?)0*([1-9][0-9]*|)(?:\\.([0-9]*[1-9]|)0*)?(?:[eE]([+-]?[0-9]+))?$/);\n\n  /*\n   * 引数の型が適切な形式ではない場合…\n   */\n  if (!match) {\n    if (typeof number == \"number\") {\n      /*\n       * 引数の型が数値であれば、文字列化した値をそのまま返す\n       */\n      return numStr;\n    } else {\n      /*\n       * 引数の型が数値でなければ、エラーにする\n       */\n      throw new Error(`Invalid Number: \"${numStr}\"`);\n    }\n  }\n\n  /** @type {string} 数の符号 */\n  const sign = (match[1] === \"-\" ? \"-\" : \"\");\n  /** @type {string} 仮数部の整数部 */\n  const mantissa_int = match[2];\n  /** @type {string} 仮数部の少数部 */\n  const mantissa_frac = (match[3] ? match[3] : \"\");\n  /** @type {number} 指数部 */\n  const exponent = Number(match[4]);\n\n  let returnValue = \"\";\n\n  if (exponent) {\n    /*\n     * exponentがundefinedではなく（正規表現で指数部がマッチしていて）、\n     * かつ、0ではない場合、指数表記として処理を開始する\n     *\n     * Note: 指数部が0の場合、ここで処理する意味は無いので少数表記として処理する。\n     *       よって、指数部が0以外の場合にここで処理する。\n     * Note: undefinedは数値化されるとNaNになり、false相当となる。\n     *       一方、0の場合もfalse相当となる。\n     *       ので、↑の条件文はコレで合っている。\n     */\n\n    /** @type {string} */\n    const mantissa_str = mantissa_int + mantissa_frac;\n    /** @type {number} */\n    const mantissa_len = mantissa_str.length;\n\n    if (0 < mantissa_len) {\n      /** @type {number} */\n      const mantissa_int_len = mantissa_int.length + exponent;\n  \n      /*\n      12.145e+7  121450000             ;  mantissa_str: \"12145\"  mantissa_int_len: 9   ;  小数部が存在しない数値\n      12.145e+6   12145000             ;  mantissa_str: \"12145\"  mantissa_int_len: 8   ;  小数部が存在しない数値\n      12.145e+5    1214500             ;  mantissa_str: \"12145\"  mantissa_int_len: 7   ;  小数部が存在しない数値\n      12.145e+4     121450             ;  mantissa_str: \"12145\"  mantissa_int_len: 6   ;  小数部が存在しない数値\n      12.145e+3      12145             ;  mantissa_str: \"12145\"  mantissa_int_len: 5   ;  小数部が存在しない数値\n      12.145e+2       1214.5           ;  mantissa_str: \"12145\"  mantissa_int_len: 4   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e+1        121.45          ;  mantissa_str: \"12145\"  mantissa_int_len: 3   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e0          12.145         ;  mantissa_str: \"12145\"  mantissa_int_len: 2   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e-1          1.2145        ;  mantissa_str: \"12145\"  mantissa_int_len: 1   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e-2          0.12145       ;  mantissa_str: \"12145\"  mantissa_int_len: 0   ;  小数部が存在し、かつ、1未満の数値\n      12.145e-3          0.012145      ;  mantissa_str: \"12145\"  mantissa_int_len: -1  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-4          0.0012145     ;  mantissa_str: \"12145\"  mantissa_int_len: -2  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-5          0.00012145    ;  mantissa_str: \"12145\"  mantissa_int_len: -3  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-6          0.000012145   ;  mantissa_str: \"12145\"  mantissa_int_len: -4  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-7          0.0000012145  ;  mantissa_str: \"12145\"  mantissa_int_len: -5  ;  小数部が存在し、かつ、1未満の数値\n      */\n\n      if (mantissa_len <= mantissa_int_len) {\n        /*\n         * 小数部が存在しない数値（ex: 0, 12, 176, 1214500）の場合の処理\n         */\n        returnValue = mantissa_str.padEnd(mantissa_int_len, \"0\");\n\n      } else if (0 < mantissa_int_len) {\n        /*\n         * 小数部が存在し、かつ、1より大きい数値（ex: 1.26, 1.0009, 121.45）の場合の処理\n         */\n        returnValue = mantissa_str.slice(0, mantissa_int_len) + \".\" + mantissa_str.slice(mantissa_int_len);\n\n      } else {\n        /*\n         * 小数部が存在し、かつ、1未満の数値（ex: 0.26, 0.20098, 0.0012145）の場合の処理\n         */\n        returnValue = \"0.\" + \"0\".repeat(-mantissa_int_len) + mantissa_str;\n      }\n    }\n\n  } else if (mantissa_frac) {\n    /*\n     * 少数表記の場合\n     */\n    returnValue = (mantissa_int || \"0\") + \".\" + mantissa_frac;\n\n  } else if (mantissa_int) {\n    /*\n     * 整数表記の場合\n     */\n    returnValue = mantissa_int;\n  }\n\n  return (returnValue) ? sign + (\n    returnValue\n      /* 先頭の余計なゼロを削除 */\n      .replace(/^(?:0(?!\\.|$))+/, \"\")\n      /* 末尾の余計なゼロを削除 */\n      .replace(/(?:\\.0+|(\\.[0-9]*[1-9])0+)$/, \"$1\")\n  ) : \"0\";\n};\n\n","\r\nexport {Num2FracStr as NumToStr} from \"../lib/Num2DecStr\";\r\n\r\nexport const Num = number=>{\r\n    if(typeof number === \"number\");\r\n    const [integer, decimal] = String(number).split(\".\");\r\n    return {integer, decimal, negative};\r\n};\r\nexport class BigFloat {\r\n    constructor(number){\r\n        const [integer, decimal] = Num2FracStr(number).split(\".\");\r\n        this.integer = integer || \"\";\r\n        this.decimal = decimal || \"\";\r\n        this.negative = false;\r\n    }\r\n    toString(){\r\n        const number = this.integer + (this.decimal && \".\" + this.decimal);\r\n        return (this.negative ? \"-\" : \"+\").concat(number);\r\n    }\r\n    _typeCheck(valuue){\r\n        return Number.isNaN(valuue)\r\n            || (\r\n                typeof valuue !== \"string\"\r\n                && !Number.isFinite(valuue)\r\n            )\r\n    }\r\n    add(number){\r\n        if(this._typeCheck(number))return this;\r\n        const bigfloat = number instanceof BigFloat\r\n            ? number : new BigFloat(number);\r\n        let carry = false;\r\n        const integerLength = Math.max(bigfloat.integer.length, this.integer.length);\r\n        const decimalLength = Math.max(bigfloat.decimal.length, this.decimal.length);\r\n        const number1 = [\r\n            ...this.integer.padStart(integerLength, \"0\"),\r\n            ...[...this.decimal.padEnd(decimalLength, \"0\")].reverse()\r\n        ];\r\n        const number2 = [\r\n            ...bigfloat.integer.padStart(integerLength, \"0\"),\r\n            ...[...bigfloat.decimal.padEnd(decimalLength, \"0\")].reverse()\r\n        ];\r\n        console.log({number1, number2, integerLength, decimalLength})\r\n        const num = [...rei.utility.zip(number1, number2)].reduceRight((total, [dec1, dec2])=>{\r\n            let subtotal = Number(dec1) + Number(dec2) + carry;\r\n            carry = subtotal >= 10;\r\n            if(carry)subtotal = Number(subtotal) - 10;\r\n            return String(subtotal).concat(total);\r\n        }, \"\");\r\n        console.log(carry)\r\n        this.integer = (carry ? \"1\" : \"\") + (decimalLength ? num.slice(0, -decimalLength) : num);\r\n        this.decimal = decimalLength ? num.slice(-decimalLength) : \"\";\r\n        return this;\r\n    }\r\n    sub(number){\r\n        if(this._typeCheck(number))return this;\r\n        const bigfloat = new BigFloat(number);\r\n        let carry = false;\r\n        return this;\r\n    }\r\n    mul(...numbers){\r\n        for(const number of numbers){\r\n            if(this._typeCheck(number))continue;\r\n        }\r\n        return this;\r\n    }\r\n    div(...numbers){\r\n        for(const number of numbers){\r\n            if(this._typeCheck(number))continue;\r\n        }\r\n        return this;\r\n    }\r\n    sur(number){\r\n        return this;\r\n    }\r\n    static eval(formula){\r\n        for(const character of formula){\r\n            if(character === \"\\s\")\r\n                continue;\r\n        }\r\n    }\r\n}\r\n","\r\nexport const abs = x=>(\r\n    x < 0 ? -x : number.toNumber(x)\r\n);\r\nexport const min = (...args)=>(\r\n    args.reduce((min, value)=>(\r\n        min < value ? min : value\r\n    ), Infinity)\r\n);\r\nexport const max = (...args)=>(\r\n    args.reduce((max, value)=>(\r\n        max < value ? max : value\r\n    ), -Infinity)\r\n);\r\n// TODO: sin\r\n// TODO: cos\r\n// TODO: tan\r\nexport const diff = (n1, n2)=>abs(n1-n2);\r\nexport const factorial = num=>{\r\n    if(Number.isNaN(num) || (!Number.isFinite(num) && typeof num !== \"bigint\") || typeof num !== \"number\" && typeof num !== \"bigint\")\r\n        return num;\r\n    for(let i = num;i > 2;num *= --i);\r\n    return num ? num : ++num;\r\n};\r\nconst sqrt5 = Math.sqrt(5)\r\nexport const fibonacci$ = frequency=>{\r\n    const x = Math.pow((1 + sqrt5) / 2, frequency);\r\n    const y = Math.pow((1 - sqrt5) / 2, frequency);\r\n    return Math.round((x - y) / sqrt5);\r\n};\r\nexport const fibonacci = function* (frequency=Infinity){\r\n    for(let prev = 1n, fib = 0n;frequency--;)\r\n        yield fib = prev + (prev = fib);\r\n};\r\nexport const isPrime = number=>{\r\n    if(number === 2)\r\n        return true;\r\n    if(Number.isNaN(number) || !Number.isFinite(number) || number < 2 || number % 2 === 0)\r\n        return false;\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        if(number % i === 0)return false;\r\n    return true;\r\n};\r\nexport const prime = function* (frequency=Infinity){\r\n    yield 2;\r\n    for(let i = 3;frequency--;i += 2)\r\n        if(isPrime(i))yield i;\r\n        else frequency++;\r\n};\r\nexport const primeFactorization = number=>new Promise((resolve, reject)=>{\r\n    if(Number.isNaN(number) || !Number.isFinite(number) || typeof number !== \"number\"){\r\n        reject(new Error(\"Only the numerical value can be factorized\"));\r\n        return;\r\n    }\r\n    const result = [];\r\n    while(number % 2 === 0){\r\n        result.push(2);\r\n        number /= 2;\r\n    }\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        while(number % i === 0){\r\n            result.push(i);\r\n            number /= i;\r\n        }\r\n    if(number > 1)result.push(number);\r\n    resolve(result);\r\n});\r\nexport * from \"./bigfloat\"\r\n// export class Complex {}\r\n/*\r\nimport package_rei from \"../package\";\r\npackage_rei.addModule(\"number\", ()=>class Number {\r\n    static toNumber(number){\r\n        return -(-number);\r\n    }\r\n});\r\npackage_rei.addModule(\"math._hyper\", ({modules})=>(a, n, b=a)=>{\r\n    switch(n){\r\n    case 0: return ++b;\r\n    case 1: return a + b;\r\n    case 2: return a * b;\r\n    case 3: return a ** b;\r\n    default: {\r\n        if(b === 0)return 1;\r\n        let prev = a;\r\n        for(;--b;)\r\n            prev = modules.math.hyper(a, --n, prev);\r\n        return prev;\r\n    }\r\n    }\r\n});\r\npackage_rei.addModule(\"math.hyper\", ({modules})=>(a, n, b=a)=>{\r\n    const stack = new modules.Stack();\r\n    while(1){\r\n        stack.push(modules.math._hyper);\r\n        stack.execute();\r\n    }\r\n});\r\n// TODO: 公倍数, 公約数\r\npackage_rei.addModule(\"math.ack\", ({modules: {math}})=>(x, y, z)=>{\r\n    if(math.min(x, y, z) < 0)\r\n        throw new Error(\"Negative argument cannot be specified for Ackermann function\");\r\n    if(x === 0)return ++y;\r\n    if(y === 0)return math.ack(--x, 1);\r\n    return math.ack(--x, math.ack(x, --y));\r\n}).addModule(\"math.Chain\", ()=>class Chain {\r\n    constructor() {\r\n        this.chain = [];\r\n    }\r\n    chain(num){\r\n        this.chain.push(num);\r\n    }\r\n    sum(){}\r\n});\r\n*/\r\n"],"names":["is.isUndefined","is.isNull","Num2FracStr"],"mappings":"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"}