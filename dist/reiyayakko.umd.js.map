{"version":3,"file":"reiyayakko.umd.js","sources":["../src/utility/typeof.js","../src/utility/is/type.js","../src/utility/is/number.js","../src/utility/is/util.js","../src/utility/range.js","../src/utility/loop/for.js","../src/utility/loop/while.js","../src/utility/loop/order.js","../src/utility/array.js","../src/utility/condition.js","../src/utility/equals.js","../src/utility/getIndex.js","../src/utility/thinning.js","../src/utility/utility.js","../src/utility/zip.js","../src/utility/index.js","../src/object/property.js","../src/object/deepbase/allocate.js","../src/object/deepbase/base.js","../src/object/clone.js","../src/object/temp.js","../src/math/bigfloat.js","../src/math/hyper.js","../src/math/calculation.js","../src/math/sequence.js","../src/index.js"],"sourcesContent":["\r\n/**\r\n * \r\n * @typedef {\"Int8Array\"|\r\n * \"Uint8Array\"|\r\n * \"Uint8ClampedArray\"|\r\n * \"Int16Array\"|\r\n * \"Uint16Array\"|\r\n * \"Int32Array\"|\r\n * \"Uint32Array\"|\r\n * \"Float32Array\"|\r\n * \"Float64Array\"} TypedArray\r\n */\r\n\r\n/**\r\n * デフォルトで`Object.prototype.toString.call`の返り値として考えられるすべてのパターンです。\r\n * たぶん。\r\n *\r\n * @typedef {\"Null\"|\r\n * \"Undefined\"|\r\n * \"Number\"|\r\n * \"String\"|\r\n * \"Boolean\"|\r\n * \"Symbol\"|\r\n * \"Function\"|\r\n * \"Object\"|\r\n * \"Array\"|\r\n * \"Arguments\"|\r\n * \"RegExp\"|\r\n * \"Date\"|\r\n * \"Math\"|\r\n * \"JSON\"|\r\n * \"Error\"|\r\n * \"Promise\"|\r\n * \"Map\"|\r\n * \"Set\"|\r\n * \"WeakMap\"|\r\n * \"WeakSet\"|\r\n * \"GeneratorFunction\"|\r\n * \"Generator\"|\r\n * TypedArray|\r\n * \"ArrayBuffer\"|\r\n * \"DataView\"}\r\n * ObjectToStringTypes\r\n */\r\n\r\n/**\r\n * You can add the type by changing the \"Symbol.toStringTag\" property of the object.\r\n * オブジェクトの\"Symbol.toStringTag\"プロパティーを変更することで、型を追加できます。\r\n * @param {*} value An object that determines the type\r\n * @return {ObjectToStringTypes & String} object type\r\n */\r\nexport const typeOf = value=>(\r\n    Object.prototype.toString.call(value).slice(8, -1)\r\n);\r\n","\r\n// @ts-check\r\n\r\nimport { typeOf } from \"../typeof\";\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Undefined\r\n */\r\nexport const isUndefined = value=>(\r\n    value === void 0\r\n);\r\n\r\n/**\r\n * MEMO: nully的な単語があった希ガス。\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Null or Undefined\r\n */\r\nexport const isNull = value=>(\r\n    value === null || isUndefined(value)\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Boolean\r\n */\r\nexport const isBoolean = value=>(\r\n    typeOf(value) === \"Boolean\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is String\r\n */\r\nexport const isString = value=>(\r\n    typeOf(value) === \"String\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Number\r\n */\r\nexport const isNumber = value=>(\r\n    typeOf(value) === \"Number\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Symbol\r\n */\r\nexport const isSymbol = value=>(\r\n    typeOf(value) === \"Symbol\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Function\r\n */\r\nexport const isFunction = value=>(\r\n    typeOf(value) === \"Function\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether typeof is an object and is not Null\r\n */\r\nexport const isObject = value=>(\r\n    typeof value === \"object\" && value !== null\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether properties can be edited\r\n */\r\nexport const isObjectLike = value=>(\r\n    isFunction(value) || isObject(value)\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Arguments\r\n */\r\nexport const isArguments = value=>(\r\n    typeOf(value) === \"Arguments\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is RegExp\r\n */\r\nexport const isRegExp = value=>(\r\n    typeOf(value) === \"RegExp\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Error\r\n */\r\nexport const isError = value=>(\r\n    typeOf(value) === \"Error\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Map\r\n */\r\nexport const isMap = value=>(\r\n    typeOf(value) === \"Map\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is WeakMap\r\n */\r\nexport const isWeakMap = value=>(\r\n    typeOf(value) === \"WeakMap\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is Set\r\n */\r\nexport const isSet = value=>(\r\n    typeOf(value) === \"Set\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is WeakSet\r\n */\r\nexport const isWeakSet = value=>(\r\n    typeOf(value) === \"WeakSet\"\r\n);\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether {@link typeOf} is TypedArray\r\n */\r\nexport const isTypedArray = value=>(\r\n    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/\r\n        .test(typeOf(value))\r\n);\r\n","\r\n// @ts-check\r\n\r\nimport { isNumber } from \"./type\";\r\n\r\n/**\r\n * Determines if it is a negative number.\r\n *\r\n * 負の数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isNegative = number=>(\r\n    isNumber(number) && number < 0\r\n    || Object.is(-0, number)\r\n);\r\n\r\n/**\r\n * Determines if it is a positive number.\r\n *\r\n * 正の数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isPositive = number=>(\r\n    isNumber(number) && number > 0\r\n    || Object.is(0, number)\r\n);\r\n\r\n/**\r\n * Determines if infinity.\r\n *\r\n * 無限かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isInfinity = number=>(\r\n    number === Infinity || number === -Infinity\r\n);\r\n\r\n/**\r\n * Determines if it is a prime number.\r\n *\r\n * 素数かどうかを判定します。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isPrime = number=>{\r\n    if(number === 2)\r\n        return true;\r\n    if(\r\n        isNaN(number)\r\n        || isInfinity(number)\r\n        || !Number.isInteger(number)\r\n        || number < 2\r\n        || number % 2 === 0\r\n    )return false;\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        if(number % i === 0)return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Determine if it is odd (whether the remainder divided by 2 is 1).\r\n * Even numbers can use {@link isEven}.\r\n *\r\n * 奇数かどうか(2で割った余りが1かどうか)を判定します。\r\n * 偶数には{@link isEven}を使用できます。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isOdd = number=>(\r\n    isNumber(number) && number % 2 === 1\r\n);\r\n\r\n/**\r\n * Determine if it is even (whether the remainder divided by 2 is 0).\r\n * Odd numbers can use {@link isOdd}.\r\n *\r\n * 偶数かどうか(2で割った余りが0かどうか)を判定します。\r\n * 奇数には{@link isOdd}を使用できます。\r\n * @param {*} number\r\n * @return {Boolean}\r\n */\r\nexport const isEven = number=>(\r\n    isNumber(number) && number % 2 === 0\r\n);\r\n","\r\nimport { typeOf } from \"../typeof\";\r\nimport { isArguments, isFunction, isNumber, isObject, isString } from \"./type\";\r\n\r\n/**\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the value is iterable\r\n */\r\nexport const isIterable = value=>(\r\n    isObject(value)\r\n    && isFunction(value[Symbol.iterator])\r\n    && isObject(value[Symbol.iterator]())\r\n);\r\n\r\n/**\r\n * Array.isArrayかisArgumentsがtrueかどうか\r\n * 値がArrayLikeかどうか\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the value is ArrayLike\r\n */\r\nexport const isArrayLike = value=>{\r\n    if(!isObject(value))return false;\r\n    if(Array.isArray(value) || isArguments(value) || isNumber(value.length))\r\n        return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Alpha:\r\n * @param {*} value The value to be compared\r\n * @return {Boolean} Whether the property does not exist\r\n */\r\nexport const isEmpty = value=>{\r\n    if(isString(value) || isArrayLike(value))\r\n        return value.length === 0;\r\n    if(typeOf(value) === \"Object\")\r\n        return Object.keys(value).length === 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verify whether an error occurs when you execute it by passing the argument \"args\" to \"func\".\r\n * \"func\"に引数として\"args\"を渡して実行した場合にエラーが発生するか検証します。\r\n * @param {Function} func Function that verifies if an error occurs\r\n * @param  {...any} [args] Argument that verifies whether an error has occurred\r\n * @return {Boolean} Whether an error has occurred\r\n */\r\nexport const isThrowError = (func, ...args)=>{\r\n    try{\r\n        func.apply(void 0, args);\r\n        return false;\r\n    }catch(err){ return true; }\r\n};\r\n","\r\nimport {isUndefined} from \"./is/index\";\r\n\r\n/**\r\n * startからendまでのincrementごとの数のジェネレーター。\r\n * for-of文で使う場合代替として{@link forIndex}が使用できます。\r\n *\r\n * @param {Number} start\r\n * 初期値。`end`が指定されていなかった場合は0からこの数までの連版となる。\r\n * つまり、`range(end)`は`range(0, end)`と等価。\r\n * @param {Number} [end]\r\n * 出力する数字の上限/下限。\r\n * @param {Number} [step=1]\r\n * 一度に増やす/減らす数。\r\n * start > end の場合でも負の値を指定する必要はない。\r\n * @example\r\n * console.log([...range(-4)]);\r\n * // [0, -1, -2, -3, -4]\r\n *\r\n * console.log([...range(1, 10, 2)]);\r\n * // [1, 3, 5, 7, 9]\r\n */\r\nexport const range = null; /* function* (start, end, step=1){\r\n    if(isUndefined(end)){\r\n        yield* range(0, start);\r\n        return;\r\n    }\r\n    step = Math.abs(step);\r\n    if(start > end)step = -step;\r\n    while(Math.abs(end - start) >= Math.abs(step)){\r\n        yield start;\r\n        start += step;\r\n    }\r\n    yield start;\r\n};\r\n// */\r\n","\r\nimport {isUndefined} from \"../is/index\";\r\nimport {range} from \"../range\";\r\n\r\n/**\r\n * Receives an Iterable object and calls a callback function for each value.\r\n * Iterableなオブジェクトを受け取って値ごとにコールバック関数を呼び出します。\r\n * @param {Iterable} iterator An Iterable object used for the loop\r\n * @param {Function} func\r\n * A callback function that is executed for each value of the Iterable object\r\n * When a value other than undefined is returned,\r\n * the loop is terminated and the value is returned.\r\n */\r\nexport const forOf = function(iterator, func){\r\n    const variable = [];\r\n    for(const value /* of iterator */ = null;;){\r\n        const flag = func.call(this, value, ...variable);\r\n        if(!isUndefined(flag))return flag;\r\n    }\r\n    return void 0;\r\n};\r\n\r\n/**\r\n * OPTIMIZE: 関数のlength0なら素のfor --i:\r\n * Call the callback function for each number from 0 to maxIndex.\r\n * 0からmaxIndexまでの数値ごとにコールバック関数を呼び出します。\r\n * @param {Number} maxIndex Repeats this number of times\r\n * @param {Function} func\r\n * Callback function that is executed maxIndex times\r\n * When a value other than undefined is returned,\r\n * the loop is terminated and the value is returned.\r\n */\r\nexport const forIndex = function(maxIndex, func){\r\n    return forOf.call(this, range(--maxIndex), function(){\r\n        const flag = func.apply(this, arguments);\r\n        if(!isUndefined(flag))return flag;\r\n        return void 0;\r\n    });\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @param {*} object\r\n * @param {*} func\r\n * @param {*} [that]\r\n */\r\nexport const forIn = (object, func, that)=>{\r\n    if(typeof object === \"object\")\r\n        object = Object.entries(object);\r\n    return forIndex(object.length, index=>(\r\n        func.call(that, object[index])\r\n    ));\r\n};\r\n","\r\nimport {isUndefined} from \"../is/index\";\r\n\r\n/**\r\n * MEMO: ループ条件とreturnをどうにかして引き剥がしたい。\r\n * MEMO: do取りたい。flag初期値追加。\r\n * @param {Function} func Callback function that continues to run as long as it returns undefined\r\n * @param {*} [that] Specify this of the callback function\r\n */\r\nexport const doWhile = (func, that)=>{\r\n    let flag;\r\n    do flag = func.call(that);\r\n    while(isUndefined(flag));\r\n    return flag;\r\n};\r\n","\r\nimport { forOf } from \"./for\";\r\n/**\r\n * Executes the function specified by func level times.<br>\r\n * funcで指定された関数をlevel回実行します。\r\n *\r\n * @param {Number} level Number of loops\r\n * @param {Function} func Repeated callback function<br>\r\n *     The return value of the previous callback function is passed as an argument\r\n * @param {*} [arg] Arguments passed to the first callback function\r\n * @return Return value of the last callback function\r\n */\r\nexport const previous = (level, func, arg)=>{\r\n    for(;level--;)arg = func(arg);\r\n    return arg;\r\n};\r\n\r\n/**\r\n * Execute the functions specified in the order from left to right.<br>\r\n * オーダーで指定された関数を左から順番に実行します。\r\n *\r\n * @param {*} arg Arguments passed to the first callback function\r\n * @param {...Function} orders Repeated callback function.<br>\r\n *     The return value of the previous callback function is passed as an argument\r\n * @return Return value of the last callback function\r\n */\r\nexport const inOrder = (arg, ...orders)=>{\r\n    forOf(orders, (func)=>{\r\n        arg = func(arg);\r\n    });\r\n    return arg;\r\n};\r\n","\r\nimport { isObject } from \"./is/index\";\r\nimport { forOf } from \"./loop/index\";\r\n\r\nconst own = value=>value;\r\n\r\nconst bind = (func, ...args)=>arg=>func(arg, ...args);\r\n\r\nexport const gurop = (array, func=own)=>{\r\n    const gurops = {};\r\n    forOf(array, value=>{\r\n        /*\r\n        IDEA: fの返り値: {gurupName1:{value}}\r\n        */\r\n        const entry = func(value);\r\n        const entries = isObject(entry)\r\n            ? Object.entries(entry)\r\n            : [[entry, value]];\r\n        forOf(entries, ([key, value])=>{\r\n            if(!gurops[key])gurops[key] = [];\r\n            gurops[key].push(value);\r\n        });\r\n    });\r\n    return gurops;\r\n};\r\n// export const partition = (array, func)=>{};\r\n// INFO: findのマッチした数版\r\nexport const count = (array, func)=>{\r\n    let match = 0;\r\n    forOf(array, (value)=>{\r\n        match += Boolean(func(value));\r\n    });\r\n    return match;\r\n};\r\n\r\nexport const generate = (generator, func, that)=>{\r\n    let done;\r\n    do{\r\n        const result = generator.next();\r\n        ({done} = result);\r\n        func.call(that, result.value);\r\n    }while(!done);\r\n};\r\nexport const generator = ()=>{};\r\n\r\nexport const reduce = (array, func, defaultValue, that)=>{\r\n    // {value: undefined, done: false}\r\n};\r\n\r\n// export const map = (array, func)=>{\r\n//     array.flatMap(value=>func([value]));\r\n// };\r\n","\r\nimport { isFunction, isNull } from \"./is/index\";\r\nimport { typeOf } from \"./typeof\";\r\n\r\n// TODO: コールバック関数のthisを指定できる高階関数のthatの指定の仕方を変更。\r\n// 高階関数自体のthisを継承する。\r\n// f(that) => f.call(that)\r\n\r\n/**\r\n * Executes the function if the value is a function, otherwise returns the value\r\n *\r\n * NOTE: tryCall\r\n * @param {*} value The value to be executed if it was a function\r\n * @param {*[]} [args] Argument when the value is a function\r\n * @return {*} The return value of the function if the value is a function, otherwise the value\r\n */\r\nexport const callorElse = function(value, ...args){\r\n    return isFunction(value)\r\n        ? value.apply(this, args)\r\n        : value;\r\n};\r\n\r\n/**\r\n * Returns the first found value. If not found, it returns the last value.\r\n * \\n値の中で最初に見つかった値を返します。見つからない場合、最後の値を返します。\r\n *\r\n * @param {*[]} values Value and alternate value. Higher priority to the left\r\n * @param {Function} evalFunc\r\n * A function that evaluates a value. Returning a true value is considered an invalid value.\r\n * 値を評価する関数。trulyな値を返すと無効な値とみなされる\r\n */\r\nexport const substitute = (values, evalFunc=isNull)=>(\r\n    values.reduce((value, subValue)=>(\r\n        evalFunc(value) ? subValue : value\r\n    ), values.shift())\r\n);\r\n\r\n/**\r\n * Beta:\r\n * @param {*} value\r\n * @param {*} types\r\n * @param {*} sub\r\n * @param {*} typeGetter\r\n */\r\nexport const typeCheck = (value, types, sub, typeGetter=typeOf)=>{\r\n    const type = typeGetter(value);\r\n    if(types.includes(type))\r\n        return value;\r\n    return callorElse(sub, [type]);\r\n};\r\n\r\n/**\r\n * Beta:\r\n * @param {*} props\r\n * @param {*} defaultProps\r\n * @param {*} subFunc\r\n */\r\nexport const prop = (props, defaultProps, subFunc)=>(\r\n    Object.entries(props).reduce((props_, [prop, key])=>{\r\n        props_[key] = substitute([prop, defaultProps[key]], subFunc);\r\n        return props_;\r\n    })\r\n);\r\n","\r\n// @ts-check\r\n\r\nimport { typeOf } from \"./typeof\";\r\n\r\n/**\r\n * 引数が全て同じかどうかをSameValueZeroによって検証します。\r\n * @param  {...any} values\r\n * @return {Boolean}\r\n */\r\nexport const equals = (...values)=>{\r\n    const first = values.shift();\r\n    const equal = Number.isNaN(first)\r\n        ? Number.isNaN\r\n        : (value) => (first === value);\r\n    return values.every(equal);\r\n};\r\n\r\n/**\r\n * 引数の型({@link typeOf})が全て同じかどうかを検証します。\r\n * @param  {...any} values\r\n * @return {Boolean}\r\n */\r\nexport const equalsType = (...values)=>(\r\n    equals(values.map(typeOf))\r\n);\r\n\r\n// IDEA: deepEqualをここにつれてくる\r\n","\r\nimport {isNull, isNegative} from \"./is/index\";\r\n/**\r\n * 最後から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} index\r\n */\r\nexport const last = (orign, index=1)=>(\r\n    orign[orign.length - index]\r\n);\r\n\r\n/**\r\n * 最初から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} index\r\n */\r\nexport const first = (orign, index=1)=>(\r\n    orign[index - 1]\r\n);\r\n\r\n/**\r\n * @private\r\n * @param {ArrayLike} orign\r\n * @param {Number} index\r\n */\r\nconst getIndex = (orign, index=0)=>(\r\n    isNegative(index)\r\n        ? orign.length + index - 1\r\n        : index\r\n);\r\n\r\n/**\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} start 切り取り開始位置\r\n * @param {Number} cutCount 切り取る長さ\r\n * @param {Array} insertItems 挿入する要素\r\n */\r\nexport const splice = (orign, start, cutCount=0, ...insertItems)=>{\r\n    start = getIndex(orign, start);\r\n    const before = orign.slice(0, start);\r\n    const after = orign.slice(cutCount + start);\r\n    return before.concat(...insertItems, after);\r\n};\r\n\r\n/**\r\n * indexが正の数なら最初から、負の数なら最後から数えて`index`番目の要素を取得します。\r\n *\r\n * @param {String|Array} orign 元の要素\r\n * @param {Number} index\r\n * @param {*} insert\r\n */\r\nexport const index = (orign, index=0, insert=null)=>{\r\n    if(isNull(insert))\r\n        return orign[getIndex(orign, index)];\r\n    return splice(orign, index, 1, insert);\r\n};\r\n\r\n/**\r\n *\r\n * @param {Iterable} iterable\r\n * @param {Number} index\r\n */\r\nexport const iterableIndex = (iterable, index)=>{\r\n    const iterator = iterable[Symbol.iterator]();\r\n    // if(isNegative(index))index += orign.length;\r\n    for(;--index;)iterator.next();\r\n    return iterator.next().value;\r\n};\r\n\r\n/**\r\n * Beta:\r\n * 分割代入拡張\r\n *\r\n * @param {Array} array 元の配列\r\n * @param {Number} beforeItem restの前のパラメータの数\r\n * @param {Number} afterItem restの後のパラメータの数\r\n * @returns\r\n */\r\nexport const restSplit = (array, beforeItem, afterItem=0)=>{\r\n    const restEndIndex = array.length - afterItem;\r\n    const rest = array.slice(beforeItem, restEndIndex);\r\n    array.splice(beforeItem, restEndIndex - beforeItem, rest);\r\n    return array;\r\n};\r\n\r\n// classifying\r\n// const [key, name=\"the name\", ...rest, param{3}] = ArrayLike();\r\n// [difault, ...]\r\n// const {key, key: name, ...rest} = ObjectLike();\r\n// {key: null || name || [name, difault], ...}\r\n","\r\n// @ts-check\r\n\r\nimport { isNumber } from \"./is/index\";\r\n\r\n/**\r\n * 高階関数。一度実行してから一定時間内に発生した処理を無視、\r\n * 一定期間呼び出されなかった場合も実行する。\r\n * @param {Function} func\r\n * @param {Number} wait 待機時間\r\n * @return {(...args: any[]) => void}\r\n */\r\nexport const throttle = (func, wait=1000)=>{\r\n    let id, waiting, context, args;\r\n    return function(){\r\n        if(!isNumber(id)){\r\n            func.apply(this, arguments);\r\n            id = setTimeout(()=>{\r\n                waiting && func.apply(context, args);\r\n                waiting = false;\r\n                id = null;\r\n            }, wait);\r\n        }else{\r\n            waiting = true;\r\n            context = this;\r\n            args = arguments;\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * 高階関数。呼び出されてから一定期間呼び出されなかった場合に実行する。\r\n * @param {Function} func\r\n * @param {Number} wait 待機時間\r\n * @return {(...args: any[]) => void}\r\n */\r\nexport const debounce = (func, wait=1000)=>{\r\n    let id;\r\n    return function(){\r\n        clearTimeout(id);\r\n        id = setTimeout(()=>func.apply(this, arguments), wait);\r\n    };\r\n};\r\n","\r\nimport { isObject } from \"./is/index\";\r\n\r\n// TODO: format\r\n\r\n// /**\r\n//  * Alpha:\r\n//  * @param {String[]} strings\r\n//  * @param  {...any} rawStrings\r\n//  */\r\n// const r = (strings, ...rawStrings)=>{\r\n//     console.log(strings);\r\n//     const result = [];\r\n//     for(const __ of rawStrings){\r\n//         result.push(strings.pop());\r\n//         result.push(__);\r\n//     }\r\n//     return result;\r\n// };\r\n\r\nexport const toPrimitive = value=>{\r\n    if(!isObject(value))\r\n        return value;\r\n    if(\"valueOf\" in value)\r\n        return value.valueOf();\r\n    if(\"toString\" in value)\r\n        return value.toString();\r\n    if(Symbol && Symbol.toPrimitive in value)\r\n        return value[Symbol.toPrimitive](\"default\");\r\n    return value;\r\n};\r\n\r\nexport const uniq = array=>{\r\n    const existings = [];\r\n    return array.filter(value=>{\r\n        const existing = existings.includes(value);\r\n        if(!existing)existings.push(value);\r\n        return !existing;\r\n    });\r\n};\r\n","\r\nimport {isArrayLike} from \"./is/index\";\r\n\r\n/**\r\n * Flip objects at depth 0 and 1.<br>\r\n * オブジェクトを深さ0と1で反転します。\r\n *\r\n * @param {*} objects\r\n * The target object. The child properties of this object must also be objects.<br>\r\n * ターゲットオブジェクト。 このオブジェクトの子プロパティもオブジェクトである必要があります。\r\n * @param {*} [getKeys=Object.keys]\r\n * A function that returns the keys of the object as an array.<br>\r\n * オブジェクトのキーを配列として返す関数。<br>\r\n * Example:\r\n * - rei.object.allKeys\r\n * @returns\r\n * An object whose depth is inverted by 0 and 1.<br>\r\n * 深度が0と1で反転したオブジェクト。\r\n */\r\nexport const zip = (objects, getKeys=Object.keys)=>{\r\n    const keys = getKeys(objects);\r\n    const rootIsArray = isArrayLike(objects);\r\n    const isArray = keys.every(key=>(\r\n        isArrayLike(objects[key])\r\n        && getKeys(objects[key]).every(_=>/\\d/.test(_))\r\n    ));\r\n    return keys.reduce((ziped, key)=>{\r\n        getKeys(objects[key]).forEach(name=>{\r\n            if(!ziped[name])ziped[name] = rootIsArray ? [] : {};\r\n            ziped[name][key] = objects[key][name];\r\n        });\r\n        return ziped;\r\n    }, isArray ? [] : {});\r\n};\r\n","\r\nexport * from \"./array\";\r\nexport * from \"./condition\";\r\nexport * from \"./equals\";\r\nexport * from \"./getIndex\";\r\nexport * from \"./is/index\";\r\nexport * from \"./loop/index\";\r\nexport * from \"./range\";\r\nexport * from \"./thinning\";\r\nexport * from \"./typeof\";\r\nexport * from \"./utility\";\r\nexport * from \"./zip\";\r\n\r\nimport { forIndex } from \"./loop/index\";\r\n// TEMP:\r\n// export class ArrayLike extends Array {\r\n//     constructor(){\r\n//         super();\r\n//         console.log(this);\r\n//     }\r\n// }\r\n// export class Temp {\r\n//     constructor(){\r\n//         this.gen = this.gen.bind(this);\r\n//         return this.gen;\r\n//     }\r\n//     gen(){\r\n//         console.log(this);\r\n//         return this.gen;\r\n//     }\r\n// }\r\n// export class Memo {\r\n//     constructor(func){\r\n//         this.function = func;\r\n//         this.existing = new Map();\r\n//     }\r\n//     execute(args){\r\n//         if(this.existing.has(args))\r\n//             return this.existing.get(args);\r\n//         const result = execute(this.function, args);\r\n//         this.existing.set(args, result);\r\n//         return result;\r\n//     }\r\n// }\r\n// String instruction\r\n\r\n\r\n// eslint-disable-next-line\r\nexport const argument = function(){ return arguments; };\r\n\r\nexport const memoize = (func, effective=Infinity)=>{\r\n    const newFunc = function(){\r\n        const prevResult = forOf(newFunc.memo, (fragment, result)=>{\r\n            if(deepEquals(fragment))\r\n                return result;\r\n            return void 0;\r\n        });\r\n        if(isUndefined(prevResult))\r\n            return prevResult;\r\n        // eslint-disable-next-line prefer-rest-params\r\n        const result = func.apply(this, arguments);\r\n        newFunc.memo.set(arguments, result);\r\n        return result;\r\n    };\r\n    if(Array.isArray(effective)){\r\n        newFunc.memo = new Array(effective.length);\r\n        forIndex(effective.length, i=>{\r\n            newFunc.memo[i] = new Map(effective[i]);\r\n        });\r\n    }else{\r\n        const length = substitute([effective,1], v=>!Number.isFinite(v));\r\n        newFunc.memo = new Array(length);\r\n        forIndex(length, i=>{\r\n            newFunc.memo[i] = new Map();\r\n        });\r\n    }\r\n    return newFunc;\r\n};\r\n\r\nexport class MemoMap {\r\n    constructor(initValue){\r\n        this.map = new Map(initValue);\r\n    }\r\n}\r\n\r\n// MEMO: ifs スタック\r\n","\r\n// @ts-check\r\n\r\nimport { isObject, isSymbol, forOf } from \"../utility/index\";\r\n\r\nexport const has = (thisObject, propName)=>(\r\n    Object.prototype.hasOwnProperty.call(thisObject, propName)\r\n);\r\n\r\n/**\r\n * 受け取ったオブジェクトの全てのプロパティー名とSymbolを取得します。\r\n * @param  {...Object} object キーを取得するオブジェクトです。\r\n * @return {Array<String | Symbol>} オブジェクトのプロパティー名とSymbolの配列です。\r\n */\r\nexport const allKeys = object=>(\r\n    !isObject(object) ? null : []\r\n        .concat(Object.getOwnPropertyNames(object))\r\n        .concat(Object.getOwnPropertySymbols(object))\r\n);\r\n\r\n/**\r\n * \r\n * @param {Object} obj \r\n * @param {String|Symbol|Array<String|Symbol>} propKey \r\n * @param {Boolean} define \r\n */\r\nexport const property = (obj, propKey, define=false)=>{\r\n    if(typeof propKey === \"string\")\r\n        propKey = propKey.split(\".\");\r\n    else if(isSymbol(propKey))\r\n        propKey = [propKey];\r\n    else if(Array.isArray(propKey))\r\n        propKey = propKey.flatMap(key=>(\r\n            typeof key===\"string\" ? key.split(\".\") : key\r\n        ));\r\n    return propKey.reduce((object, key)=>{\r\n        if(!has(object, key)){\r\n            if(define)object[key] = {};\r\n        }\r\n        return object[key];\r\n    }, obj);\r\n};\r\n\r\nexport const structure = (baseObj={}, applyObj={})=>{\r\n    forOf(allKeys(applyObj), (propName)=>{\r\n        const applyProp = applyObj[propName];\r\n        if(typeof applyProp === \"object\")\r\n            structure(baseObj[propName], applyProp);\r\n        else baseObj[propName] = applyProp;\r\n    });\r\n    return baseObj;\r\n};\r\n","\r\nimport { callorElse } from \"../../utility/index\";\r\nimport { isObject } from \"../../utility/is/index\";\r\nimport { deepBase } from \"./base\";\r\n\r\n/**\r\n * deepBaseのプロパティー\r\n * @typedef {{\r\n * keys: Function;\r\n * depth: Number;\r\n * maxDepth: Number;\r\n * existing: Set | WeakSet;\r\n * structureCall: Function;\r\n * propFuncIfObject: Function;\r\n * propFunc: Function;\r\n * }} prop\r\n */\r\n\r\n/**\r\n * @param {*} object\r\n * @param {String | Symbol} propName\r\n * @param {prop} props\r\n */\r\nexport const allocate = (object, propName, props={})=>{\r\n    const target = Object.getOwnPropertyDescriptor(object, propName);\r\n    if(isObject(target)){\r\n        callorElse(props.propFuncIfObject, object, propName);\r\n        if(!props.existing.has(target)){\r\n            props.existing.add(target);\r\n            deepBase(target, Object.assign({}, props, {\r\n                depth: props.depth + 1,\r\n            }));\r\n        }\r\n    }else{\r\n        const prop = Object.getOwnPropertyDescriptor(object, propName);\r\n        callorElse(props.propFunc, object, propName, prop);\r\n    }\r\n};\r\n","\r\nimport { callorElse, forOf } from \"../../utility/index\";\r\nimport { allKeys } from \"../property\";\r\nimport { allocate } from \"./allocate\";\r\n\r\n/**\r\n * deepBaseのプロパティー\r\n * @typedef {{\r\n * keys: Function;\r\n * depth: Number;\r\n * maxDepth: Number;\r\n * existing: Set | WeakSet;\r\n * structureCall: Function;\r\n * propFuncIfObject: Function;\r\n * propFunc: Function;\r\n * }} prop\r\n */\r\n\r\n/**\r\n * WIP: 開発難航中。\r\n * WARNING: おそらくバグ多数あり。\r\n * 汎用Deep関数\r\n * @param {Object} targetObject\r\n * @param {prop} props\r\n */\r\nexport const deepBase = (targetObject, props={})=>{\r\n    ({\r\n        keys:     props.keys = allKeys,\r\n        depth:    props.depth = 0,\r\n        maxDepth: props.maxDepth = Infinity,\r\n        existing: props.existing = new WeakSet(),\r\n        structureCall: props.structureCall = console.log,\r\n        propFuncIfObject: props.propFuncIfObject = console.log,\r\n        propFunc: props.propFunc = console.log,\r\n    } = props);\r\n    callorElse(props.structureCall, targetObject);\r\n    forOf(props.keys(targetObject), (propName)=>{\r\n        allocate(targetObject, propName, props);\r\n    });\r\n};\r\n","\r\nimport { substitute } from \"../utility/index\";\r\nimport { deepBase } from \"./deepbase/index\";\r\nimport { has } from \"./property\";\r\n\r\n/**\r\n * WIP:\r\n * @param {Object} object\r\n * @param {Number} depth\r\n */\r\nexport const clone_WIP = (object, depth)=>{\r\n    const result = {};\r\n    let temp = result;\r\n    deepBase(object, {\r\n        propFunc(o, propName){\r\n            const prop = Object.getOwnPropertyDescriptor(o, propName);\r\n            if(has(prop, \"value\"))prop.value = null;\r\n            Object.defineProperty(temp, propName, prop);\r\n        },\r\n        propFuncIfObject(o, propName){\r\n            const target = o[propName];\r\n            const prototype = Object.getPrototypeOf(target);\r\n            const __ = Object.create(prototype);\r\n            temp[propName] = temp[propName] || __;\r\n            temp = temp[propName];\r\n        },\r\n        structureCall(r){\r\n            console.log(r);\r\n        },\r\n        depth: substitute([depth, Infinity])\r\n    });\r\n    console.log(object, \"=>\", result);\r\n    return result;\r\n};\r\n","\r\nexport const spread = (target, ...sources)=>{\r\n    switch(typeof target){\r\n    case \"object\":\r\n        if(Array.isArray(target))\r\n            return target.concat(...sources);\r\n        return Object.assign(target, ...sources);\r\n    case \"function\":\r\n        return target.apply({}, sources.flat());\r\n    default:\r\n        return target;\r\n    }\r\n};\r\n\r\n// TODO: キーがかぶらないように合成\r\nexport const attach = (object, name)=>{};\r\n\r\nexport * from \"./property\";\r\n\r\nexport const and = (...object)=>{\r\n    deep([object]);\r\n    object.reduce();\r\n};\r\nexport const xor = (...arrays)=>{};\r\n\r\nconst watchMap = new WeakMap();\r\nexport const watch = (obj, propName, func)=>{\r\n    const descriptors = watchMap.has(obj)\r\n        ? watchMap.get(obj) : {};\r\n    const descriptor = Object.getOwnPropertyDescriptor(obj, propName);\r\n    if(!descriptor.hasOwnProperty(\"value\"))\r\n        return;\r\n    descriptors[propName] = descriptor;\r\n    watchMap.set(obj, descriptors);\r\n    let value = obj[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        get: ()=>value,\r\n        set: newValue=>{\r\n            func(value, value = newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n};\r\n\r\nexport const watchStop = (obj, propName)=>{\r\n    const descriptor = watchMap.get(obj)[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        ...descriptor,\r\n        value: obj[propName]\r\n    });\r\n};\r\n","\r\n// @ts-check\r\n\r\nimport { first, splice } from \"../utility/getIndex\";\r\nimport { doWhile, equals, forIndex, forOf, previous, substitute, zip } from \"../utility/index\";\r\nimport { isInfinity, isNegative, isNull, isNumber, isPositive, isString, isBoolean } from \"../utility/is/index\";\r\n\r\n/**\r\n * @typedef {Number | String | BigFloat} NumberTypes\r\n */\r\n\r\nconst isSafe = (target)=>(\r\n    target.integer.length < 16 && !target.decimal\r\n);\r\n\r\n/**\r\n * WIP: In development.\r\n *\r\n * Alpha: 符号一部バグあり、除算対応できてない、おそらく他にもバグあり。\r\n *\r\n * OPTIMIZE: 桁が増えたときのパフォーマンスがひどい。\r\n *\r\n * IDEA: Stringによって1桁ずつ保存ではなく、\r\n * 乗算でNumber.MAX_SAFE_INTEGERを超えない7桁ずつArrayに保存\r\n * @export\r\n * @class BigFloat\r\n */\r\nexport class BigFloat {\r\n    /**\r\n     * Creates an instance of BigFloat.\r\n     * @memberof BigFloat\r\n     * @param {NumberTypes} number\r\n     */\r\n    constructor(number=0){\r\n        this.setNumber(number);\r\n        this.format();\r\n        /**\r\n         * 少数点以下有効桁数\r\n         * @type {Object}\r\n         */\r\n        this.digits = {\r\n            integer: 1000,\r\n            decimal: 100,\r\n            valid: 16\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof BigFloat\r\n     */\r\n    // eslint-disable-next-line class-methods-use-this\r\n    // get [Symbol.toStringTag](){\r\n    //     return \"BigFloat\";\r\n    // }\r\n    /**\r\n     * @readonly\r\n     * @memberof BigFloat\r\n     */\r\n    // get sign(){\r\n    //     return this.isPositive ? \"+\" : \"-\";\r\n    // }\r\n    setSign(sign){\r\n        this.isPositive\r\n            = isString(sign) ? first(sign) !== \"-\"\r\n            : isNumber(sign) ? isPositive(sign)\r\n            : isBoolean(sign) ? sign\r\n            : sign instanceof BigFloat ? sign.isPositive\r\n            : null;\r\n    }\r\n    /**\r\n     * 引数の数字をthisのBigfloatに代入\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {NumberTypes} number\r\n     */\r\n    setNumber(number){\r\n        // @ts-ignore\r\n        if(Number.isNaN(number) || isInfinity(number)){\r\n            this.exception = number;\r\n            // @ts-ignore\r\n            number = (Math.sign(number) || \"\").toString().slice(0, 1);\r\n        }else // IDEA: 無限、循環小数等\r\n            this.exception = null;\r\n        number = String(number);\r\n        const [fst] = number;\r\n        // 正負符号\r\n        this.setSign(fst);\r\n        number = fst === \"-\" || fst === \"+\"\r\n            ? number.slice(1) : number;\r\n        const point = number.indexOf(\".\");\r\n        const decimalPoint = point !== -1 ? point : Infinity;\r\n        this.integer = number.slice(0, decimalPoint);\r\n        this.decimal = number.slice(decimalPoint + 1);\r\n    }\r\n    /**\r\n     * integer, decimalのpaddingを指定して数字を取得\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {Number} int integerのpadding\r\n     * @param {Number} dec decimalのpadding\r\n     * @return {Number[]} full number\r\n     */\r\n    getNumber(int=1, dec=0){\r\n        const _ = this.integer.padStart(int, \"0\") + this.decimal.padEnd(dec, \"0\");\r\n        const result = [];\r\n        forIndex(_.length, (index)=>{\r\n            result.push(Number(_[index]));\r\n        });\r\n        return result;\r\n    }\r\n    setDecimalPoint(decimalPoint=0){\r\n        const number = this.getNumber().join(\"\");\r\n        const decimal = number.length - decimalPoint;\r\n        this.integer = number.slice(0, decimal);\r\n        this.decimal = number.slice(decimal);\r\n    }\r\n    format(){\r\n        this.integer = this.integer.replace(/^0+/, \"\");\r\n        this.decimal = this.decimal.replace(/0+$/, \"\");\r\n        return this;\r\n    }\r\n    toString(){\r\n        return (!isNull(this.exception)\r\n            ? String(this.exception)\r\n            : this.sign.concat(\r\n                this.integer || \"0\",\r\n                this.decimal\r\n                    ? `.${this.decimal}`\r\n                    : \"\"\r\n            ));\r\n    }\r\n    valueOf(){\r\n        return substitute([this.exception, this.toString()]);\r\n    }\r\n    /**\r\n     * メソッド版add\r\n     * @memberof BigFloat\r\n     * @param {number} number\r\n     * @return\r\n     */\r\n    increment(number=1){\r\n        this.setNumber(BigFloat.addition(this, number));\r\n        return this;\r\n    }\r\n    /**\r\n     * メソッド版sub\r\n     * @memberof BigFloat\r\n     * @param {number} number\r\n     * @return\r\n     */\r\n    decrement(number=1){\r\n        this.setNumber(BigFloat.subtraction(this, number));\r\n        return this;\r\n    }\r\n    trunc(cutCount=0){\r\n        this.decimal = this.decimal.slice(0, cutCount);\r\n        return this;\r\n    }\r\n    floor(cutCount=0){\r\n        return this.trunc(cutCount);\r\n    }\r\n    ceil(cutCount=0){\r\n        const fst = first(this.decimal, cutCount);\r\n        if(fst)this.increment();\r\n        return this.trunc(cutCount);\r\n    }\r\n    /**\r\n     * 四捨五入\r\n     * 正の無限大の方向ではなく0から遠ざかる次の整数に丸められます。\r\n     *\r\n     * @memberof BigFloat\r\n     * @param {number} [cutCount=0]\r\n     * @returns\r\n     */\r\n    round(cutCount=0){\r\n        const fst = Number(first(this.decimal, cutCount));\r\n        if(fst >= 5)this.increment();\r\n        return this.trunc(cutCount);\r\n    }\r\n    /**\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {BigFloat} n1\r\n     * @param {BigFloat} n2\r\n     * @returns\r\n     */\r\n    static max2(n1, n2){\r\n        if(n1.integer.length !== n2.integer.length)\r\n            return n1.integer.length > n2.integer.length\r\n                ? n1 : n2;\r\n        const digits = {\r\n            integer: Math.max(n1.integer.length, n2.integer.length),\r\n            decimal: Math.max(n1.decimal.length, n2.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            n1.getNumber(digits.integer, digits.decimal),\r\n            n2.getNumber(digits.integer, digits.decimal)\r\n        ]);\r\n        return forOf(sumValue, ([num1, num2])=>(\r\n            num1 !== num2 ? (num1 > num2 ? num1 : num2) : void 0\r\n        ));\r\n    }\r\n    /**\r\n     * Beta: 加算\r\n     * Convert argument to BigFloat perform addition\r\n     *\r\n     * FIXME: 符号が正しくない。\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} addNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static addition(target, addNum){\r\n        target = new BigFloat(target);\r\n        addNum = new BigFloat(addNum);\r\n        // Numberで計算可能ならNumberで計算\r\n        if(isSafe(target) && isSafe(addNum))\r\n            return new BigFloat(Number(target) + Number(addNum));\r\n        // 符号が異なる場合、符号を反転して減算\r\n        if(target.isPositive !== addNum.isPositive){\r\n            addNum.setSign(!addNum.isPositive);\r\n            return BigFloat.subtraction(target, addNum);\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, addNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, addNum.decimal.length),\r\n        };\r\n        const sumValue = zip([\r\n            target.getNumber(digits.integer, digits.decimal),\r\n            addNum.getNumber(digits.integer, digits.decimal)\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            const carry = Number(first(total));\r\n            const subtotal = String(carry + targetNumber + addNumber);\r\n            return splice(total, 0, 1, subtotal.padStart(2, \"0\"));\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        result.setSign(target);\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 減算\r\n     * Convert argument to BigFloat and perform subtraction\r\n     *\r\n     * HACK: let多すぎ問題。もっとスコープを絞りたい。\r\n     *\r\n     * WARNING: 途中の桁消えてる可能性あり。splice流用してfirst消して大丈夫か？\r\n     *\r\n     * FIXME: 符号が正しくない。\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} subNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static subtraction(target, subNum){\r\n        target = new BigFloat(target);\r\n        subNum = new BigFloat(subNum);\r\n        // Numberで計算可能ならNumberで計算\r\n        if(isSafe(target) && isSafe(subNum))\r\n            return new BigFloat(Number(target) - Number(subNum));\r\n        // 符号が異なる場合、符号を反転して加算\r\n        if(target.isPositive !== subNum.isPositive){\r\n            subNum.setSign(!subNum.isPositive);\r\n            return BigFloat.addition(target, subNum);\r\n            /*\r\n            NOTE:\r\n            (+9 - +1) = (+9 + -1) = +8 : -\r\n            (+1 - +9) = (+1 + -9) = -8 : -\r\n\r\n            (-9 - -1) = (-9 + +1) = -8 : -\r\n            (-1 - -9) = (-1 + +9) = +8 : -\r\n\r\n            (+9 - -1) = (+9 + +1) = +10 : +\r\n            (+1 - -9) = (+1 + +9) = -10 : +\r\n\r\n            (-9 - +1) = (-9 + -1) = -10 : +\r\n            (-1 - +9) = (-1 + -9) = +10 : +\r\n            */\r\n        }\r\n        const digits = {\r\n            integer: Math.max(target.integer.length, subNum.integer.length),\r\n            decimal: Math.max(target.decimal.length, subNum.decimal.length),\r\n        };\r\n        let borrow = false;\r\n        let sumValue = zip([\r\n            target.getNumber(digits.integer, digits.decimal),\r\n            subNum.getNumber(digits.integer, digits.decimal)\r\n        ]).reduceRight((total, [targetNumber, addNumber])=>{\r\n            // IDEA: const borrow = Number(last(total));\r\n            let subtotal = targetNumber - addNumber - Number(borrow);\r\n            borrow = isNegative(subtotal);\r\n            if(borrow)subtotal += 10;\r\n            return splice(total, 0, 1, String(Math.abs(subtotal)).padStart(2, \"0\"));\r\n        }, \"0\");\r\n        if(borrow){\r\n            const big = `1${\"0\".repeat(sumValue.length - 1)}`;\r\n            sumValue = BigFloat.subtraction(big, sumValue);\r\n            // IDEA:\r\n            // sumValue = [...sumValue].map(char=>(\r\n            //     10 - Number(char)\r\n            // )).join(\"\");\r\n        }\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(digits.decimal);\r\n        // FIXME: 正しくない。大小によって判断すべき\r\n        const max2 = BigFloat.max2(target, subNum);\r\n        result.isPositive = max2 === subNum\r\n            ? !subNum.isPositive\r\n            : target.isPositive;\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Beta: 乗算\r\n     *\r\n     * FIXME: 桁がずれるため使い物にならない\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} mulNum\r\n     * @return {BigFloat} result\r\n     */\r\n    static multiplication(target, mulNum){\r\n        target = new BigFloat(target);\r\n        mulNum = new BigFloat(mulNum);\r\n        // 項のどちらかが0なら0を返す。\r\n        if(BigFloat.equals(target, 0) || BigFloat.equals(mulNum, 0))\r\n            return new BigFloat();\r\n        // Numberで計算可能ならNumberで計算\r\n        const sumLength = target.integer.length + mulNum.integer.length;\r\n        if(sumLength < 16 && !target.decimal && !mulNum.decimal)\r\n            return new BigFloat(Number(target) * Number(mulNum));\r\n        // 計算\r\n        const targetNumbers = target.getNumber();\r\n        const mulNumbers = mulNum.getNumber();\r\n        const sumValue = mulNumbers.reduceRight((total, mulNumber)=>{\r\n            const subtotal = targetNumbers.reduceRight((total2, targetNumber)=>{\r\n                const fst = Number(first(total2));\r\n                const subtotal2 = String(fst + mulNumber * targetNumber);\r\n                return splice(total2, 0, 1, subtotal2.padStart(2, \"0\"));\r\n            }, \"0\");\r\n            return BigFloat.addition(total, subtotal).toString();\r\n        }, \"0\");\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint(target.decimal.length + mulNum.decimal.length);\r\n        result.setSign(target.isPositive === mulNum.isPositive);\r\n        return result.format();\r\n    }\r\n    power(){}\r\n    /**\r\n     * Alpha: 除算\r\n     *\r\n     * FIXME: 符号によっては無限ループ\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} target\r\n     * @param {NumberTypes} divNum\r\n     * @param {Number} validDigit\r\n     * @return\r\n     */\r\n    static division(target, divNum, validDigit=32){\r\n        target = new BigFloat(target);\r\n        divNum = new BigFloat(divNum);\r\n        if(BigFloat.equals(divNum, Infinity))\r\n            return new BigFloat();\r\n        if(BigFloat.equals(divNum, -Infinity))\r\n            return new BigFloat(-0);\r\n        if(BigFloat.equals(divNum, 0))\r\n            return new BigFloat(NaN);\r\n        if(BigFloat.equals(target, 0))\r\n            return new BigFloat();\r\n        const sumValue = forIndex(Infinity, /** @param {Number} i*/ (i)=>{\r\n            target = BigFloat.subtraction(target, divNum);\r\n            return target.isPositive ? void 0 : i;\r\n        });\r\n        const result = new BigFloat();\r\n        result.setNumber(sumValue);\r\n        result.setDecimalPoint();\r\n        return result.format();\r\n    }\r\n    /**\r\n     * Alpha: 余剰\r\n     *\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} dividend 被除数(割られる数)\r\n     * @param {NumberTypes} divisor 除数(割る数)\r\n     * @returns\r\n     */\r\n    static surplus(dividend, divisor){\r\n        let terget = new BigFloat(dividend);\r\n        const divisor_ = new BigFloat(divisor);\r\n        divisor_.setSign(terget);\r\n        const result = new BigFloat(doWhile((Continue)=>{\r\n            const subQuotient = BigFloat.subtraction(terget, divisor_);\r\n            if(BigFloat.equals(subQuotient, 0))\r\n                return 0;\r\n            if(terget.isPositive === subQuotient.isPositive){\r\n                terget = subQuotient;\r\n                return Continue;\r\n            }\r\n            return terget;\r\n        }));\r\n        result.setSign(terget);\r\n        return result;\r\n    }\r\n    /**\r\n     * WIP: In development\r\n     *\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes} dividend\r\n     * @param {NumberTypes} divisor\r\n     * @param {Number} [maxDigit=100]\r\n     * @returns\r\n     */\r\n    static div_WIP(dividend, divisor, maxDigit=100){\r\n        const quotientList_商 = [];\r\n        let isComplete = false;\r\n        const remainders = [];\r\n        // 小数部の桁数が maxFractionPartLength に到達するまでループで処理する。\r\n        // 割り切れたり、循環節を検出できた等の理由で、除算が完了した場合はtrue。\r\n        // 桁数の不足等で除算が完了していない場合はfalse。\r\n        const recurringStartIndex = forIndex(maxDigit, ()=>{\r\n            const remainder = Number(BigFloat.surplus(dividend, divisor));\r\n            // 除算の商を求める。被除数から剰余を減算しておくことで、割り切れる除算を実行する。\r\n            quotientList_商.push((dividend - remainder) / divisor);\r\n            if(remainder === 0){\r\n                // 割り切れた\r\n                isComplete = true;\r\n                return -1;\r\n            }\r\n            const recurringStartIndex = remainders.indexOf(remainder);\r\n            if(recurringStartIndex !== -1){\r\n                // 循環節を検出\r\n                isComplete = true;\r\n                return recurringStartIndex;\r\n            }\r\n            dividend = remainder * 10;\r\n            remainders.push(remainder);\r\n            return void 0;\r\n        });\r\n        const loopPoint = recurringStartIndex === -1 ? Infinity : recurringStartIndex;\r\n        const integer = quotientList_商.shift();\r\n        const decimal = quotientList_商.slice(0, loopPoint);\r\n        const 循環小数 = quotientList_商.slice(loopPoint);\r\n        return { integer, decimal, 循環小数, isComplete };\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @memberof BigFloat\r\n     * @static\r\n     * @param {NumberTypes[]} numbers\r\n     * @returns\r\n     */\r\n    static equals(...numbers){\r\n        numbers = numbers.map((number)=>(\r\n            new BigFloat(number).toString()\r\n        ));\r\n        return equals(...numbers);\r\n    }\r\n\r\n    // sur(number){\r\n    //     return this;\r\n    // }\r\n}\r\n","\r\n// TODO: ハイパー演算\r\nimport {previous} from \"../utility/loop/index\";\r\n\r\nconst hyperCall = (a, lebel, b)=>{\r\n    if(lebel === 3)\r\n        return a ** b;\r\n    if(b === 0)\r\n        return 1;\r\n    console.log(a, lebel, b);\r\n    lebel--;\r\n    return previous(--b, prev=>(\r\n        console.log(prev)\r\n        || hyperCall(a, lebel, prev)\r\n    ), a);\r\n};\r\n\r\nexport const hyper = (a, lebel, b=a)=>{\r\n    switch(lebel){\r\n    case 0:\r\n        return ++b;\r\n    case 1:\r\n        return a + b;\r\n    case 2:\r\n        return a * b;\r\n    default:\r\n        return hyperCall(a, lebel, b);\r\n    }\r\n};\r\n","\r\n// export const add = (number1, number2)=>(\r\n//     number1 + number2\r\n// );\r\n// export const sub = (...numbers)=>{};\r\n// export const mul = (...numbers)=>{};\r\n// export const div = (...numbers)=>{};\r\n\r\n/**\r\n * 引数の絶対値を返す。\r\n * @param {Number} number\r\n */\r\nexport const abs = number=>(\r\n    number < 0 ||\r\n    Object.is(-0, number) ||\r\n    Object.is(BigInt(-0), number)\r\n        ? -number : Number(number)\r\n);\r\n\r\n/**\r\n * 引数の中で一番小さい値を返す。\r\n * @param  {...Number} args\r\n */\r\nexport const min = (...args)=>(\r\n    args.reduce((minValue, value)=>(\r\n        minValue < value ? minValue : value\r\n    ), Infinity)\r\n);\r\n\r\n/**\r\n * 引数の中で一番大きい値を返す。\r\n * @param  {...Number} args\r\n */\r\nexport const max = (...args)=>(\r\n    args.reduce((maxValue, value)=>(\r\n        maxValue > value ? maxValue : value\r\n    ), -Infinity)\r\n);\r\n\r\n/**\r\n * 階上。\r\n * @param {Number} num\r\n */\r\nexport const factorial = num=>{\r\n    if(Number.isNaN(num) || (!Number.isFinite(num) && typeof num !== \"bigint\") || typeof num !== \"number\" && typeof num !== \"bigint\")\r\n        return num;\r\n    for(let i = num;i > 2;num *= --i);\r\n    return num ? num : ++num;\r\n};\r\n\r\n/**\r\n * 平均値\r\n * @param  {...Number} numbers\r\n */\r\nexport const average = (...numbers)=>{\r\n    const total = numbers.reduce((subTotal, number)=>(subTotal + number), 0);\r\n    return total / numbers.length;\r\n};\r\n\r\n/**\r\n * 中央値\r\n * @param  {...Number} numbers\r\n */\r\nexport const median = (...numbers)=>{\r\n    numbers.sort();\r\n    const center = (numbers.length + 1) / 2;\r\n    if(Number.isInteger(center))\r\n        return numbers[center];\r\n    return average(\r\n        numbers[Math.floor(center)],\r\n        numbers[Math.ceil(center)]\r\n    );\r\n};\r\n\r\n// TODO: sin\r\n\r\n// TODO: cos\r\n\r\n// TODO: tan\r\n\r\n// export const diff = (n1, n2)=>abs(n1-n2);\r\n\r\n// TODO: 複素数\r\n// export class Complex {}\r\n\r\n// TODO: 公倍数, 公約数\r\n/*\r\npackage_rei.addModule(\"math.ack\", ({modules: {math}})=>).addModule(\"math.Chain\", ()=>class Chain {\r\n    constructor() {\r\n        this.chain = [];\r\n    }\r\n    chain(num){\r\n        this.chain.push(num);\r\n    }\r\n    sum(){}\r\n});\r\n*/\r\n","\r\nimport {isPrime} from \"../utility/is/number\";\r\n\r\n// TODO: xorshift\r\n// const seedRandom = seed=>{\r\n//     let x = seed * seed;\r\n//     x ^= (x << 13);\r\n//     x -= seed;\r\n//     x ^= (x >> 17);\r\n//     x += seed;\r\n//     x ^= (x << 5);\r\n//     return (x * x - seed) / seed;\r\n// };\r\n\r\nconst sqrt5 = Math.sqrt(5);\r\n/**\r\n * N番目のフィボナッチ数を取得する。\r\n * @param {Number} frequency N番目の指定\r\n */\r\nexport const fibonacci$ = frequency=>{\r\n    const x = Math.pow((1 + sqrt5) / 2, frequency);\r\n    const y = Math.pow((1 - sqrt5) / 2, frequency);\r\n    return Math.round((x - y) / sqrt5);\r\n};\r\n\r\n// /**\r\n//  * フィボナッチ数列のジェネレーター。\r\n//  *\r\n//  * @param {Number} frequency Maximum number of times fibonacci number is generated\r\n//  * @param {Number} seed\r\n//  */\r\n// export const fibonacci = function* (frequency=Infinity, seed=1){\r\n//     // eslint-disable-next-line no-undef\r\n//     for(let prev = BigInt(seed), fib = BigInt(0);frequency--;)\r\n//         yield fib = prev + (prev = fib);\r\n// };\r\n\r\n// /**\r\n//  * 素数のジェネレーター。\r\n//  *\r\n//  * @param {Number} frequency Maximum number of times prime number is generated\r\n//  */\r\n// export const prime = function* (frequency=Infinity){\r\n//     yield 2;\r\n//     for(let i = 3;frequency--;i += 2)\r\n//         if(isPrime(i))yield i;\r\n//         else frequency++;\r\n// };\r\n\r\n/**\r\n * 素因数分解。\r\n *\r\n * @param {Number} number Numbers to factor\r\n * @return Array of prime factor of `number`\r\n * @example\r\n * primeFactorization(200560490130);\r\n * // => [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]\r\n */\r\nexport const primeFactorization = number=>{\r\n    if(Number.isNaN(number) || !Number.isFinite(number) || typeof number !== \"number\")\r\n        return [];\r\n    const result = [];\r\n    while(number % 2 === 0){\r\n        result.push(2);\r\n        number /= 2;\r\n    }\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        while(number % i === 0){\r\n            result.push(i);\r\n            number /= i;\r\n        }\r\n    if(number > 1)result.push(number);\r\n    return result;\r\n};\r\n","\r\n// eslint-disable-next-line spaced-comment\r\n/*!\r\n * reiyayakko-core\r\n * Copyright 2020 reiyayakko\r\n * License MIT\r\n */\r\n\r\nexport const env = {\r\n    version: \"1.1.1\",\r\n};\r\n\r\n// export * as command from \"./command/index.js\";\r\nimport * as utility from \"./utility/index.js\";\r\nimport * as object from \"./object/index.js\";\r\nimport * as math from \"./math/index.js\";\r\nexport {utility, object, math};\r\n"],"names":["const","isUndefined","let","forOf","substitute","this","arguments"],"mappings":"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"}
