const e=e=>void 0===e,t=t=>null===t||e(t);var r=Object.freeze({__proto__:null,execute:(e,t)=>e.apply(null,t),typeOf:e=>Object.prototype.toString.call(e).slice(8,-1),substitute:(e,r)=>t(e)?r:e,tryCall:(e,t,r=null)=>"function"==typeof e?e.apply(r,t):e,debounce:(e,t)=>{let r;return function(){clearTimeout(r),r=setTimeout(e.apply,t,this,arguments)}},uniq:e=>{const t=[];return e.filter(e=>{const r=t.includes(e);return r||t.push(e),!r})},isUndefined:e,isNull:t,isRegExp:e=>"regexp"===modules.typeof(e),isObject:e=>{const t=typeof e;return"function"===t||"object"===t&&null!==e},isEmpty:e=>"string"==typeof e||Array.isArray(e)?0===e.length:"object"==typeof e&&0===modules.allKeys(e).length,isNegative:e=>"number"==typeof e?e<0:"boolean"==typeof e&&!e,gurop:(e,t)=>{result=new Map;for(const r of e){const e=t(r),n=result.get(e)||[];n.push(r),result.set(e,n)}return result},count:(e,t)=>{let r=0;for(const n of e)r+=Boolean(t(n));return r},previous:(e,t,r)=>{for(;e--;)r=t(r);return r},inorder:(e,...t)=>{for(const r of t)e=r(e);return e},iterate:function*(e){e[Symbol.iterator]&&(yield*e)},equals:(...e)=>{let t=e.shift();return e.every(e=>Number.isNaN(t)?Number.isNaN(t=e):t===(t=e))},zip:function*(...e){if("function"==typeof((e,t=1)=>e[e.length-t])(e)){const t=e.pop();e=e.map(t)}const t=e.reduce((e,t)=>Math.max(e,t.length),0);for(let r=0;t>r;r++)yield e.reduce((e,t)=>(e.push(t[r]),e),[])},through:function*(e,t,r){for(r=Math.abs(r||1),e>t&&(r=-r);Math.abs(e-t)>=Math.abs(r);)yield e,e+=r;yield e}});const n=new WeakMap;var i=Object.freeze({__proto__:null,has:(e,t)=>Object.hasOwnProperty.call(e,t),allKeys:e=>[...Object.getOwnPropertyNames(e),...Object.getOwnPropertySymbols(e)],watch:(e,t,r)=>{const i=n.has(e)?n.get(e):{},o=Object.getOwnPropertyDescriptor(e,t);if(!o.hasOwnProperty("value"))return;i[t]=o,n.set(e,i);let s=e[t];Object.defineProperty(e,t,{get:()=>s,set:e=>{r(s,s=e)},enumerable:!0,configurable:!0})},watchStop:(e,t)=>{const r=n.get(e)[t];Object.defineProperty(e,t,{...r,value:e[t]})}});class o{constructor(e){const[t,r]=Num2FracStr(e).split(".");this.integer=t||"",this.decimal=r||"",this.negative=!1}toString(){const e=this.integer+(this.decimal&&"."+this.decimal);return(this.negative?"-":"+").concat(e)}_typeCheck(e){return Number.isNaN(e)||"string"!=typeof e&&!Number.isFinite(e)}add(e){if(this._typeCheck(e))return this;const t=e instanceof o?e:new o(e);let r=!1;const n=Math.max(t.integer.length,this.integer.length),i=Math.max(t.decimal.length,this.decimal.length),s=[...this.integer.padStart(n,"0"),...[...this.decimal.padEnd(i,"0")].reverse()],u=[...t.integer.padStart(n,"0"),...[...t.decimal.padEnd(i,"0")].reverse()];console.log({number1:s,number2:u,integerLength:n,decimalLength:i});const c=[...rei.utility.zip(s,u)].reduceRight((e,[t,n])=>{let i=Number(t)+Number(n)+r;return r=i>=10,r&&(i=Number(i)-10),String(i).concat(e)},"");return console.log(r),this.integer=(r?"1":"")+(i?c.slice(0,-i):c),this.decimal=i?c.slice(-i):"",this}sub(e){if(this._typeCheck(e))return this;new o(e);return this}mul(...e){for(const t of e)this._typeCheck(t);return this}div(...e){for(const t of e)this._typeCheck(t);return this}sur(e){return this}static eval(e){for(const t of e);}}const s=e=>e<0?-e:number.toNumber(e),u=Math.sqrt(5),c=e=>{if(2===e)return!0;if(Number.isNaN(e)||!Number.isFinite(e)||e<2||e%2==0)return!1;for(let t=3,r=Math.sqrt(e);t<=r;t+=2)if(e%t==0)return!1;return!0};var l=Object.freeze({__proto__:null,abs:s,min:(...e)=>e.reduce((e,t)=>e<t?e:t,1/0),max:(...e)=>e.reduce((e,t)=>e<t?e:t,-1/0),diff:(e,t)=>s(e-t),factorial:e=>{if(Number.isNaN(e)||!Number.isFinite(e)&&"bigint"!=typeof e||"number"!=typeof e&&"bigint"!=typeof e)return e;for(let t=e;t>2;e*=--t);return e||++e},fibonacci$:e=>{const t=Math.pow((1+u)/2,e),r=Math.pow((1-u)/2,e);return Math.round((t-r)/u)},fibonacci:function*(e=1/0){for(let t=1n,r=0n;e--;)yield r=t+(t=r)},isPrime:c,prime:function*(e=1/0){yield 2;for(let t=3;e--;t+=2)c(t)?yield t:e++},primeFactorization:e=>new Promise((t,r)=>{if(Number.isNaN(e)||!Number.isFinite(e)||"number"!=typeof e)return void r(new Error("Only the numerical value can be factorized"));const n=[];for(;e%2==0;)n.push(2),e/=2;for(let t=3,r=Math.sqrt(e);t<=r;t+=2)for(;e%t==0;)n.push(t),e/=t;e>1&&n.push(e),t(n)}),NumToStr:e=>{const t=String(e),r=t.match(/^([+-]?)0*([1-9][0-9]*|)(?:\.([0-9]*[1-9]|)0*)?(?:[eE]([+-]?[0-9]+))?$/);if(!r){if("number"==typeof e)return t;throw new Error(`Invalid Number: "${t}"`)}const n="-"===r[1]?"-":"",i=r[2],o=r[3]?r[3]:"",s=Number(r[4]);let u="";if(s){const e=i+o,t=e.length;if(0<t){const r=i.length+s;u=t<=r?e.padEnd(r,"0"):0<r?e.slice(0,r)+"."+e.slice(r):"0."+"0".repeat(-r)+e}}else o?u=(i||"0")+"."+o:i&&(u=i);return u?n+u.replace(/^(?:0(?!\.|$))+/,"").replace(/(?:\.0+|(\.[0-9]*[1-9])0+)$/,"$1"):"0"},Num:e=>{const[t,r]=String(e).split(".");return{integer:t,decimal:r,negative:negative}},BigFloat:o});export{l as math,i as object,r as utility};
