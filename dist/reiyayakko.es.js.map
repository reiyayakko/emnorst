{"version":3,"file":"reiyayakko.es.js","sources":["../src/utility/is.js","../src/utility/loop.js","../src/utility/equals.js","../src/utility/generator.js","../src/utility/index.js","../src/object/index.js","../src/lib/Num2DecStr.js","../src/math/bigfloat.js","../src/math/index.js"],"sourcesContent":["\r\nexport const isUndefined = value=>(\r\n    value === void 0\r\n);\r\nexport const isNull = value=>(\r\n    value === null || isUndefined(value)\r\n);\r\nexport const isRegExp = obj=>(\r\n    modules.typeof(obj) === \"regexp\"\r\n);\r\nexport const isObject = obj=>{\r\n    const type = typeof obj;\r\n    return type === \"function\" || type === \"object\" && obj !== null;\r\n};\r\nexport const isEmpty = value=>{\r\n    if(typeof value === \"string\" || Array.isArray(value))\r\n        return value.length === 0;\r\n    if(typeof value === \"object\")\r\n        return modules.allKeys(value).length === 0;\r\n    return false;\r\n};\r\nexport const isNegative = value=>{\r\n    if(typeof value === \"number\")\r\n        return value < 0;\r\n    if(typeof value === \"boolean\")\r\n        return !value;\r\n    return false;\r\n};\r\n","\r\nexport const gurop = (array, func)=>{\r\n    result = new Map();\r\n    for(const value of array){\r\n        const key = func(value)\r\n        const values = result.get(key) || [];\r\n        values.push(value);\r\n        result.set(key, values);\r\n    }\r\n    return result;\r\n};\r\n// export const partition = (array, func)=>{};\r\n// INFO: findのマッチした数版\r\nexport const count = (array, func)=>{\r\n    let number = 0;\r\n    for(const value of array)\r\n        number += Boolean(func(value));\r\n    return number;\r\n};\r\nexport const previous = (level, func, arg)=>{\r\n    for(;level--;)\r\n        arg = func(arg);\r\n    return arg;\r\n};\r\nexport const inorder = (arg, ...funcs)=>{\r\n    for(const func of funcs)\r\n        arg = func(arg);\r\n    return arg;\r\n}\r\n// TODO: iterate - 何でもループ\"できるようにする\"やつ\r\nexport const iterate = function* (value){\r\n    if(value[Symbol.iterator])\r\n        yield* value;\r\n}\r\n","\r\nexport const equals = (...values)=>{\r\n    // SameValueZero\r\n    let prev = values.shift();\r\n    return values.every(value=>(\r\n        Number.isNaN(prev)\r\n            ? Number.isNaN(prev=value)\r\n            : prev===(prev=value)\r\n    ));\r\n};\r\n","\r\nconst last = (array, index=1)=>(\r\n    array[array.length - index]\r\n);\r\nexport const zip = function* (...arrays){\r\n    if(typeof last(arrays) === \"function\"){\r\n        const func = arrays.pop();\r\n        arrays = arrays.map(func);\r\n    }\r\n    const max = arrays.reduce((length, array)=>(\r\n        Math.max(length, array.length)\r\n    ), 0);\r\n    for(let i=0;max>i;i++){\r\n        yield arrays.reduce((iarrays, array)=>{\r\n            iarrays.push(array[i]);\r\n            return iarrays;\r\n        }, []);\r\n    }\r\n};\r\nexport const through = function* (start, end, increment){\r\n    increment = Math.abs(increment || 1);\r\n    if(start > end)increment = -increment;\r\n    while(Math.abs(start - end) >= Math.abs(increment)){\r\n        yield start;\r\n        start += increment;\r\n    }\r\n    yield start;\r\n};\r\n","\r\nexport * from \"./is\";\r\nexport * from \"./loop\";\r\nexport * from \"./equals\";\r\nexport * from \"./generator\";\r\nimport * as is from \"./is\";\r\n// TEMP:\r\n// export class ArrayLike extends Array {\r\n//     constructor(){\r\n//         super();\r\n//         console.log(this);\r\n//     }\r\n// }\r\n// export class Temp {\r\n//     constructor(){\r\n//         this.gen = this.gen.bind(this);\r\n//         return this.gen;\r\n//     }\r\n//     gen(){\r\n//         console.log(this);\r\n//         return this.gen;\r\n//     }\r\n// }\r\n// export class Memo {\r\n//     constructor(func){\r\n//         this.function = func;\r\n//         this.existing = new Map();\r\n//     }\r\n//     execute(args){\r\n//         if(this.existing.has(args))\r\n//             return this.existing.get(args);\r\n//         const result = execute(this.function, args);\r\n//         this.existing.set(args, result);\r\n//         return result;\r\n//     }\r\n// }\r\n// String instruction\r\nexport const execute = (func, args)=>func.apply(null, args);\r\nexport const typeOf = object=>(\r\n    Object.prototype.toString.call(object).slice(8, -1)\r\n);\r\n// TODO: require\r\nexport const substitute = (value, substitute)=>(\r\n    is.isNull(value)\r\n        ? substitute\r\n        : value\r\n);\r\nexport const tryCall = (value, args, that=null)=>(\r\n    typeof value === \"function\"\r\n        ? value.apply(that, args)\r\n        : value\r\n);\r\n// export const and = (...arrays)=>{}\r\n// export const xor = (...arrays)=>{}\r\nexport const debounce = (func, wait)=>{\r\n    let id;\r\n    return function(){\r\n        clearTimeout(id);\r\n        id = setTimeout(func.apply, wait, this, arguments);\r\n    }\r\n};\r\nexport const uniq = array=>{\r\n    const existings = [];\r\n    return array.filter(value=>{\r\n        const existing = existings.includes(value);\r\n        if(!existing)existings.push(value);\r\n        return !existing;\r\n    });\r\n};\r\n","\r\nexport const has = (object, propName)=>(\r\n    Object.hasOwnProperty.call(object, propName)\r\n);\r\nexport const allKeys = object=>{\r\n    const propNames = Object.getOwnPropertyNames(object);\r\n    const symbols = Object.getOwnPropertySymbols(object);\r\n    return [...propNames, ...symbols];\r\n};\r\nconst watchMap = new WeakMap();\r\nexport const watch = (obj, propName, func)=>{\r\n    const descriptors = watchMap.has(obj)\r\n        ? watchMap.get(obj) : {};\r\n    const descriptor = Object.getOwnPropertyDescriptor(obj, propName);\r\n    if(!descriptor.hasOwnProperty(\"value\"))\r\n        return;\r\n    descriptors[propName] = descriptor;\r\n    watchMap.set(obj, descriptors);\r\n    let value = obj[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        get: ()=>value,\r\n        set: newValue=>{\r\n            func(value, value = newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n};\r\nexport const watchStop = (obj, propName)=>{\r\n    const descriptor = watchMap.get(obj)[propName];\r\n    Object.defineProperty(obj, propName, {\r\n        ...descriptor,\r\n        value: obj[propName]\r\n    });\r\n};\r\n/*\r\nreiyayakkoPackage.addModule({\r\n    name: \"object.structure\",\r\n    variable(variable){\r\n        variable.apply = (base, apply, name, nameTo=name)=>{\r\n            if(typeof apply[name] === \"object\")\r\n                variable.modules.structure(base[nameTo], apply[name]);\r\n            else\r\n                base[nameTo] = apply[name];\r\n        };\r\n    }\r\n}, ({modules, apply})=>(baseObj={}, applyObj={})=>{\r\n    for(const propName of modules.object.allKeys(applyObj)){\r\n        if(typeof propName === \"string\"){\r\n            const propNames = propName.split(\".\");\r\n            const deepestPropName = propNames.pop();\r\n            let obj = baseObj;\r\n            for(const name of propNames)\r\n                obj = (obj[name] = {});\r\n            apply(obj, applyObj, propName, deepestPropName);\r\n        }else{\r\n            apply(baseObj, applyObj, propName);\r\n        }\r\n    }\r\n    return baseObj;\r\n});\r\nreiyayakkoPackage.addModule(\"object.Map\", ({modules})=>class ObjectMap {\r\n    constructor(map){\r\n        this.map = [];\r\n    }\r\n    static _find(key){\r\n        return ([entryKey])=>modules.equals(entryKey, key);\r\n    }\r\n    get size(){\r\n        return this.map.length;\r\n    }\r\n    get(key){\r\n        return this.map.find(modules.object.Map._find(key));\r\n    }\r\n    set(key, value){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            this.map.push([key, value]);\r\n        else\r\n            this.map[index] = [key, value];\r\n    }\r\n    has(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        return index !== -1;\r\n    }\r\n    delete(key){\r\n        const index = this.map.findIndex(modules.object.Map._find(key));\r\n        if(index === -1)\r\n            return false;\r\n        this.map.splice(index, 1);\r\n        return true;\r\n    }\r\n    clear(){\r\n        this.map = [];\r\n    }\r\n    entries(){\r\n        return this.map.map(entry=>entry);\r\n    }\r\n    forEach(){\r\n        this.map.forEach(...arguments);\r\n    }\r\n    keys(){\r\n        return this.map.map(([key])=>key);\r\n    }\r\n    values(){\r\n        return this.map.map(([,value])=>value);\r\n    }\r\n    [Symbol.iterator](){\r\n        const that = this;\r\n        return (function* (){\r\n            for(const entry of that.map)\r\n                yield entry;\r\n        })();\r\n    }\r\n});\r\nreiyayakkoPackage.addModule({\r\n    name: [\"object.Map.prototype\", Symbol.toStringTag],\r\n    enumerable: false,\r\n}, ()=>\"ObjectMap\");\r\n//*/\r\n","/**\n * 数値を整数・少数表記に変換する。\n * 内部的には、指数表記の文字列をパースし、小数表記に変換している。\n *\n * @param {number|string} number 変換したい数値、または数値形式の文字列。\n *     数値型であればNaNやInfinityも指定できるが、そのまま文字列化して返される。\n * @return {string} 小数表記の数値文字列\n * @throws 適切な形式の数値、または文字列が与えられなかった場合に発生する。\n *\n * Note: この関数は、JavaScriptで正確な数値演算を行うために使う**べきではない**。\n *       この関数でなければ変換できない数値は、JavaScriptの内部データの時点で誤差が発生しており、正確な演算は期待できない。\n *       また、この関数によって変換された数値が厳密に正しい事も保証しない。\n *       この関数は、JavaScriptで生成した数値を「見やすく表示する」ためにのみ使用するべきである。\n * Note: この関数の設計が正しければ（つまり、バグが無ければ）、エラーが発生するのは誤った形式の文字列を与えられた場合のみとなる。\n *       逆に言えば、数値のプリミティブ型が与えられた場合は、いかなる場合でもエラーは発生しないはずである。\n *       もし、数値が与えられた場合にもエラーが発生してしまった場合は、この関数のバグを修正する必要がある。\n */\nexport const Num2FracStr = number => {\n  /*\n   * 引数の値を文字列化\n   */\n  const numStr = String(number);\n\n  /*\n   * 正規表現でマッチング\n   */\n  const match = numStr.match(/^([+-]?)0*([1-9][0-9]*|)(?:\\.([0-9]*[1-9]|)0*)?(?:[eE]([+-]?[0-9]+))?$/);\n\n  /*\n   * 引数の型が適切な形式ではない場合…\n   */\n  if (!match) {\n    if (typeof number == \"number\") {\n      /*\n       * 引数の型が数値であれば、文字列化した値をそのまま返す\n       */\n      return numStr;\n    } else {\n      /*\n       * 引数の型が数値でなければ、エラーにする\n       */\n      throw new Error(`Invalid Number: \"${numStr}\"`);\n    }\n  }\n\n  /** @type {string} 数の符号 */\n  const sign = (match[1] === \"-\" ? \"-\" : \"\");\n  /** @type {string} 仮数部の整数部 */\n  const mantissa_int = match[2];\n  /** @type {string} 仮数部の少数部 */\n  const mantissa_frac = (match[3] ? match[3] : \"\");\n  /** @type {number} 指数部 */\n  const exponent = Number(match[4]);\n\n  let returnValue = \"\";\n\n  if (exponent) {\n    /*\n     * exponentがundefinedではなく（正規表現で指数部がマッチしていて）、\n     * かつ、0ではない場合、指数表記として処理を開始する\n     *\n     * Note: 指数部が0の場合、ここで処理する意味は無いので少数表記として処理する。\n     *       よって、指数部が0以外の場合にここで処理する。\n     * Note: undefinedは数値化されるとNaNになり、false相当となる。\n     *       一方、0の場合もfalse相当となる。\n     *       ので、↑の条件文はコレで合っている。\n     */\n\n    /** @type {string} */\n    const mantissa_str = mantissa_int + mantissa_frac;\n    /** @type {number} */\n    const mantissa_len = mantissa_str.length;\n\n    if (0 < mantissa_len) {\n      /** @type {number} */\n      const mantissa_int_len = mantissa_int.length + exponent;\n  \n      /*\n      12.145e+7  121450000             ;  mantissa_str: \"12145\"  mantissa_int_len: 9   ;  小数部が存在しない数値\n      12.145e+6   12145000             ;  mantissa_str: \"12145\"  mantissa_int_len: 8   ;  小数部が存在しない数値\n      12.145e+5    1214500             ;  mantissa_str: \"12145\"  mantissa_int_len: 7   ;  小数部が存在しない数値\n      12.145e+4     121450             ;  mantissa_str: \"12145\"  mantissa_int_len: 6   ;  小数部が存在しない数値\n      12.145e+3      12145             ;  mantissa_str: \"12145\"  mantissa_int_len: 5   ;  小数部が存在しない数値\n      12.145e+2       1214.5           ;  mantissa_str: \"12145\"  mantissa_int_len: 4   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e+1        121.45          ;  mantissa_str: \"12145\"  mantissa_int_len: 3   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e0          12.145         ;  mantissa_str: \"12145\"  mantissa_int_len: 2   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e-1          1.2145        ;  mantissa_str: \"12145\"  mantissa_int_len: 1   ;  小数部が存在し、かつ、1より大きい数値\n      12.145e-2          0.12145       ;  mantissa_str: \"12145\"  mantissa_int_len: 0   ;  小数部が存在し、かつ、1未満の数値\n      12.145e-3          0.012145      ;  mantissa_str: \"12145\"  mantissa_int_len: -1  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-4          0.0012145     ;  mantissa_str: \"12145\"  mantissa_int_len: -2  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-5          0.00012145    ;  mantissa_str: \"12145\"  mantissa_int_len: -3  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-6          0.000012145   ;  mantissa_str: \"12145\"  mantissa_int_len: -4  ;  小数部が存在し、かつ、1未満の数値\n      12.145e-7          0.0000012145  ;  mantissa_str: \"12145\"  mantissa_int_len: -5  ;  小数部が存在し、かつ、1未満の数値\n      */\n\n      if (mantissa_len <= mantissa_int_len) {\n        /*\n         * 小数部が存在しない数値（ex: 0, 12, 176, 1214500）の場合の処理\n         */\n        returnValue = mantissa_str.padEnd(mantissa_int_len, \"0\");\n\n      } else if (0 < mantissa_int_len) {\n        /*\n         * 小数部が存在し、かつ、1より大きい数値（ex: 1.26, 1.0009, 121.45）の場合の処理\n         */\n        returnValue = mantissa_str.slice(0, mantissa_int_len) + \".\" + mantissa_str.slice(mantissa_int_len);\n\n      } else {\n        /*\n         * 小数部が存在し、かつ、1未満の数値（ex: 0.26, 0.20098, 0.0012145）の場合の処理\n         */\n        returnValue = \"0.\" + \"0\".repeat(-mantissa_int_len) + mantissa_str;\n      }\n    }\n\n  } else if (mantissa_frac) {\n    /*\n     * 少数表記の場合\n     */\n    returnValue = (mantissa_int || \"0\") + \".\" + mantissa_frac;\n\n  } else if (mantissa_int) {\n    /*\n     * 整数表記の場合\n     */\n    returnValue = mantissa_int;\n  }\n\n  return (returnValue) ? sign + (\n    returnValue\n      /* 先頭の余計なゼロを削除 */\n      .replace(/^(?:0(?!\\.|$))+/, \"\")\n      /* 末尾の余計なゼロを削除 */\n      .replace(/(?:\\.0+|(\\.[0-9]*[1-9])0+)$/, \"$1\")\n  ) : \"0\";\n};\n\n","\r\nexport {Num2FracStr as NumToStr} from \"../lib/Num2DecStr\";\r\n\r\nexport const Num = number=>{\r\n    if(typeof number === \"number\");\r\n    const [integer, decimal] = String(number).split(\".\");\r\n    return {integer, decimal, negative};\r\n};\r\nexport class BigFloat {\r\n    constructor(number){\r\n        const [integer, decimal] = Num2FracStr(number).split(\".\");\r\n        this.integer = integer || \"\";\r\n        this.decimal = decimal || \"\";\r\n        this.negative = false;\r\n    }\r\n    toString(){\r\n        const number = this.integer + (this.decimal && \".\" + this.decimal);\r\n        return (this.negative ? \"-\" : \"+\").concat(number);\r\n    }\r\n    _typeCheck(valuue){\r\n        return Number.isNaN(valuue)\r\n            || (\r\n                typeof valuue !== \"string\"\r\n                && !Number.isFinite(valuue)\r\n            )\r\n    }\r\n    add(number){\r\n        if(this._typeCheck(number))return this;\r\n        const bigfloat = number instanceof BigFloat\r\n            ? number : new BigFloat(number);\r\n        let carry = false;\r\n        const integerLength = Math.max(bigfloat.integer.length, this.integer.length);\r\n        const decimalLength = Math.max(bigfloat.decimal.length, this.decimal.length);\r\n        const number1 = [\r\n            ...this.integer.padStart(integerLength, \"0\"),\r\n            ...[...this.decimal.padEnd(decimalLength, \"0\")].reverse()\r\n        ];\r\n        const number2 = [\r\n            ...bigfloat.integer.padStart(integerLength, \"0\"),\r\n            ...[...bigfloat.decimal.padEnd(decimalLength, \"0\")].reverse()\r\n        ];\r\n        console.log({number1, number2, integerLength, decimalLength})\r\n        const num = [...rei.utility.zip(number1, number2)].reduceRight((total, [dec1, dec2])=>{\r\n            let subtotal = Number(dec1) + Number(dec2) + carry;\r\n            carry = subtotal >= 10;\r\n            if(carry)subtotal = Number(subtotal) - 10;\r\n            return String(subtotal).concat(total);\r\n        }, \"\");\r\n        console.log(carry)\r\n        this.integer = (carry ? \"1\" : \"\") + (decimalLength ? num.slice(0, -decimalLength) : num);\r\n        this.decimal = decimalLength ? num.slice(-decimalLength) : \"\";\r\n        return this;\r\n    }\r\n    sub(number){\r\n        if(this._typeCheck(number))return this;\r\n        const bigfloat = new BigFloat(number);\r\n        let carry = false;\r\n        return this;\r\n    }\r\n    mul(...numbers){\r\n        for(const number of numbers){\r\n            if(this._typeCheck(number))continue;\r\n        }\r\n        return this;\r\n    }\r\n    div(...numbers){\r\n        for(const number of numbers){\r\n            if(this._typeCheck(number))continue;\r\n        }\r\n        return this;\r\n    }\r\n    sur(number){\r\n        return this;\r\n    }\r\n    static eval(formula){\r\n        for(const character of formula){\r\n            if(character === \"\\s\")\r\n                continue;\r\n        }\r\n    }\r\n}\r\n","\r\nexport const abs = x=>(\r\n    x < 0 ? -x : number.toNumber(x)\r\n);\r\nexport const min = (...args)=>(\r\n    args.reduce((min, value)=>(\r\n        min < value ? min : value\r\n    ), Infinity)\r\n);\r\nexport const max = (...args)=>(\r\n    args.reduce((max, value)=>(\r\n        max < value ? max : value\r\n    ), -Infinity)\r\n);\r\n// TODO: sin\r\n// TODO: cos\r\n// TODO: tan\r\nexport const diff = (n1, n2)=>abs(n1-n2);\r\nexport const factorial = num=>{\r\n    if(Number.isNaN(num) || (!Number.isFinite(num) && typeof num !== \"bigint\") || typeof num !== \"number\" && typeof num !== \"bigint\")\r\n        return num;\r\n    for(let i = num;i > 2;num *= --i);\r\n    return num ? num : ++num;\r\n};\r\nconst sqrt5 = Math.sqrt(5)\r\nexport const fibonacci$ = frequency=>{\r\n    const x = Math.pow((1 + sqrt5) / 2, frequency);\r\n    const y = Math.pow((1 - sqrt5) / 2, frequency);\r\n    return Math.round((x - y) / sqrt5);\r\n};\r\nexport const fibonacci = function* (frequency=Infinity){\r\n    for(let prev = 1n, fib = 0n;frequency--;)\r\n        yield fib = prev + (prev = fib);\r\n};\r\nexport const isPrime = number=>{\r\n    if(number === 2)\r\n        return true;\r\n    if(Number.isNaN(number) || !Number.isFinite(number) || number < 2 || number % 2 === 0)\r\n        return false;\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        if(number % i === 0)return false;\r\n    return true;\r\n};\r\nexport const prime = function* (frequency=Infinity){\r\n    yield 2;\r\n    for(let i = 3;frequency--;i += 2)\r\n        if(isPrime(i))yield i;\r\n        else frequency++;\r\n};\r\nexport const primeFactorization = number=>new Promise((resolve, reject)=>{\r\n    if(Number.isNaN(number) || !Number.isFinite(number) || typeof number !== \"number\"){\r\n        reject(new Error(\"Only the numerical value can be factorized\"));\r\n        return;\r\n    }\r\n    const result = [];\r\n    while(number % 2 === 0){\r\n        result.push(2);\r\n        number /= 2;\r\n    }\r\n    for(let i = 3, sqrt = Math.sqrt(number);i <= sqrt;i += 2)\r\n        while(number % i === 0){\r\n            result.push(i);\r\n            number /= i;\r\n        }\r\n    if(number > 1)result.push(number);\r\n    resolve(result);\r\n});\r\nexport * from \"./bigfloat\"\r\n// export class Complex {}\r\n/*\r\nimport package_rei from \"../package\";\r\npackage_rei.addModule(\"number\", ()=>class Number {\r\n    static toNumber(number){\r\n        return -(-number);\r\n    }\r\n});\r\npackage_rei.addModule(\"math._hyper\", ({modules})=>(a, n, b=a)=>{\r\n    switch(n){\r\n    case 0: return ++b;\r\n    case 1: return a + b;\r\n    case 2: return a * b;\r\n    case 3: return a ** b;\r\n    default: {\r\n        if(b === 0)return 1;\r\n        let prev = a;\r\n        for(;--b;)\r\n            prev = modules.math.hyper(a, --n, prev);\r\n        return prev;\r\n    }\r\n    }\r\n});\r\npackage_rei.addModule(\"math.hyper\", ({modules})=>(a, n, b=a)=>{\r\n    const stack = new modules.Stack();\r\n    while(1){\r\n        stack.push(modules.math._hyper);\r\n        stack.execute();\r\n    }\r\n});\r\n// TODO: 公倍数, 公約数\r\npackage_rei.addModule(\"math.ack\", ({modules: {math}})=>(x, y, z)=>{\r\n    if(math.min(x, y, z) < 0)\r\n        throw new Error(\"Negative argument cannot be specified for Ackermann function\");\r\n    if(x === 0)return ++y;\r\n    if(y === 0)return math.ack(--x, 1);\r\n    return math.ack(--x, math.ack(x, --y));\r\n}).addModule(\"math.Chain\", ()=>class Chain {\r\n    constructor() {\r\n        this.chain = [];\r\n    }\r\n    chain(num){\r\n        this.chain.push(num);\r\n    }\r\n    sum(){}\r\n});\r\n*/\r\n"],"names":["is.isNull","Num2FracStr"],"mappings":"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EAAE;AACzC,QAAQ,GAAG,UAAU;AACrB,QAAQ,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAW,GAAG,MAAM,IAAI;AACrC;AACA;AACA;AACA,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;AACvG;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,KAAK,EAAE;AACd,IAAI,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;AACnC;AACA;AACA;AACA,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK,MAAM;AACX;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,MAAM,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;AAC7C;AACA,EAAE,MAAM,YAAY,GAAG,KAAK,CAAC,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"}